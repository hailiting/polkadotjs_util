/*! For license information please see main.js.LICENSE.txt */
(()=>{var e,t,n={7509:e=>{e.exports=function(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e},e.exports.default=e.exports,e.exports.__esModule=!0},3399:e=>{var t=0;e.exports=function(e){return"__private_"+t+++"_"+e},e.exports.default=e.exports,e.exports.__esModule=!0},5318:e=>{e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.default=e.exports,e.exports.__esModule=!0},9742:(e,t)=>{"use strict";t.byteLength=function(e){var t=c(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,o=c(e),a=o[0],s=o[1],f=new i(function(e,t,n){return 3*(t+n)/4-n}(0,a,s)),d=0,u=s>0?a-4:a;for(n=0;n<u;n+=4)t=r[e.charCodeAt(n)]<<18|r[e.charCodeAt(n+1)]<<12|r[e.charCodeAt(n+2)]<<6|r[e.charCodeAt(n+3)],f[d++]=t>>16&255,f[d++]=t>>8&255,f[d++]=255&t;return 2===s&&(t=r[e.charCodeAt(n)]<<2|r[e.charCodeAt(n+1)]>>4,f[d++]=255&t),1===s&&(t=r[e.charCodeAt(n)]<<10|r[e.charCodeAt(n+1)]<<4|r[e.charCodeAt(n+2)]>>2,f[d++]=t>>8&255,f[d++]=255&t),f},t.fromByteArray=function(e){for(var t,r=e.length,i=r%3,o=[],a=16383,s=0,c=r-i;s<c;s+=a)o.push(f(e,s,s+a>c?c:s+a));return 1===i?(t=e[r-1],o.push(n[t>>2]+n[t<<4&63]+"==")):2===i&&(t=(e[r-2]<<8)+e[r-1],o.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"=")),o.join("")};for(var n=[],r=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a=0,s=o.length;a<s;++a)n[a]=o[a],r[o.charCodeAt(a)]=a;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function f(e,t,r){for(var i,o,a=[],s=t;s<r;s+=3)i=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(n[(o=i)>>18&63]+n[o>>12&63]+n[o>>6&63]+n[63&o]);return a.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},3550:function(e,t,n){!function(e,t){"use strict";function r(e,t){if(!e)throw new Error(t||"Assertion failed")}function i(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}function o(e,t,n){if(o.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(n=t,t=10),this._init(e||0,t||10,n||"be"))}var a;"object"==typeof e?e.exports=o:t.BN=o,o.BN=o,o.wordSize=26;try{a="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:n(6601).Buffer}catch(e){}function s(e,t){var n=e.charCodeAt(t);return n>=65&&n<=70?n-55:n>=97&&n<=102?n-87:n-48&15}function c(e,t,n){var r=s(e,n);return n-1>=t&&(r|=s(e,n-1)<<4),r}function f(e,t,n,r){for(var i=0,o=Math.min(e.length,n),a=t;a<o;a++){var s=e.charCodeAt(a)-48;i*=r,i+=s>=49?s-49+10:s>=17?s-17+10:s}return i}o.isBN=function(e){return e instanceof o||null!==e&&"object"==typeof e&&e.constructor.wordSize===o.wordSize&&Array.isArray(e.words)},o.max=function(e,t){return e.cmp(t)>0?e:t},o.min=function(e,t){return e.cmp(t)<0?e:t},o.prototype._init=function(e,t,n){if("number"==typeof e)return this._initNumber(e,t,n);if("object"==typeof e)return this._initArray(e,t,n);"hex"===t&&(t=16),r(t===(0|t)&&t>=2&&t<=36);var i=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<e.length&&(16===t?this._parseHex(e,i,n):(this._parseBase(e,t,i),"le"===n&&this._initArray(this.toArray(),t,n)))},o.prototype._initNumber=function(e,t,n){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(r(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===n&&this._initArray(this.toArray(),t,n)},o.prototype._initArray=function(e,t,n){if(r("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var o,a,s=0;if("be"===n)for(i=e.length-1,o=0;i>=0;i-=3)a=e[i]|e[i-1]<<8|e[i-2]<<16,this.words[o]|=a<<s&67108863,this.words[o+1]=a>>>26-s&67108863,(s+=24)>=26&&(s-=26,o++);else if("le"===n)for(i=0,o=0;i<e.length;i+=3)a=e[i]|e[i+1]<<8|e[i+2]<<16,this.words[o]|=a<<s&67108863,this.words[o+1]=a>>>26-s&67108863,(s+=24)>=26&&(s-=26,o++);return this.strip()},o.prototype._parseHex=function(e,t,n){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var i,o=0,a=0;if("be"===n)for(r=e.length-1;r>=t;r-=2)i=c(e,t,r)<<o,this.words[a]|=67108863&i,o>=18?(o-=18,a+=1,this.words[a]|=i>>>26):o+=8;else for(r=(e.length-t)%2==0?t+1:t;r<e.length;r+=2)i=c(e,t,r)<<o,this.words[a]|=67108863&i,o>=18?(o-=18,a+=1,this.words[a]|=i>>>26):o+=8;this.strip()},o.prototype._parseBase=function(e,t,n){this.words=[0],this.length=1;for(var r=0,i=1;i<=67108863;i*=t)r++;r--,i=i/t|0;for(var o=e.length-n,a=o%r,s=Math.min(o,o-a)+n,c=0,d=n;d<s;d+=r)c=f(e,d,d+r,t),this.imuln(i),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c);if(0!==a){var u=1;for(c=f(e,d,e.length,t),d=0;d<a;d++)u*=t;this.imuln(u),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c)}this.strip()},o.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},o.prototype.clone=function(){var e=new o(null);return this.copy(e),e},o.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},o.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},o.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},o.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var d=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],u=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],l=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function h(e,t,n){n.negative=t.negative^e.negative;var r=e.length+t.length|0;n.length=r,r=r-1|0;var i=0|e.words[0],o=0|t.words[0],a=i*o,s=67108863&a,c=a/67108864|0;n.words[0]=s;for(var f=1;f<r;f++){for(var d=c>>>26,u=67108863&c,l=Math.min(f,t.length-1),h=Math.max(0,f-e.length+1);h<=l;h++){var b=f-h|0;d+=(a=(i=0|e.words[b])*(o=0|t.words[h])+u)/67108864|0,u=67108863&a}n.words[f]=0|u,c=0|d}return 0!==c?n.words[f]=0|c:n.length--,n.strip()}o.prototype.toString=function(e,t){var n;if(t=0|t||1,16===(e=e||10)||"hex"===e){n="";for(var i=0,o=0,a=0;a<this.length;a++){var s=this.words[a],c=(16777215&(s<<i|o)).toString(16);n=0!=(o=s>>>24-i&16777215)||a!==this.length-1?d[6-c.length]+c+n:c+n,(i+=2)>=26&&(i-=26,a--)}for(0!==o&&(n=o.toString(16)+n);n.length%t!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}if(e===(0|e)&&e>=2&&e<=36){var f=u[e],h=l[e];n="";var b=this.clone();for(b.negative=0;!b.isZero();){var p=b.modn(h).toString(e);n=(b=b.idivn(h)).isZero()?p+n:d[f-p.length]+p+n}for(this.isZero()&&(n="0"+n);n.length%t!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}r(!1,"Base should be between 2 and 36")},o.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},o.prototype.toJSON=function(){return this.toString(16)},o.prototype.toBuffer=function(e,t){return r(void 0!==a),this.toArrayLike(a,e,t)},o.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)},o.prototype.toArrayLike=function(e,t,n){var i=this.byteLength(),o=n||Math.max(1,i);r(i<=o,"byte array longer than desired length"),r(o>0,"Requested array length <= 0"),this.strip();var a,s,c="le"===t,f=new e(o),d=this.clone();if(c){for(s=0;!d.isZero();s++)a=d.andln(255),d.iushrn(8),f[s]=a;for(;s<o;s++)f[s]=0}else{for(s=0;s<o-i;s++)f[s]=0;for(s=0;!d.isZero();s++)a=d.andln(255),d.iushrn(8),f[o-s-1]=a}return f},Math.clz32?o.prototype._countBits=function(e){return 32-Math.clz32(e)}:o.prototype._countBits=function(e){var t=e,n=0;return t>=4096&&(n+=13,t>>>=13),t>=64&&(n+=7,t>>>=7),t>=8&&(n+=4,t>>>=4),t>=2&&(n+=2,t>>>=2),n+t},o.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,n=0;return 0==(8191&t)&&(n+=13,t>>>=13),0==(127&t)&&(n+=7,t>>>=7),0==(15&t)&&(n+=4,t>>>=4),0==(3&t)&&(n+=2,t>>>=2),0==(1&t)&&n++,n},o.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var n=this._zeroBits(this.words[t]);if(e+=n,26!==n)break}return e},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},o.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return 0!==this.negative},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this.strip()},o.prototype.ior=function(e){return r(0==(this.negative|e.negative)),this.iuor(e)},o.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},o.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},o.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var n=0;n<t.length;n++)this.words[n]=this.words[n]&e.words[n];return this.length=t.length,this.strip()},o.prototype.iand=function(e){return r(0==(this.negative|e.negative)),this.iuand(e)},o.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},o.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},o.prototype.iuxor=function(e){var t,n;this.length>e.length?(t=this,n=e):(t=e,n=this);for(var r=0;r<n.length;r++)this.words[r]=t.words[r]^n.words[r];if(this!==t)for(;r<t.length;r++)this.words[r]=t.words[r];return this.length=t.length,this.strip()},o.prototype.ixor=function(e){return r(0==(this.negative|e.negative)),this.iuxor(e)},o.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},o.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},o.prototype.inotn=function(e){r("number"==typeof e&&e>=0);var t=0|Math.ceil(e/26),n=e%26;this._expand(t),n>0&&t--;for(var i=0;i<t;i++)this.words[i]=67108863&~this.words[i];return n>0&&(this.words[i]=~this.words[i]&67108863>>26-n),this.strip()},o.prototype.notn=function(e){return this.clone().inotn(e)},o.prototype.setn=function(e,t){r("number"==typeof e&&e>=0);var n=e/26|0,i=e%26;return this._expand(n+1),this.words[n]=t?this.words[n]|1<<i:this.words[n]&~(1<<i),this.strip()},o.prototype.iadd=function(e){var t,n,r;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(n=this,r=e):(n=e,r=this);for(var i=0,o=0;o<r.length;o++)t=(0|n.words[o])+(0|r.words[o])+i,this.words[o]=67108863&t,i=t>>>26;for(;0!==i&&o<n.length;o++)t=(0|n.words[o])+i,this.words[o]=67108863&t,i=t>>>26;if(this.length=n.length,0!==i)this.words[this.length]=i,this.length++;else if(n!==this)for(;o<n.length;o++)this.words[o]=n.words[o];return this},o.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},o.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var n,r,i=this.cmp(e);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(n=this,r=e):(n=e,r=this);for(var o=0,a=0;a<r.length;a++)o=(t=(0|n.words[a])-(0|r.words[a])+o)>>26,this.words[a]=67108863&t;for(;0!==o&&a<n.length;a++)o=(t=(0|n.words[a])+o)>>26,this.words[a]=67108863&t;if(0===o&&a<n.length&&n!==this)for(;a<n.length;a++)this.words[a]=n.words[a];return this.length=Math.max(this.length,a),n!==this&&(this.negative=1),this.strip()},o.prototype.sub=function(e){return this.clone().isub(e)};var b=function(e,t,n){var r,i,o,a=e.words,s=t.words,c=n.words,f=0,d=0|a[0],u=8191&d,l=d>>>13,h=0|a[1],b=8191&h,p=h>>>13,y=0|a[2],v=8191&y,m=y>>>13,g=0|a[3],w=8191&g,P=g>>>13,x=0|a[4],M=8191&x,O=x>>>13,j=0|a[5],k=8191&j,A=j>>>13,T=0|a[6],E=8191&T,z=T>>>13,L=0|a[7],N=8191&L,S=L>>>13,U=0|a[8],H=8191&U,I=U>>>13,B=0|a[9],D=8191&B,X=B>>>13,R=0|s[0],F=8191&R,Z=R>>>13,W=0|s[1],G=8191&W,q=W>>>13,V=0|s[2],K=8191&V,C=V>>>13,Y=0|s[3],J=8191&Y,Q=Y>>>13,_=0|s[4],$=8191&_,ee=_>>>13,te=0|s[5],ne=8191&te,re=te>>>13,ie=0|s[6],oe=8191&ie,ae=ie>>>13,se=0|s[7],ce=8191&se,fe=se>>>13,de=0|s[8],ue=8191&de,le=de>>>13,he=0|s[9],be=8191&he,pe=he>>>13;n.negative=e.negative^t.negative,n.length=19;var ye=(f+(r=Math.imul(u,F))|0)+((8191&(i=(i=Math.imul(u,Z))+Math.imul(l,F)|0))<<13)|0;f=((o=Math.imul(l,Z))+(i>>>13)|0)+(ye>>>26)|0,ye&=67108863,r=Math.imul(b,F),i=(i=Math.imul(b,Z))+Math.imul(p,F)|0,o=Math.imul(p,Z);var ve=(f+(r=r+Math.imul(u,G)|0)|0)+((8191&(i=(i=i+Math.imul(u,q)|0)+Math.imul(l,G)|0))<<13)|0;f=((o=o+Math.imul(l,q)|0)+(i>>>13)|0)+(ve>>>26)|0,ve&=67108863,r=Math.imul(v,F),i=(i=Math.imul(v,Z))+Math.imul(m,F)|0,o=Math.imul(m,Z),r=r+Math.imul(b,G)|0,i=(i=i+Math.imul(b,q)|0)+Math.imul(p,G)|0,o=o+Math.imul(p,q)|0;var me=(f+(r=r+Math.imul(u,K)|0)|0)+((8191&(i=(i=i+Math.imul(u,C)|0)+Math.imul(l,K)|0))<<13)|0;f=((o=o+Math.imul(l,C)|0)+(i>>>13)|0)+(me>>>26)|0,me&=67108863,r=Math.imul(w,F),i=(i=Math.imul(w,Z))+Math.imul(P,F)|0,o=Math.imul(P,Z),r=r+Math.imul(v,G)|0,i=(i=i+Math.imul(v,q)|0)+Math.imul(m,G)|0,o=o+Math.imul(m,q)|0,r=r+Math.imul(b,K)|0,i=(i=i+Math.imul(b,C)|0)+Math.imul(p,K)|0,o=o+Math.imul(p,C)|0;var ge=(f+(r=r+Math.imul(u,J)|0)|0)+((8191&(i=(i=i+Math.imul(u,Q)|0)+Math.imul(l,J)|0))<<13)|0;f=((o=o+Math.imul(l,Q)|0)+(i>>>13)|0)+(ge>>>26)|0,ge&=67108863,r=Math.imul(M,F),i=(i=Math.imul(M,Z))+Math.imul(O,F)|0,o=Math.imul(O,Z),r=r+Math.imul(w,G)|0,i=(i=i+Math.imul(w,q)|0)+Math.imul(P,G)|0,o=o+Math.imul(P,q)|0,r=r+Math.imul(v,K)|0,i=(i=i+Math.imul(v,C)|0)+Math.imul(m,K)|0,o=o+Math.imul(m,C)|0,r=r+Math.imul(b,J)|0,i=(i=i+Math.imul(b,Q)|0)+Math.imul(p,J)|0,o=o+Math.imul(p,Q)|0;var we=(f+(r=r+Math.imul(u,$)|0)|0)+((8191&(i=(i=i+Math.imul(u,ee)|0)+Math.imul(l,$)|0))<<13)|0;f=((o=o+Math.imul(l,ee)|0)+(i>>>13)|0)+(we>>>26)|0,we&=67108863,r=Math.imul(k,F),i=(i=Math.imul(k,Z))+Math.imul(A,F)|0,o=Math.imul(A,Z),r=r+Math.imul(M,G)|0,i=(i=i+Math.imul(M,q)|0)+Math.imul(O,G)|0,o=o+Math.imul(O,q)|0,r=r+Math.imul(w,K)|0,i=(i=i+Math.imul(w,C)|0)+Math.imul(P,K)|0,o=o+Math.imul(P,C)|0,r=r+Math.imul(v,J)|0,i=(i=i+Math.imul(v,Q)|0)+Math.imul(m,J)|0,o=o+Math.imul(m,Q)|0,r=r+Math.imul(b,$)|0,i=(i=i+Math.imul(b,ee)|0)+Math.imul(p,$)|0,o=o+Math.imul(p,ee)|0;var Pe=(f+(r=r+Math.imul(u,ne)|0)|0)+((8191&(i=(i=i+Math.imul(u,re)|0)+Math.imul(l,ne)|0))<<13)|0;f=((o=o+Math.imul(l,re)|0)+(i>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,r=Math.imul(E,F),i=(i=Math.imul(E,Z))+Math.imul(z,F)|0,o=Math.imul(z,Z),r=r+Math.imul(k,G)|0,i=(i=i+Math.imul(k,q)|0)+Math.imul(A,G)|0,o=o+Math.imul(A,q)|0,r=r+Math.imul(M,K)|0,i=(i=i+Math.imul(M,C)|0)+Math.imul(O,K)|0,o=o+Math.imul(O,C)|0,r=r+Math.imul(w,J)|0,i=(i=i+Math.imul(w,Q)|0)+Math.imul(P,J)|0,o=o+Math.imul(P,Q)|0,r=r+Math.imul(v,$)|0,i=(i=i+Math.imul(v,ee)|0)+Math.imul(m,$)|0,o=o+Math.imul(m,ee)|0,r=r+Math.imul(b,ne)|0,i=(i=i+Math.imul(b,re)|0)+Math.imul(p,ne)|0,o=o+Math.imul(p,re)|0;var xe=(f+(r=r+Math.imul(u,oe)|0)|0)+((8191&(i=(i=i+Math.imul(u,ae)|0)+Math.imul(l,oe)|0))<<13)|0;f=((o=o+Math.imul(l,ae)|0)+(i>>>13)|0)+(xe>>>26)|0,xe&=67108863,r=Math.imul(N,F),i=(i=Math.imul(N,Z))+Math.imul(S,F)|0,o=Math.imul(S,Z),r=r+Math.imul(E,G)|0,i=(i=i+Math.imul(E,q)|0)+Math.imul(z,G)|0,o=o+Math.imul(z,q)|0,r=r+Math.imul(k,K)|0,i=(i=i+Math.imul(k,C)|0)+Math.imul(A,K)|0,o=o+Math.imul(A,C)|0,r=r+Math.imul(M,J)|0,i=(i=i+Math.imul(M,Q)|0)+Math.imul(O,J)|0,o=o+Math.imul(O,Q)|0,r=r+Math.imul(w,$)|0,i=(i=i+Math.imul(w,ee)|0)+Math.imul(P,$)|0,o=o+Math.imul(P,ee)|0,r=r+Math.imul(v,ne)|0,i=(i=i+Math.imul(v,re)|0)+Math.imul(m,ne)|0,o=o+Math.imul(m,re)|0,r=r+Math.imul(b,oe)|0,i=(i=i+Math.imul(b,ae)|0)+Math.imul(p,oe)|0,o=o+Math.imul(p,ae)|0;var Me=(f+(r=r+Math.imul(u,ce)|0)|0)+((8191&(i=(i=i+Math.imul(u,fe)|0)+Math.imul(l,ce)|0))<<13)|0;f=((o=o+Math.imul(l,fe)|0)+(i>>>13)|0)+(Me>>>26)|0,Me&=67108863,r=Math.imul(H,F),i=(i=Math.imul(H,Z))+Math.imul(I,F)|0,o=Math.imul(I,Z),r=r+Math.imul(N,G)|0,i=(i=i+Math.imul(N,q)|0)+Math.imul(S,G)|0,o=o+Math.imul(S,q)|0,r=r+Math.imul(E,K)|0,i=(i=i+Math.imul(E,C)|0)+Math.imul(z,K)|0,o=o+Math.imul(z,C)|0,r=r+Math.imul(k,J)|0,i=(i=i+Math.imul(k,Q)|0)+Math.imul(A,J)|0,o=o+Math.imul(A,Q)|0,r=r+Math.imul(M,$)|0,i=(i=i+Math.imul(M,ee)|0)+Math.imul(O,$)|0,o=o+Math.imul(O,ee)|0,r=r+Math.imul(w,ne)|0,i=(i=i+Math.imul(w,re)|0)+Math.imul(P,ne)|0,o=o+Math.imul(P,re)|0,r=r+Math.imul(v,oe)|0,i=(i=i+Math.imul(v,ae)|0)+Math.imul(m,oe)|0,o=o+Math.imul(m,ae)|0,r=r+Math.imul(b,ce)|0,i=(i=i+Math.imul(b,fe)|0)+Math.imul(p,ce)|0,o=o+Math.imul(p,fe)|0;var Oe=(f+(r=r+Math.imul(u,ue)|0)|0)+((8191&(i=(i=i+Math.imul(u,le)|0)+Math.imul(l,ue)|0))<<13)|0;f=((o=o+Math.imul(l,le)|0)+(i>>>13)|0)+(Oe>>>26)|0,Oe&=67108863,r=Math.imul(D,F),i=(i=Math.imul(D,Z))+Math.imul(X,F)|0,o=Math.imul(X,Z),r=r+Math.imul(H,G)|0,i=(i=i+Math.imul(H,q)|0)+Math.imul(I,G)|0,o=o+Math.imul(I,q)|0,r=r+Math.imul(N,K)|0,i=(i=i+Math.imul(N,C)|0)+Math.imul(S,K)|0,o=o+Math.imul(S,C)|0,r=r+Math.imul(E,J)|0,i=(i=i+Math.imul(E,Q)|0)+Math.imul(z,J)|0,o=o+Math.imul(z,Q)|0,r=r+Math.imul(k,$)|0,i=(i=i+Math.imul(k,ee)|0)+Math.imul(A,$)|0,o=o+Math.imul(A,ee)|0,r=r+Math.imul(M,ne)|0,i=(i=i+Math.imul(M,re)|0)+Math.imul(O,ne)|0,o=o+Math.imul(O,re)|0,r=r+Math.imul(w,oe)|0,i=(i=i+Math.imul(w,ae)|0)+Math.imul(P,oe)|0,o=o+Math.imul(P,ae)|0,r=r+Math.imul(v,ce)|0,i=(i=i+Math.imul(v,fe)|0)+Math.imul(m,ce)|0,o=o+Math.imul(m,fe)|0,r=r+Math.imul(b,ue)|0,i=(i=i+Math.imul(b,le)|0)+Math.imul(p,ue)|0,o=o+Math.imul(p,le)|0;var je=(f+(r=r+Math.imul(u,be)|0)|0)+((8191&(i=(i=i+Math.imul(u,pe)|0)+Math.imul(l,be)|0))<<13)|0;f=((o=o+Math.imul(l,pe)|0)+(i>>>13)|0)+(je>>>26)|0,je&=67108863,r=Math.imul(D,G),i=(i=Math.imul(D,q))+Math.imul(X,G)|0,o=Math.imul(X,q),r=r+Math.imul(H,K)|0,i=(i=i+Math.imul(H,C)|0)+Math.imul(I,K)|0,o=o+Math.imul(I,C)|0,r=r+Math.imul(N,J)|0,i=(i=i+Math.imul(N,Q)|0)+Math.imul(S,J)|0,o=o+Math.imul(S,Q)|0,r=r+Math.imul(E,$)|0,i=(i=i+Math.imul(E,ee)|0)+Math.imul(z,$)|0,o=o+Math.imul(z,ee)|0,r=r+Math.imul(k,ne)|0,i=(i=i+Math.imul(k,re)|0)+Math.imul(A,ne)|0,o=o+Math.imul(A,re)|0,r=r+Math.imul(M,oe)|0,i=(i=i+Math.imul(M,ae)|0)+Math.imul(O,oe)|0,o=o+Math.imul(O,ae)|0,r=r+Math.imul(w,ce)|0,i=(i=i+Math.imul(w,fe)|0)+Math.imul(P,ce)|0,o=o+Math.imul(P,fe)|0,r=r+Math.imul(v,ue)|0,i=(i=i+Math.imul(v,le)|0)+Math.imul(m,ue)|0,o=o+Math.imul(m,le)|0;var ke=(f+(r=r+Math.imul(b,be)|0)|0)+((8191&(i=(i=i+Math.imul(b,pe)|0)+Math.imul(p,be)|0))<<13)|0;f=((o=o+Math.imul(p,pe)|0)+(i>>>13)|0)+(ke>>>26)|0,ke&=67108863,r=Math.imul(D,K),i=(i=Math.imul(D,C))+Math.imul(X,K)|0,o=Math.imul(X,C),r=r+Math.imul(H,J)|0,i=(i=i+Math.imul(H,Q)|0)+Math.imul(I,J)|0,o=o+Math.imul(I,Q)|0,r=r+Math.imul(N,$)|0,i=(i=i+Math.imul(N,ee)|0)+Math.imul(S,$)|0,o=o+Math.imul(S,ee)|0,r=r+Math.imul(E,ne)|0,i=(i=i+Math.imul(E,re)|0)+Math.imul(z,ne)|0,o=o+Math.imul(z,re)|0,r=r+Math.imul(k,oe)|0,i=(i=i+Math.imul(k,ae)|0)+Math.imul(A,oe)|0,o=o+Math.imul(A,ae)|0,r=r+Math.imul(M,ce)|0,i=(i=i+Math.imul(M,fe)|0)+Math.imul(O,ce)|0,o=o+Math.imul(O,fe)|0,r=r+Math.imul(w,ue)|0,i=(i=i+Math.imul(w,le)|0)+Math.imul(P,ue)|0,o=o+Math.imul(P,le)|0;var Ae=(f+(r=r+Math.imul(v,be)|0)|0)+((8191&(i=(i=i+Math.imul(v,pe)|0)+Math.imul(m,be)|0))<<13)|0;f=((o=o+Math.imul(m,pe)|0)+(i>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,r=Math.imul(D,J),i=(i=Math.imul(D,Q))+Math.imul(X,J)|0,o=Math.imul(X,Q),r=r+Math.imul(H,$)|0,i=(i=i+Math.imul(H,ee)|0)+Math.imul(I,$)|0,o=o+Math.imul(I,ee)|0,r=r+Math.imul(N,ne)|0,i=(i=i+Math.imul(N,re)|0)+Math.imul(S,ne)|0,o=o+Math.imul(S,re)|0,r=r+Math.imul(E,oe)|0,i=(i=i+Math.imul(E,ae)|0)+Math.imul(z,oe)|0,o=o+Math.imul(z,ae)|0,r=r+Math.imul(k,ce)|0,i=(i=i+Math.imul(k,fe)|0)+Math.imul(A,ce)|0,o=o+Math.imul(A,fe)|0,r=r+Math.imul(M,ue)|0,i=(i=i+Math.imul(M,le)|0)+Math.imul(O,ue)|0,o=o+Math.imul(O,le)|0;var Te=(f+(r=r+Math.imul(w,be)|0)|0)+((8191&(i=(i=i+Math.imul(w,pe)|0)+Math.imul(P,be)|0))<<13)|0;f=((o=o+Math.imul(P,pe)|0)+(i>>>13)|0)+(Te>>>26)|0,Te&=67108863,r=Math.imul(D,$),i=(i=Math.imul(D,ee))+Math.imul(X,$)|0,o=Math.imul(X,ee),r=r+Math.imul(H,ne)|0,i=(i=i+Math.imul(H,re)|0)+Math.imul(I,ne)|0,o=o+Math.imul(I,re)|0,r=r+Math.imul(N,oe)|0,i=(i=i+Math.imul(N,ae)|0)+Math.imul(S,oe)|0,o=o+Math.imul(S,ae)|0,r=r+Math.imul(E,ce)|0,i=(i=i+Math.imul(E,fe)|0)+Math.imul(z,ce)|0,o=o+Math.imul(z,fe)|0,r=r+Math.imul(k,ue)|0,i=(i=i+Math.imul(k,le)|0)+Math.imul(A,ue)|0,o=o+Math.imul(A,le)|0;var Ee=(f+(r=r+Math.imul(M,be)|0)|0)+((8191&(i=(i=i+Math.imul(M,pe)|0)+Math.imul(O,be)|0))<<13)|0;f=((o=o+Math.imul(O,pe)|0)+(i>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,r=Math.imul(D,ne),i=(i=Math.imul(D,re))+Math.imul(X,ne)|0,o=Math.imul(X,re),r=r+Math.imul(H,oe)|0,i=(i=i+Math.imul(H,ae)|0)+Math.imul(I,oe)|0,o=o+Math.imul(I,ae)|0,r=r+Math.imul(N,ce)|0,i=(i=i+Math.imul(N,fe)|0)+Math.imul(S,ce)|0,o=o+Math.imul(S,fe)|0,r=r+Math.imul(E,ue)|0,i=(i=i+Math.imul(E,le)|0)+Math.imul(z,ue)|0,o=o+Math.imul(z,le)|0;var ze=(f+(r=r+Math.imul(k,be)|0)|0)+((8191&(i=(i=i+Math.imul(k,pe)|0)+Math.imul(A,be)|0))<<13)|0;f=((o=o+Math.imul(A,pe)|0)+(i>>>13)|0)+(ze>>>26)|0,ze&=67108863,r=Math.imul(D,oe),i=(i=Math.imul(D,ae))+Math.imul(X,oe)|0,o=Math.imul(X,ae),r=r+Math.imul(H,ce)|0,i=(i=i+Math.imul(H,fe)|0)+Math.imul(I,ce)|0,o=o+Math.imul(I,fe)|0,r=r+Math.imul(N,ue)|0,i=(i=i+Math.imul(N,le)|0)+Math.imul(S,ue)|0,o=o+Math.imul(S,le)|0;var Le=(f+(r=r+Math.imul(E,be)|0)|0)+((8191&(i=(i=i+Math.imul(E,pe)|0)+Math.imul(z,be)|0))<<13)|0;f=((o=o+Math.imul(z,pe)|0)+(i>>>13)|0)+(Le>>>26)|0,Le&=67108863,r=Math.imul(D,ce),i=(i=Math.imul(D,fe))+Math.imul(X,ce)|0,o=Math.imul(X,fe),r=r+Math.imul(H,ue)|0,i=(i=i+Math.imul(H,le)|0)+Math.imul(I,ue)|0,o=o+Math.imul(I,le)|0;var Ne=(f+(r=r+Math.imul(N,be)|0)|0)+((8191&(i=(i=i+Math.imul(N,pe)|0)+Math.imul(S,be)|0))<<13)|0;f=((o=o+Math.imul(S,pe)|0)+(i>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,r=Math.imul(D,ue),i=(i=Math.imul(D,le))+Math.imul(X,ue)|0,o=Math.imul(X,le);var Se=(f+(r=r+Math.imul(H,be)|0)|0)+((8191&(i=(i=i+Math.imul(H,pe)|0)+Math.imul(I,be)|0))<<13)|0;f=((o=o+Math.imul(I,pe)|0)+(i>>>13)|0)+(Se>>>26)|0,Se&=67108863;var Ue=(f+(r=Math.imul(D,be))|0)+((8191&(i=(i=Math.imul(D,pe))+Math.imul(X,be)|0))<<13)|0;return f=((o=Math.imul(X,pe))+(i>>>13)|0)+(Ue>>>26)|0,Ue&=67108863,c[0]=ye,c[1]=ve,c[2]=me,c[3]=ge,c[4]=we,c[5]=Pe,c[6]=xe,c[7]=Me,c[8]=Oe,c[9]=je,c[10]=ke,c[11]=Ae,c[12]=Te,c[13]=Ee,c[14]=ze,c[15]=Le,c[16]=Ne,c[17]=Se,c[18]=Ue,0!==f&&(c[19]=f,n.length++),n};function p(e,t,n){return(new y).mulp(e,t,n)}function y(e,t){this.x=e,this.y=t}Math.imul||(b=h),o.prototype.mulTo=function(e,t){var n,r=this.length+e.length;return n=10===this.length&&10===e.length?b(this,e,t):r<63?h(this,e,t):r<1024?function(e,t,n){n.negative=t.negative^e.negative,n.length=e.length+t.length;for(var r=0,i=0,o=0;o<n.length-1;o++){var a=i;i=0;for(var s=67108863&r,c=Math.min(o,t.length-1),f=Math.max(0,o-e.length+1);f<=c;f++){var d=o-f,u=(0|e.words[d])*(0|t.words[f]),l=67108863&u;s=67108863&(l=l+s|0),i+=(a=(a=a+(u/67108864|0)|0)+(l>>>26)|0)>>>26,a&=67108863}n.words[o]=s,r=a,a=i}return 0!==r?n.words[o]=r:n.length--,n.strip()}(this,e,t):p(this,e,t),n},y.prototype.makeRBT=function(e){for(var t=new Array(e),n=o.prototype._countBits(e)-1,r=0;r<e;r++)t[r]=this.revBin(r,n,e);return t},y.prototype.revBin=function(e,t,n){if(0===e||e===n-1)return e;for(var r=0,i=0;i<t;i++)r|=(1&e)<<t-i-1,e>>=1;return r},y.prototype.permute=function(e,t,n,r,i,o){for(var a=0;a<o;a++)r[a]=t[e[a]],i[a]=n[e[a]]},y.prototype.transform=function(e,t,n,r,i,o){this.permute(o,e,t,n,r,i);for(var a=1;a<i;a<<=1)for(var s=a<<1,c=Math.cos(2*Math.PI/s),f=Math.sin(2*Math.PI/s),d=0;d<i;d+=s)for(var u=c,l=f,h=0;h<a;h++){var b=n[d+h],p=r[d+h],y=n[d+h+a],v=r[d+h+a],m=u*y-l*v;v=u*v+l*y,y=m,n[d+h]=b+y,r[d+h]=p+v,n[d+h+a]=b-y,r[d+h+a]=p-v,h!==s&&(m=c*u-f*l,l=c*l+f*u,u=m)}},y.prototype.guessLen13b=function(e,t){var n=1|Math.max(t,e),r=1&n,i=0;for(n=n/2|0;n;n>>>=1)i++;return 1<<i+1+r},y.prototype.conjugate=function(e,t,n){if(!(n<=1))for(var r=0;r<n/2;r++){var i=e[r];e[r]=e[n-r-1],e[n-r-1]=i,i=t[r],t[r]=-t[n-r-1],t[n-r-1]=-i}},y.prototype.normalize13b=function(e,t){for(var n=0,r=0;r<t/2;r++){var i=8192*Math.round(e[2*r+1]/t)+Math.round(e[2*r]/t)+n;e[r]=67108863&i,n=i<67108864?0:i/67108864|0}return e},y.prototype.convert13b=function(e,t,n,i){for(var o=0,a=0;a<t;a++)o+=0|e[a],n[2*a]=8191&o,o>>>=13,n[2*a+1]=8191&o,o>>>=13;for(a=2*t;a<i;++a)n[a]=0;r(0===o),r(0==(-8192&o))},y.prototype.stub=function(e){for(var t=new Array(e),n=0;n<e;n++)t[n]=0;return t},y.prototype.mulp=function(e,t,n){var r=2*this.guessLen13b(e.length,t.length),i=this.makeRBT(r),o=this.stub(r),a=new Array(r),s=new Array(r),c=new Array(r),f=new Array(r),d=new Array(r),u=new Array(r),l=n.words;l.length=r,this.convert13b(e.words,e.length,a,r),this.convert13b(t.words,t.length,f,r),this.transform(a,o,s,c,r,i),this.transform(f,o,d,u,r,i);for(var h=0;h<r;h++){var b=s[h]*d[h]-c[h]*u[h];c[h]=s[h]*u[h]+c[h]*d[h],s[h]=b}return this.conjugate(s,c,r),this.transform(s,c,l,o,r,i),this.conjugate(l,o,r),this.normalize13b(l,r),n.negative=e.negative^t.negative,n.length=e.length+t.length,n.strip()},o.prototype.mul=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},o.prototype.mulf=function(e){var t=new o(null);return t.words=new Array(this.length+e.length),p(this,e,t)},o.prototype.imul=function(e){return this.clone().mulTo(e,this)},o.prototype.imuln=function(e){r("number"==typeof e),r(e<67108864);for(var t=0,n=0;n<this.length;n++){var i=(0|this.words[n])*e,o=(67108863&i)+(67108863&t);t>>=26,t+=i/67108864|0,t+=o>>>26,this.words[n]=67108863&o}return 0!==t&&(this.words[n]=t,this.length++),this},o.prototype.muln=function(e){return this.clone().imuln(e)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),n=0;n<t.length;n++){var r=n/26|0,i=n%26;t[n]=(e.words[r]&1<<i)>>>i}return t}(e);if(0===t.length)return new o(1);for(var n=this,r=0;r<t.length&&0===t[r];r++,n=n.sqr());if(++r<t.length)for(var i=n.sqr();r<t.length;r++,i=i.sqr())0!==t[r]&&(n=n.mul(i));return n},o.prototype.iushln=function(e){r("number"==typeof e&&e>=0);var t,n=e%26,i=(e-n)/26,o=67108863>>>26-n<<26-n;if(0!==n){var a=0;for(t=0;t<this.length;t++){var s=this.words[t]&o,c=(0|this.words[t])-s<<n;this.words[t]=c|a,a=s>>>26-n}a&&(this.words[t]=a,this.length++)}if(0!==i){for(t=this.length-1;t>=0;t--)this.words[t+i]=this.words[t];for(t=0;t<i;t++)this.words[t]=0;this.length+=i}return this.strip()},o.prototype.ishln=function(e){return r(0===this.negative),this.iushln(e)},o.prototype.iushrn=function(e,t,n){var i;r("number"==typeof e&&e>=0),i=t?(t-t%26)/26:0;var o=e%26,a=Math.min((e-o)/26,this.length),s=67108863^67108863>>>o<<o,c=n;if(i-=a,i=Math.max(0,i),c){for(var f=0;f<a;f++)c.words[f]=this.words[f];c.length=a}if(0===a);else if(this.length>a)for(this.length-=a,f=0;f<this.length;f++)this.words[f]=this.words[f+a];else this.words[0]=0,this.length=1;var d=0;for(f=this.length-1;f>=0&&(0!==d||f>=i);f--){var u=0|this.words[f];this.words[f]=d<<26-o|u>>>o,d=u&s}return c&&0!==d&&(c.words[c.length++]=d),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},o.prototype.ishrn=function(e,t,n){return r(0===this.negative),this.iushrn(e,t,n)},o.prototype.shln=function(e){return this.clone().ishln(e)},o.prototype.ushln=function(e){return this.clone().iushln(e)},o.prototype.shrn=function(e){return this.clone().ishrn(e)},o.prototype.ushrn=function(e){return this.clone().iushrn(e)},o.prototype.testn=function(e){r("number"==typeof e&&e>=0);var t=e%26,n=(e-t)/26,i=1<<t;return!(this.length<=n||!(this.words[n]&i))},o.prototype.imaskn=function(e){r("number"==typeof e&&e>=0);var t=e%26,n=(e-t)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=n)return this;if(0!==t&&n++,this.length=Math.min(n,this.length),0!==t){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i}return this.strip()},o.prototype.maskn=function(e){return this.clone().imaskn(e)},o.prototype.iaddn=function(e){return r("number"==typeof e),r(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},o.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},o.prototype.isubn=function(e){if(r("number"==typeof e),r(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this.strip()},o.prototype.addn=function(e){return this.clone().iaddn(e)},o.prototype.subn=function(e){return this.clone().isubn(e)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(e,t,n){var i,o,a=e.length+n;this._expand(a);var s=0;for(i=0;i<e.length;i++){o=(0|this.words[i+n])+s;var c=(0|e.words[i])*t;s=((o-=67108863&c)>>26)-(c/67108864|0),this.words[i+n]=67108863&o}for(;i<this.length-n;i++)s=(o=(0|this.words[i+n])+s)>>26,this.words[i+n]=67108863&o;if(0===s)return this.strip();for(r(-1===s),s=0,i=0;i<this.length;i++)s=(o=-(0|this.words[i])+s)>>26,this.words[i]=67108863&o;return this.negative=1,this.strip()},o.prototype._wordDiv=function(e,t){var n=(this.length,e.length),r=this.clone(),i=e,a=0|i.words[i.length-1];0!=(n=26-this._countBits(a))&&(i=i.ushln(n),r.iushln(n),a=0|i.words[i.length-1]);var s,c=r.length-i.length;if("mod"!==t){(s=new o(null)).length=c+1,s.words=new Array(s.length);for(var f=0;f<s.length;f++)s.words[f]=0}var d=r.clone()._ishlnsubmul(i,1,c);0===d.negative&&(r=d,s&&(s.words[c]=1));for(var u=c-1;u>=0;u--){var l=67108864*(0|r.words[i.length+u])+(0|r.words[i.length+u-1]);for(l=Math.min(l/a|0,67108863),r._ishlnsubmul(i,l,u);0!==r.negative;)l--,r.negative=0,r._ishlnsubmul(i,1,u),r.isZero()||(r.negative^=1);s&&(s.words[u]=l)}return s&&s.strip(),r.strip(),"div"!==t&&0!==n&&r.iushrn(n),{div:s||null,mod:r}},o.prototype.divmod=function(e,t,n){return r(!e.isZero()),this.isZero()?{div:new o(0),mod:new o(0)}:0!==this.negative&&0===e.negative?(s=this.neg().divmod(e,t),"mod"!==t&&(i=s.div.neg()),"div"!==t&&(a=s.mod.neg(),n&&0!==a.negative&&a.iadd(e)),{div:i,mod:a}):0===this.negative&&0!==e.negative?(s=this.divmod(e.neg(),t),"mod"!==t&&(i=s.div.neg()),{div:i,mod:s.mod}):0!=(this.negative&e.negative)?(s=this.neg().divmod(e.neg(),t),"div"!==t&&(a=s.mod.neg(),n&&0!==a.negative&&a.isub(e)),{div:s.div,mod:a}):e.length>this.length||this.cmp(e)<0?{div:new o(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new o(this.modn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new o(this.modn(e.words[0]))}:this._wordDiv(e,t);var i,a,s},o.prototype.div=function(e){return this.divmod(e,"div",!1).div},o.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},o.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},o.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var n=0!==t.div.negative?t.mod.isub(e):t.mod,r=e.ushrn(1),i=e.andln(1),o=n.cmp(r);return o<0||1===i&&0===o?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},o.prototype.modn=function(e){r(e<=67108863);for(var t=(1<<26)%e,n=0,i=this.length-1;i>=0;i--)n=(t*n+(0|this.words[i]))%e;return n},o.prototype.idivn=function(e){r(e<=67108863);for(var t=0,n=this.length-1;n>=0;n--){var i=(0|this.words[n])+67108864*t;this.words[n]=i/e|0,t=i%e}return this.strip()},o.prototype.divn=function(e){return this.clone().idivn(e)},o.prototype.egcd=function(e){r(0===e.negative),r(!e.isZero());var t=this,n=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i=new o(1),a=new o(0),s=new o(0),c=new o(1),f=0;t.isEven()&&n.isEven();)t.iushrn(1),n.iushrn(1),++f;for(var d=n.clone(),u=t.clone();!t.isZero();){for(var l=0,h=1;0==(t.words[0]&h)&&l<26;++l,h<<=1);if(l>0)for(t.iushrn(l);l-- >0;)(i.isOdd()||a.isOdd())&&(i.iadd(d),a.isub(u)),i.iushrn(1),a.iushrn(1);for(var b=0,p=1;0==(n.words[0]&p)&&b<26;++b,p<<=1);if(b>0)for(n.iushrn(b);b-- >0;)(s.isOdd()||c.isOdd())&&(s.iadd(d),c.isub(u)),s.iushrn(1),c.iushrn(1);t.cmp(n)>=0?(t.isub(n),i.isub(s),a.isub(c)):(n.isub(t),s.isub(i),c.isub(a))}return{a:s,b:c,gcd:n.iushln(f)}},o.prototype._invmp=function(e){r(0===e.negative),r(!e.isZero());var t=this,n=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var i,a=new o(1),s=new o(0),c=n.clone();t.cmpn(1)>0&&n.cmpn(1)>0;){for(var f=0,d=1;0==(t.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(t.iushrn(f);f-- >0;)a.isOdd()&&a.iadd(c),a.iushrn(1);for(var u=0,l=1;0==(n.words[0]&l)&&u<26;++u,l<<=1);if(u>0)for(n.iushrn(u);u-- >0;)s.isOdd()&&s.iadd(c),s.iushrn(1);t.cmp(n)>=0?(t.isub(n),a.isub(s)):(n.isub(t),s.isub(a))}return(i=0===t.cmpn(1)?a:s).cmpn(0)<0&&i.iadd(e),i},o.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),n=e.clone();t.negative=0,n.negative=0;for(var r=0;t.isEven()&&n.isEven();r++)t.iushrn(1),n.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;n.isEven();)n.iushrn(1);var i=t.cmp(n);if(i<0){var o=t;t=n,n=o}else if(0===i||0===n.cmpn(1))break;t.isub(n)}return n.iushln(r)},o.prototype.invm=function(e){return this.egcd(e).a.umod(e)},o.prototype.isEven=function(){return 0==(1&this.words[0])},o.prototype.isOdd=function(){return 1==(1&this.words[0])},o.prototype.andln=function(e){return this.words[0]&e},o.prototype.bincn=function(e){r("number"==typeof e);var t=e%26,n=(e-t)/26,i=1<<t;if(this.length<=n)return this._expand(n+1),this.words[n]|=i,this;for(var o=i,a=n;0!==o&&a<this.length;a++){var s=0|this.words[a];o=(s+=o)>>>26,s&=67108863,this.words[a]=s}return 0!==o&&(this.words[a]=o,this.length++),this},o.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},o.prototype.cmpn=function(e){var t,n=e<0;if(0!==this.negative&&!n)return-1;if(0===this.negative&&n)return 1;if(this.strip(),this.length>1)t=1;else{n&&(e=-e),r(e<=67108863,"Number is too big");var i=0|this.words[0];t=i===e?0:i<e?-1:1}return 0!==this.negative?0|-t:t},o.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},o.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,n=this.length-1;n>=0;n--){var r=0|this.words[n],i=0|e.words[n];if(r!==i){r<i?t=-1:r>i&&(t=1);break}}return t},o.prototype.gtn=function(e){return 1===this.cmpn(e)},o.prototype.gt=function(e){return 1===this.cmp(e)},o.prototype.gten=function(e){return this.cmpn(e)>=0},o.prototype.gte=function(e){return this.cmp(e)>=0},o.prototype.ltn=function(e){return-1===this.cmpn(e)},o.prototype.lt=function(e){return-1===this.cmp(e)},o.prototype.lten=function(e){return this.cmpn(e)<=0},o.prototype.lte=function(e){return this.cmp(e)<=0},o.prototype.eqn=function(e){return 0===this.cmpn(e)},o.prototype.eq=function(e){return 0===this.cmp(e)},o.red=function(e){return new M(e)},o.prototype.toRed=function(e){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},o.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},o.prototype._forceRed=function(e){return this.red=e,this},o.prototype.forceRed=function(e){return r(!this.red,"Already a number in reduction context"),this._forceRed(e)},o.prototype.redAdd=function(e){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},o.prototype.redIAdd=function(e){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},o.prototype.redSub=function(e){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},o.prototype.redISub=function(e){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},o.prototype.redShl=function(e){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},o.prototype.redMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},o.prototype.redIMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},o.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(e){return r(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var v={k256:null,p224:null,p192:null,p25519:null};function m(e,t){this.name=e,this.p=new o(t,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function g(){m.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){m.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function P(){m.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function x(){m.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function M(e){if("string"==typeof e){var t=o._prime(e);this.m=t.p,this.prime=t}else r(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function O(e){M.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}m.prototype._tmp=function(){var e=new o(null);return e.words=new Array(Math.ceil(this.n/13)),e},m.prototype.ireduce=function(e){var t,n=e;do{this.split(n,this.tmp),t=(n=(n=this.imulK(n)).iadd(this.tmp)).bitLength()}while(t>this.n);var r=t<this.n?-1:n.ucmp(this.p);return 0===r?(n.words[0]=0,n.length=1):r>0?n.isub(this.p):void 0!==n.strip?n.strip():n._strip(),n},m.prototype.split=function(e,t){e.iushrn(this.n,0,t)},m.prototype.imulK=function(e){return e.imul(this.k)},i(g,m),g.prototype.split=function(e,t){for(var n=4194303,r=Math.min(e.length,9),i=0;i<r;i++)t.words[i]=e.words[i];if(t.length=r,e.length<=9)return e.words[0]=0,void(e.length=1);var o=e.words[9];for(t.words[t.length++]=o&n,i=10;i<e.length;i++){var a=0|e.words[i];e.words[i-10]=(a&n)<<4|o>>>22,o=a}o>>>=22,e.words[i-10]=o,0===o&&e.length>10?e.length-=10:e.length-=9},g.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,n=0;n<e.length;n++){var r=0|e.words[n];t+=977*r,e.words[n]=67108863&t,t=64*r+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},i(w,m),i(P,m),i(x,m),x.prototype.imulK=function(e){for(var t=0,n=0;n<e.length;n++){var r=19*(0|e.words[n])+t,i=67108863&r;r>>>=26,e.words[n]=i,t=r}return 0!==t&&(e.words[e.length++]=t),e},o._prime=function(e){if(v[e])return v[e];var t;if("k256"===e)t=new g;else if("p224"===e)t=new w;else if("p192"===e)t=new P;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new x}return v[e]=t,t},M.prototype._verify1=function(e){r(0===e.negative,"red works only with positives"),r(e.red,"red works only with red numbers")},M.prototype._verify2=function(e,t){r(0==(e.negative|t.negative),"red works only with positives"),r(e.red&&e.red===t.red,"red works only with red numbers")},M.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):e.umod(this.m)._forceRed(this)},M.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},M.prototype.add=function(e,t){this._verify2(e,t);var n=e.add(t);return n.cmp(this.m)>=0&&n.isub(this.m),n._forceRed(this)},M.prototype.iadd=function(e,t){this._verify2(e,t);var n=e.iadd(t);return n.cmp(this.m)>=0&&n.isub(this.m),n},M.prototype.sub=function(e,t){this._verify2(e,t);var n=e.sub(t);return n.cmpn(0)<0&&n.iadd(this.m),n._forceRed(this)},M.prototype.isub=function(e,t){this._verify2(e,t);var n=e.isub(t);return n.cmpn(0)<0&&n.iadd(this.m),n},M.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},M.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},M.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},M.prototype.isqr=function(e){return this.imul(e,e.clone())},M.prototype.sqr=function(e){return this.mul(e,e)},M.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(r(t%2==1),3===t){var n=this.m.add(new o(1)).iushrn(2);return this.pow(e,n)}for(var i=this.m.subn(1),a=0;!i.isZero()&&0===i.andln(1);)a++,i.iushrn(1);r(!i.isZero());var s=new o(1).toRed(this),c=s.redNeg(),f=this.m.subn(1).iushrn(1),d=this.m.bitLength();for(d=new o(2*d*d).toRed(this);0!==this.pow(d,f).cmp(c);)d.redIAdd(c);for(var u=this.pow(d,i),l=this.pow(e,i.addn(1).iushrn(1)),h=this.pow(e,i),b=a;0!==h.cmp(s);){for(var p=h,y=0;0!==p.cmp(s);y++)p=p.redSqr();r(y<b);var v=this.pow(u,new o(1).iushln(b-y-1));l=l.redMul(v),u=v.redSqr(),h=h.redMul(u),b=y}return l},M.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},M.prototype.pow=function(e,t){if(t.isZero())return new o(1).toRed(this);if(0===t.cmpn(1))return e.clone();var n=new Array(16);n[0]=new o(1).toRed(this),n[1]=e;for(var r=2;r<n.length;r++)n[r]=this.mul(n[r-1],e);var i=n[0],a=0,s=0,c=t.bitLength()%26;for(0===c&&(c=26),r=t.length-1;r>=0;r--){for(var f=t.words[r],d=c-1;d>=0;d--){var u=f>>d&1;i!==n[0]&&(i=this.sqr(i)),0!==u||0!==a?(a<<=1,a|=u,(4==++s||0===r&&0===d)&&(i=this.mul(i,n[a]),s=0,a=0)):s=0}c=26}return i},M.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},M.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},o.mont=function(e){return new O(e)},i(O,M),O.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},O.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},O.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var n=e.imul(t),r=n.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=n.isub(r).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},O.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new o(0)._forceRed(this);var n=e.mul(t),r=n.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=n.isub(r).iushrn(this.shift),a=i;return i.cmp(this.m)>=0?a=i.isub(this.m):i.cmpn(0)<0&&(a=i.iadd(this.m)),a._forceRed(this)},O.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(e=n.nmd(e),this)},9931:(e,t,n)=>{var r;function i(e){this.rand=e}if(e.exports=function(e){return r||(r=new i(null)),r.generate(e)},e.exports.Rand=i,i.prototype.generate=function(e){return this._rand(e)},i.prototype._rand=function(e){if(this.rand.getBytes)return this.rand.getBytes(e);for(var t=new Uint8Array(e),n=0;n<t.length;n++)t[n]=this.rand.getByte();return t},"object"==typeof self)self.crypto&&self.crypto.getRandomValues?i.prototype._rand=function(e){var t=new Uint8Array(e);return self.crypto.getRandomValues(t),t}:self.msCrypto&&self.msCrypto.getRandomValues?i.prototype._rand=function(e){var t=new Uint8Array(e);return self.msCrypto.getRandomValues(t),t}:"object"==typeof window&&(i.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var o=n(9214);if("function"!=typeof o.randomBytes)throw new Error("Not supported");i.prototype._rand=function(e){return o.randomBytes(e)}}catch(e){}},8764:(e,t,n)=>{"use strict";const r=n(9742),i=n(645),o="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=c,t.SlowBuffer=function(e){return+e!=e&&(e=0),c.alloc(+e)},t.INSPECT_MAX_BYTES=50;const a=2147483647;function s(e){if(e>a)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,c.prototype),t}function c(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return u(e)}return f(e,t,n)}function f(e,t,n){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!c.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const n=0|p(e,t);let r=s(n);const i=r.write(e,t);return i!==n&&(r=r.slice(0,i)),r}(e,t);if(ArrayBuffer.isView(e))return function(e){if(Y(e,Uint8Array)){const t=new Uint8Array(e);return h(t.buffer,t.byteOffset,t.byteLength)}return l(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(Y(e,ArrayBuffer)||e&&Y(e.buffer,ArrayBuffer))return h(e,t,n);if("undefined"!=typeof SharedArrayBuffer&&(Y(e,SharedArrayBuffer)||e&&Y(e.buffer,SharedArrayBuffer)))return h(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return c.from(r,t,n);const i=function(e){if(c.isBuffer(e)){const t=0|b(e.length),n=s(t);return 0===n.length||e.copy(n,0,0,t),n}return void 0!==e.length?"number"!=typeof e.length||J(e.length)?s(0):l(e):"Buffer"===e.type&&Array.isArray(e.data)?l(e.data):void 0}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return c.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function d(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function u(e){return d(e),s(e<0?0:0|b(e))}function l(e){const t=e.length<0?0:0|b(e.length),n=s(t);for(let r=0;r<t;r+=1)n[r]=255&e[r];return n}function h(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');let r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(r,c.prototype),r}function b(e){if(e>=a)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a.toString(16)+" bytes");return 0|e}function p(e,t){if(c.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||Y(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;let i=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return V(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return K(e).length;default:if(i)return r?-1:V(e).length;t=(""+t).toLowerCase(),i=!0}}function y(e,t,n){let r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return z(this,t,n);case"utf8":case"utf-8":return k(this,t,n);case"ascii":return T(this,t,n);case"latin1":case"binary":return E(this,t,n);case"base64":return j(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return L(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function v(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function m(e,t,n,r,i){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),J(n=+n)&&(n=i?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(i)return-1;n=e.length-1}else if(n<0){if(!i)return-1;n=0}if("string"==typeof t&&(t=c.from(t,r)),c.isBuffer(t))return 0===t.length?-1:g(e,t,n,r,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):g(e,[t],n,r,i);throw new TypeError("val must be string, number or Buffer")}function g(e,t,n,r,i){let o,a=1,s=e.length,c=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;a=2,s/=2,c/=2,n/=2}function f(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(i){let r=-1;for(o=n;o<s;o++)if(f(e,o)===f(t,-1===r?0:o-r)){if(-1===r&&(r=o),o-r+1===c)return r*a}else-1!==r&&(o-=o-r),r=-1}else for(n+c>s&&(n=s-c),o=n;o>=0;o--){let n=!0;for(let r=0;r<c;r++)if(f(e,o+r)!==f(t,r)){n=!1;break}if(n)return o}return-1}function w(e,t,n,r){n=Number(n)||0;const i=e.length-n;r?(r=Number(r))>i&&(r=i):r=i;const o=t.length;let a;for(r>o/2&&(r=o/2),a=0;a<r;++a){const r=parseInt(t.substr(2*a,2),16);if(J(r))return a;e[n+a]=r}return a}function P(e,t,n,r){return C(V(t,e.length-n),e,n,r)}function x(e,t,n,r){return C(function(e){const t=[];for(let n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function M(e,t,n,r){return C(K(t),e,n,r)}function O(e,t,n,r){return C(function(e,t){let n,r,i;const o=[];for(let a=0;a<e.length&&!((t-=2)<0);++a)n=e.charCodeAt(a),r=n>>8,i=n%256,o.push(i),o.push(r);return o}(t,e.length-n),e,n,r)}function j(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function k(e,t,n){n=Math.min(e.length,n);const r=[];let i=t;for(;i<n;){const t=e[i];let o=null,a=t>239?4:t>223?3:t>191?2:1;if(i+a<=n){let n,r,s,c;switch(a){case 1:t<128&&(o=t);break;case 2:n=e[i+1],128==(192&n)&&(c=(31&t)<<6|63&n,c>127&&(o=c));break;case 3:n=e[i+1],r=e[i+2],128==(192&n)&&128==(192&r)&&(c=(15&t)<<12|(63&n)<<6|63&r,c>2047&&(c<55296||c>57343)&&(o=c));break;case 4:n=e[i+1],r=e[i+2],s=e[i+3],128==(192&n)&&128==(192&r)&&128==(192&s)&&(c=(15&t)<<18|(63&n)<<12|(63&r)<<6|63&s,c>65535&&c<1114112&&(o=c))}}null===o?(o=65533,a=1):o>65535&&(o-=65536,r.push(o>>>10&1023|55296),o=56320|1023&o),r.push(o),i+=a}return function(e){const t=e.length;if(t<=A)return String.fromCharCode.apply(String,e);let n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=A));return n}(r)}t.kMaxLength=a,c.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),c.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}}),c.poolSize=8192,c.from=function(e,t,n){return f(e,t,n)},Object.setPrototypeOf(c.prototype,Uint8Array.prototype),Object.setPrototypeOf(c,Uint8Array),c.alloc=function(e,t,n){return function(e,t,n){return d(e),e<=0?s(e):void 0!==t?"string"==typeof n?s(e).fill(t,n):s(e).fill(t):s(e)}(e,t,n)},c.allocUnsafe=function(e){return u(e)},c.allocUnsafeSlow=function(e){return u(e)},c.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==c.prototype},c.compare=function(e,t){if(Y(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),Y(t,Uint8Array)&&(t=c.from(t,t.offset,t.byteLength)),!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,r=t.length;for(let i=0,o=Math.min(n,r);i<o;++i)if(e[i]!==t[i]){n=e[i],r=t[i];break}return n<r?-1:r<n?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);let n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;const r=c.allocUnsafe(t);let i=0;for(n=0;n<e.length;++n){let t=e[n];if(Y(t,Uint8Array))i+t.length>r.length?(c.isBuffer(t)||(t=c.from(t)),t.copy(r,i)):Uint8Array.prototype.set.call(r,t,i);else{if(!c.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(r,i)}i+=t.length}return r},c.byteLength=p,c.prototype._isBuffer=!0,c.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)v(this,t,t+1);return this},c.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)v(this,t,t+3),v(this,t+1,t+2);return this},c.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)v(this,t,t+7),v(this,t+1,t+6),v(this,t+2,t+5),v(this,t+3,t+4);return this},c.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?k(this,0,e):y.apply(this,arguments)},c.prototype.toLocaleString=c.prototype.toString,c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){let e="";const n=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},o&&(c.prototype[o]=c.prototype.inspect),c.prototype.compare=function(e,t,n,r,i){if(Y(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),!c.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===i&&(i=this.length),t<0||n>e.length||r<0||i>this.length)throw new RangeError("out of range index");if(r>=i&&t>=n)return 0;if(r>=i)return-1;if(t>=n)return 1;if(this===e)return 0;let o=(i>>>=0)-(r>>>=0),a=(n>>>=0)-(t>>>=0);const s=Math.min(o,a),f=this.slice(r,i),d=e.slice(t,n);for(let e=0;e<s;++e)if(f[e]!==d[e]){o=f[e],a=d[e];break}return o<a?-1:a<o?1:0},c.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},c.prototype.indexOf=function(e,t,n){return m(this,e,t,n,!0)},c.prototype.lastIndexOf=function(e,t,n){return m(this,e,t,n,!1)},c.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}const i=this.length-t;if((void 0===n||n>i)&&(n=i),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let o=!1;for(;;)switch(r){case"hex":return w(this,e,t,n);case"utf8":case"utf-8":return P(this,e,t,n);case"ascii":case"latin1":case"binary":return x(this,e,t,n);case"base64":return M(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return O(this,e,t,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const A=4096;function T(e,t,n){let r="";n=Math.min(e.length,n);for(let i=t;i<n;++i)r+=String.fromCharCode(127&e[i]);return r}function E(e,t,n){let r="";n=Math.min(e.length,n);for(let i=t;i<n;++i)r+=String.fromCharCode(e[i]);return r}function z(e,t,n){const r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);let i="";for(let r=t;r<n;++r)i+=Q[e[r]];return i}function L(e,t,n){const r=e.slice(t,n);let i="";for(let e=0;e<r.length-1;e+=2)i+=String.fromCharCode(r[e]+256*r[e+1]);return i}function N(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function S(e,t,n,r,i,o){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<o)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function U(e,t,n,r,i){Z(t,r,i,e,n,7);let o=Number(t&BigInt(4294967295));e[n++]=o,o>>=8,e[n++]=o,o>>=8,e[n++]=o,o>>=8,e[n++]=o;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,n}function H(e,t,n,r,i){Z(t,r,i,e,n,7);let o=Number(t&BigInt(4294967295));e[n+7]=o,o>>=8,e[n+6]=o,o>>=8,e[n+5]=o,o>>=8,e[n+4]=o;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[n+3]=a,a>>=8,e[n+2]=a,a>>=8,e[n+1]=a,a>>=8,e[n]=a,n+8}function I(e,t,n,r,i,o){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function B(e,t,n,r,o){return t=+t,n>>>=0,o||I(e,0,n,4),i.write(e,t,n,r,23,4),n+4}function D(e,t,n,r,o){return t=+t,n>>>=0,o||I(e,0,n,8),i.write(e,t,n,r,52,8),n+8}c.prototype.slice=function(e,t){const n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);const r=this.subarray(e,t);return Object.setPrototypeOf(r,c.prototype),r},c.prototype.readUintLE=c.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||N(e,t,this.length);let r=this[e],i=1,o=0;for(;++o<t&&(i*=256);)r+=this[e+o]*i;return r},c.prototype.readUintBE=c.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||N(e,t,this.length);let r=this[e+--t],i=1;for(;t>0&&(i*=256);)r+=this[e+--t]*i;return r},c.prototype.readUint8=c.prototype.readUInt8=function(e,t){return e>>>=0,t||N(e,1,this.length),this[e]},c.prototype.readUint16LE=c.prototype.readUInt16LE=function(e,t){return e>>>=0,t||N(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUint16BE=c.prototype.readUInt16BE=function(e,t){return e>>>=0,t||N(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUint32LE=c.prototype.readUInt32LE=function(e,t){return e>>>=0,t||N(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUint32BE=c.prototype.readUInt32BE=function(e,t){return e>>>=0,t||N(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readBigUInt64LE=_((function(e){W(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,i=this[++e]+256*this[++e]+65536*this[++e]+n*2**24;return BigInt(r)+(BigInt(i)<<BigInt(32))})),c.prototype.readBigUInt64BE=_((function(e){W(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=t*2**24+65536*this[++e]+256*this[++e]+this[++e],i=this[++e]*2**24+65536*this[++e]+256*this[++e]+n;return(BigInt(r)<<BigInt(32))+BigInt(i)})),c.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||N(e,t,this.length);let r=this[e],i=1,o=0;for(;++o<t&&(i*=256);)r+=this[e+o]*i;return i*=128,r>=i&&(r-=Math.pow(2,8*t)),r},c.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||N(e,t,this.length);let r=t,i=1,o=this[e+--r];for(;r>0&&(i*=256);)o+=this[e+--r]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*t)),o},c.prototype.readInt8=function(e,t){return e>>>=0,t||N(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){e>>>=0,t||N(e,2,this.length);const n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt16BE=function(e,t){e>>>=0,t||N(e,2,this.length);const n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt32LE=function(e,t){return e>>>=0,t||N(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return e>>>=0,t||N(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readBigInt64LE=_((function(e){W(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24);return(BigInt(r)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),c.prototype.readBigInt64BE=_((function(e){W(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(r)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+n)})),c.prototype.readFloatLE=function(e,t){return e>>>=0,t||N(e,4,this.length),i.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return e>>>=0,t||N(e,4,this.length),i.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return e>>>=0,t||N(e,8,this.length),i.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return e>>>=0,t||N(e,8,this.length),i.read(this,e,!1,52,8)},c.prototype.writeUintLE=c.prototype.writeUIntLE=function(e,t,n,r){e=+e,t>>>=0,n>>>=0,r||S(this,e,t,n,Math.pow(2,8*n)-1,0);let i=1,o=0;for(this[t]=255&e;++o<n&&(i*=256);)this[t+o]=e/i&255;return t+n},c.prototype.writeUintBE=c.prototype.writeUIntBE=function(e,t,n,r){e=+e,t>>>=0,n>>>=0,r||S(this,e,t,n,Math.pow(2,8*n)-1,0);let i=n-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+n},c.prototype.writeUint8=c.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||S(this,e,t,1,255,0),this[t]=255&e,t+1},c.prototype.writeUint16LE=c.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||S(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeUint16BE=c.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||S(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeUint32LE=c.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||S(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},c.prototype.writeUint32BE=c.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||S(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigUInt64LE=_((function(e,t=0){return U(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeBigUInt64BE=_((function(e,t=0){return H(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);S(this,e,t,n,r-1,-r)}let i=0,o=1,a=0;for(this[t]=255&e;++i<n&&(o*=256);)e<0&&0===a&&0!==this[t+i-1]&&(a=1),this[t+i]=(e/o>>0)-a&255;return t+n},c.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);S(this,e,t,n,r-1,-r)}let i=n-1,o=1,a=0;for(this[t+i]=255&e;--i>=0&&(o*=256);)e<0&&0===a&&0!==this[t+i+1]&&(a=1),this[t+i]=(e/o>>0)-a&255;return t+n},c.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||S(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||S(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||S(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||S(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},c.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||S(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigInt64LE=_((function(e,t=0){return U(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeBigInt64BE=_((function(e,t=0){return H(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeFloatLE=function(e,t,n){return B(this,e,t,!0,n)},c.prototype.writeFloatBE=function(e,t,n){return B(this,e,t,!1,n)},c.prototype.writeDoubleLE=function(e,t,n){return D(this,e,t,!0,n)},c.prototype.writeDoubleBE=function(e,t,n){return D(this,e,t,!1,n)},c.prototype.copy=function(e,t,n,r){if(!c.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);const i=r-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,r):Uint8Array.prototype.set.call(e,this.subarray(n,r),t),i},c.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!c.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){const t=e.charCodeAt(0);("utf8"===r&&t<128||"latin1"===r)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;let i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{const o=c.isBuffer(e)?e:c.from(e,r),a=o.length;if(0===a)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<n-t;++i)this[i+t]=o[i%a]}return this};const X={};function R(e,t,n){X[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function F(e){let t="",n=e.length;const r="-"===e[0]?1:0;for(;n>=r+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function Z(e,t,n,r,i,o){if(e>n||e<t){const r="bigint"==typeof t?"n":"";let i;throw i=o>3?0===t||t===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(o+1)}${r}`:`>= -(2${r} ** ${8*(o+1)-1}${r}) and < 2 ** ${8*(o+1)-1}${r}`:`>= ${t}${r} and <= ${n}${r}`,new X.ERR_OUT_OF_RANGE("value",i,e)}!function(e,t,n){W(t,"offset"),void 0!==e[t]&&void 0!==e[t+n]||G(t,e.length-(n+1))}(r,i,o)}function W(e,t){if("number"!=typeof e)throw new X.ERR_INVALID_ARG_TYPE(t,"number",e)}function G(e,t,n){if(Math.floor(e)!==e)throw W(e,n),new X.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(t<0)throw new X.ERR_BUFFER_OUT_OF_BOUNDS;throw new X.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${t}`,e)}R("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),R("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),R("ERR_OUT_OF_RANGE",(function(e,t,n){let r=`The value of "${e}" is out of range.`,i=n;return Number.isInteger(n)&&Math.abs(n)>2**32?i=F(String(n)):"bigint"==typeof n&&(i=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(i=F(i)),i+="n"),r+=` It must be ${t}. Received ${i}`,r}),RangeError);const q=/[^+/0-9A-Za-z-_]/g;function V(e,t){let n;t=t||1/0;const r=e.length;let i=null;const o=[];for(let a=0;a<r;++a){if(n=e.charCodeAt(a),n>55295&&n<57344){if(!i){if(n>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(a+1===r){(t-=3)>-1&&o.push(239,191,189);continue}i=n;continue}if(n<56320){(t-=3)>-1&&o.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,n<128){if((t-=1)<0)break;o.push(n)}else if(n<2048){if((t-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function K(e){return r.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(q,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function C(e,t,n,r){let i;for(i=0;i<r&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}function Y(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function J(e){return e!=e}const Q=function(){const e="0123456789abcdef",t=new Array(256);for(let n=0;n<16;++n){const r=16*n;for(let i=0;i<16;++i)t[r+i]=e[n]+e[i]}return t}();function _(e){return"undefined"==typeof BigInt?$:e}function $(){throw new Error("BigInt not supported")}},5678:function(e,t,n){!function(t,r){"use strict";e.exports?e.exports=r(n(780)):t.ed2curve=r(t.nacl)}(this,(function(e){"use strict";if(!e)throw new Error("tweetnacl not loaded");var t=function(e){var t,n=new Float64Array(16);if(e)for(t=0;t<e.length;t++)n[t]=e[t];return n},n=t(),r=t([1]),i=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),o=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function a(e){var t,n;for(n=0;n<16;n++)e[n]+=65536,t=Math.floor(e[n]/65536),e[(n+1)*(n<15?1:0)]+=t-1+37*(t-1)*(15===n?1:0),e[n]-=65536*t}function s(e,t,n){for(var r,i=~(n-1),o=0;o<16;o++)r=i&(e[o]^t[o]),e[o]^=r,t[o]^=r}function c(e,t,n){var r;for(r=0;r<16;r++)e[r]=t[r]+n[r]|0}function f(e,t,n){var r;for(r=0;r<16;r++)e[r]=t[r]-n[r]|0}function d(e,t,n){var r,i,o=new Float64Array(31);for(r=0;r<31;r++)o[r]=0;for(r=0;r<16;r++)for(i=0;i<16;i++)o[r+i]+=t[r]*n[i];for(r=0;r<15;r++)o[r]+=38*o[r+16];for(r=0;r<16;r++)e[r]=o[r];a(e),a(e)}function u(e,t){d(e,t,t)}function l(e,n){var r,i,o,c=t(),f=t();for(r=0;r<16;r++)f[r]=n[r];for(a(f),a(f),a(f),i=0;i<2;i++){for(c[0]=f[0]-65517,r=1;r<15;r++)c[r]=f[r]-65535-(c[r-1]>>16&1),c[r-1]&=65535;c[15]=f[15]-32767-(c[14]>>16&1),o=c[15]>>16&1,c[14]&=65535,s(f,c,1-o)}for(r=0;r<16;r++)e[2*r]=255&f[r],e[2*r+1]=f[r]>>8}function h(e,t){var n=new Uint8Array(32),r=new Uint8Array(32);return l(n,e),l(r,t),function(e,t,n,r,i){var o,a=0;for(o=0;o<32;o++)a|=e[0+o]^n[0+o];return(1&a-1>>>8)-1}(n,0,r)}function b(e){var a=new Uint8Array(32),s=[t(),t(),t(),t()],b=t(),p=t();if(function(e,a){var s,b,p=t(),y=t(),v=t(),m=t(),g=t(),w=t(),P=t();return function(e,t){var n;for(n=0;n<16;n++)e[n]=0|t[n]}(e[2],r),function(e,t){var n;for(n=0;n<16;n++)e[n]=t[2*n]+(t[2*n+1]<<8);e[15]&=32767}(e[1],a),u(v,e[1]),d(m,v,i),f(v,v,e[2]),c(m,e[2],m),u(g,m),u(w,g),d(P,w,g),d(p,P,v),d(p,p,m),function(e,n){var r,i=t();for(r=0;r<16;r++)i[r]=n[r];for(r=250;r>=0;r--)u(i,i),1!==r&&d(i,i,n);for(r=0;r<16;r++)e[r]=i[r]}(p,p),d(p,p,v),d(p,p,m),d(p,p,m),d(e[0],p,m),u(y,e[0]),d(y,y,m),h(y,v)&&d(e[0],e[0],o),u(y,e[0]),d(y,y,m),h(y,v)?-1:(s=e[0],l(b=new Uint8Array(32),s),(1&b[0])==a[31]>>7&&f(e[0],n,e[0]),d(e[3],e[0],e[1]),0)}(s,e))return null;var y=s[1];return c(b,r,y),f(p,r,y),function(e,n){var r,i=t();for(r=0;r<16;r++)i[r]=n[r];for(r=253;r>=0;r--)u(i,i),2!==r&&4!==r&&d(i,i,n);for(r=0;r<16;r++)e[r]=i[r]}(p,p),d(b,b,p),l(a,b),a}function p(t){var n,r=new Uint8Array(64),i=new Uint8Array(32);for(e.lowlevel.crypto_hash(r,t,32),r[0]&=248,r[31]&=127,r[31]|=64,n=0;n<32;n++)i[n]=r[n];for(n=0;n<64;n++)r[n]=0;return i}return{convertPublicKey:b,convertSecretKey:p,convertKeyPair:function(e){var t=b(e.publicKey);return t?{publicKey:t,secretKey:p(e.secretKey)}:null}}}))},6266:(e,t,n)=>{"use strict";var r=t;r.version=n(8597).i8,r.utils=n(953),r.rand=n(9931),r.curve=n(8254),r.curves=n(5427),r.ec=n(7954),r.eddsa=n(5980)},4918:(e,t,n)=>{"use strict";var r=n(3550),i=n(953),o=i.getNAF,a=i.getJSF,s=i.assert;function c(e,t){this.type=e,this.p=new r(t.p,16),this.red=t.prime?r.red(t.prime):r.mont(this.p),this.zero=new r(0).toRed(this.red),this.one=new r(1).toRed(this.red),this.two=new r(2).toRed(this.red),this.n=t.n&&new r(t.n,16),this.g=t.g&&this.pointFromJSON(t.g,t.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var n=this.n&&this.p.div(this.n);!n||n.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function f(e,t){this.curve=e,this.type=t,this.precomputed=null}e.exports=c,c.prototype.point=function(){throw new Error("Not implemented")},c.prototype.validate=function(){throw new Error("Not implemented")},c.prototype._fixedNafMul=function(e,t){s(e.precomputed);var n=e._getDoubles(),r=o(t,1,this._bitLength),i=(1<<n.step+1)-(n.step%2==0?2:1);i/=3;var a,c,f=[];for(a=0;a<r.length;a+=n.step){c=0;for(var d=a+n.step-1;d>=a;d--)c=(c<<1)+r[d];f.push(c)}for(var u=this.jpoint(null,null,null),l=this.jpoint(null,null,null),h=i;h>0;h--){for(a=0;a<f.length;a++)(c=f[a])===h?l=l.mixedAdd(n.points[a]):c===-h&&(l=l.mixedAdd(n.points[a].neg()));u=u.add(l)}return u.toP()},c.prototype._wnafMul=function(e,t){var n=4,r=e._getNAFPoints(n);n=r.wnd;for(var i=r.points,a=o(t,n,this._bitLength),c=this.jpoint(null,null,null),f=a.length-1;f>=0;f--){for(var d=0;f>=0&&0===a[f];f--)d++;if(f>=0&&d++,c=c.dblp(d),f<0)break;var u=a[f];s(0!==u),c="affine"===e.type?u>0?c.mixedAdd(i[u-1>>1]):c.mixedAdd(i[-u-1>>1].neg()):u>0?c.add(i[u-1>>1]):c.add(i[-u-1>>1].neg())}return"affine"===e.type?c.toP():c},c.prototype._wnafMulAdd=function(e,t,n,r,i){var s,c,f,d=this._wnafT1,u=this._wnafT2,l=this._wnafT3,h=0;for(s=0;s<r;s++){var b=(f=t[s])._getNAFPoints(e);d[s]=b.wnd,u[s]=b.points}for(s=r-1;s>=1;s-=2){var p=s-1,y=s;if(1===d[p]&&1===d[y]){var v=[t[p],null,null,t[y]];0===t[p].y.cmp(t[y].y)?(v[1]=t[p].add(t[y]),v[2]=t[p].toJ().mixedAdd(t[y].neg())):0===t[p].y.cmp(t[y].y.redNeg())?(v[1]=t[p].toJ().mixedAdd(t[y]),v[2]=t[p].add(t[y].neg())):(v[1]=t[p].toJ().mixedAdd(t[y]),v[2]=t[p].toJ().mixedAdd(t[y].neg()));var m=[-3,-1,-5,-7,0,7,5,1,3],g=a(n[p],n[y]);for(h=Math.max(g[0].length,h),l[p]=new Array(h),l[y]=new Array(h),c=0;c<h;c++){var w=0|g[0][c],P=0|g[1][c];l[p][c]=m[3*(w+1)+(P+1)],l[y][c]=0,u[p]=v}}else l[p]=o(n[p],d[p],this._bitLength),l[y]=o(n[y],d[y],this._bitLength),h=Math.max(l[p].length,h),h=Math.max(l[y].length,h)}var x=this.jpoint(null,null,null),M=this._wnafT4;for(s=h;s>=0;s--){for(var O=0;s>=0;){var j=!0;for(c=0;c<r;c++)M[c]=0|l[c][s],0!==M[c]&&(j=!1);if(!j)break;O++,s--}if(s>=0&&O++,x=x.dblp(O),s<0)break;for(c=0;c<r;c++){var k=M[c];0!==k&&(k>0?f=u[c][k-1>>1]:k<0&&(f=u[c][-k-1>>1].neg()),x="affine"===f.type?x.mixedAdd(f):x.add(f))}}for(s=0;s<r;s++)u[s]=null;return i?x:x.toP()},c.BasePoint=f,f.prototype.eq=function(){throw new Error("Not implemented")},f.prototype.validate=function(){return this.curve.validate(this)},c.prototype.decodePoint=function(e,t){e=i.toArray(e,t);var n=this.p.byteLength();if((4===e[0]||6===e[0]||7===e[0])&&e.length-1==2*n)return 6===e[0]?s(e[e.length-1]%2==0):7===e[0]&&s(e[e.length-1]%2==1),this.point(e.slice(1,1+n),e.slice(1+n,1+2*n));if((2===e[0]||3===e[0])&&e.length-1===n)return this.pointFromX(e.slice(1,1+n),3===e[0]);throw new Error("Unknown point format")},f.prototype.encodeCompressed=function(e){return this.encode(e,!0)},f.prototype._encode=function(e){var t=this.curve.p.byteLength(),n=this.getX().toArray("be",t);return e?[this.getY().isEven()?2:3].concat(n):[4].concat(n,this.getY().toArray("be",t))},f.prototype.encode=function(e,t){return i.encode(this._encode(t),e)},f.prototype.precompute=function(e){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};return t.naf=this._getNAFPoints(8),t.doubles=this._getDoubles(4,e),t.beta=this._getBeta(),this.precomputed=t,this},f.prototype._hasDoubles=function(e){if(!this.precomputed)return!1;var t=this.precomputed.doubles;return!!t&&t.points.length>=Math.ceil((e.bitLength()+1)/t.step)},f.prototype._getDoubles=function(e,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var n=[this],r=this,i=0;i<t;i+=e){for(var o=0;o<e;o++)r=r.dbl();n.push(r)}return{step:e,points:n}},f.prototype._getNAFPoints=function(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var t=[this],n=(1<<e)-1,r=1===n?null:this.dbl(),i=1;i<n;i++)t[i]=t[i-1].add(r);return{wnd:e,points:t}},f.prototype._getBeta=function(){return null},f.prototype.dblp=function(e){for(var t=this,n=0;n<e;n++)t=t.dbl();return t}},1138:(e,t,n)=>{"use strict";var r=n(953),i=n(3550),o=n(5717),a=n(4918),s=r.assert;function c(e){this.twisted=1!=(0|e.a),this.mOneA=this.twisted&&-1==(0|e.a),this.extended=this.mOneA,a.call(this,"edwards",e),this.a=new i(e.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new i(e.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new i(e.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),s(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|e.c)}function f(e,t,n,r,o){a.BasePoint.call(this,e,"projective"),null===t&&null===n&&null===r?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new i(t,16),this.y=new i(n,16),this.z=r?new i(r,16):this.curve.one,this.t=o&&new i(o,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}o(c,a),e.exports=c,c.prototype._mulA=function(e){return this.mOneA?e.redNeg():this.a.redMul(e)},c.prototype._mulC=function(e){return this.oneC?e:this.c.redMul(e)},c.prototype.jpoint=function(e,t,n,r){return this.point(e,t,n,r)},c.prototype.pointFromX=function(e,t){(e=new i(e,16)).red||(e=e.toRed(this.red));var n=e.redSqr(),r=this.c2.redSub(this.a.redMul(n)),o=this.one.redSub(this.c2.redMul(this.d).redMul(n)),a=r.redMul(o.redInvm()),s=a.redSqrt();if(0!==s.redSqr().redSub(a).cmp(this.zero))throw new Error("invalid point");var c=s.fromRed().isOdd();return(t&&!c||!t&&c)&&(s=s.redNeg()),this.point(e,s)},c.prototype.pointFromY=function(e,t){(e=new i(e,16)).red||(e=e.toRed(this.red));var n=e.redSqr(),r=n.redSub(this.c2),o=n.redMul(this.d).redMul(this.c2).redSub(this.a),a=r.redMul(o.redInvm());if(0===a.cmp(this.zero)){if(t)throw new Error("invalid point");return this.point(this.zero,e)}var s=a.redSqrt();if(0!==s.redSqr().redSub(a).cmp(this.zero))throw new Error("invalid point");return s.fromRed().isOdd()!==t&&(s=s.redNeg()),this.point(s,e)},c.prototype.validate=function(e){if(e.isInfinity())return!0;e.normalize();var t=e.x.redSqr(),n=e.y.redSqr(),r=t.redMul(this.a).redAdd(n),i=this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(n)));return 0===r.cmp(i)},o(f,a.BasePoint),c.prototype.pointFromJSON=function(e){return f.fromJSON(this,e)},c.prototype.point=function(e,t,n,r){return new f(this,e,t,n,r)},f.fromJSON=function(e,t){return new f(e,t[0],t[1],t[2])},f.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},f.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},f.prototype._extDbl=function(){var e=this.x.redSqr(),t=this.y.redSqr(),n=this.z.redSqr();n=n.redIAdd(n);var r=this.curve._mulA(e),i=this.x.redAdd(this.y).redSqr().redISub(e).redISub(t),o=r.redAdd(t),a=o.redSub(n),s=r.redSub(t),c=i.redMul(a),f=o.redMul(s),d=i.redMul(s),u=a.redMul(o);return this.curve.point(c,f,u,d)},f.prototype._projDbl=function(){var e,t,n,r,i,o,a=this.x.redAdd(this.y).redSqr(),s=this.x.redSqr(),c=this.y.redSqr();if(this.curve.twisted){var f=(r=this.curve._mulA(s)).redAdd(c);this.zOne?(e=a.redSub(s).redSub(c).redMul(f.redSub(this.curve.two)),t=f.redMul(r.redSub(c)),n=f.redSqr().redSub(f).redSub(f)):(i=this.z.redSqr(),o=f.redSub(i).redISub(i),e=a.redSub(s).redISub(c).redMul(o),t=f.redMul(r.redSub(c)),n=f.redMul(o))}else r=s.redAdd(c),i=this.curve._mulC(this.z).redSqr(),o=r.redSub(i).redSub(i),e=this.curve._mulC(a.redISub(r)).redMul(o),t=this.curve._mulC(r).redMul(s.redISub(c)),n=r.redMul(o);return this.curve.point(e,t,n)},f.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},f.prototype._extAdd=function(e){var t=this.y.redSub(this.x).redMul(e.y.redSub(e.x)),n=this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)),r=this.t.redMul(this.curve.dd).redMul(e.t),i=this.z.redMul(e.z.redAdd(e.z)),o=n.redSub(t),a=i.redSub(r),s=i.redAdd(r),c=n.redAdd(t),f=o.redMul(a),d=s.redMul(c),u=o.redMul(c),l=a.redMul(s);return this.curve.point(f,d,l,u)},f.prototype._projAdd=function(e){var t,n,r=this.z.redMul(e.z),i=r.redSqr(),o=this.x.redMul(e.x),a=this.y.redMul(e.y),s=this.curve.d.redMul(o).redMul(a),c=i.redSub(s),f=i.redAdd(s),d=this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(o).redISub(a),u=r.redMul(c).redMul(d);return this.curve.twisted?(t=r.redMul(f).redMul(a.redSub(this.curve._mulA(o))),n=c.redMul(f)):(t=r.redMul(f).redMul(a.redSub(o)),n=this.curve._mulC(c).redMul(f)),this.curve.point(u,t,n)},f.prototype.add=function(e){return this.isInfinity()?e:e.isInfinity()?this:this.curve.extended?this._extAdd(e):this._projAdd(e)},f.prototype.mul=function(e){return this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve._wnafMul(this,e)},f.prototype.mulAdd=function(e,t,n){return this.curve._wnafMulAdd(1,[this,t],[e,n],2,!1)},f.prototype.jmulAdd=function(e,t,n){return this.curve._wnafMulAdd(1,[this,t],[e,n],2,!0)},f.prototype.normalize=function(){if(this.zOne)return this;var e=this.z.redInvm();return this.x=this.x.redMul(e),this.y=this.y.redMul(e),this.t&&(this.t=this.t.redMul(e)),this.z=this.curve.one,this.zOne=!0,this},f.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},f.prototype.getX=function(){return this.normalize(),this.x.fromRed()},f.prototype.getY=function(){return this.normalize(),this.y.fromRed()},f.prototype.eq=function(e){return this===e||0===this.getX().cmp(e.getX())&&0===this.getY().cmp(e.getY())},f.prototype.eqXToP=function(e){var t=e.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(t))return!0;for(var n=e.clone(),r=this.curve.redN.redMul(this.z);;){if(n.iadd(this.curve.n),n.cmp(this.curve.p)>=0)return!1;if(t.redIAdd(r),0===this.x.cmp(t))return!0}},f.prototype.toP=f.prototype.normalize,f.prototype.mixedAdd=f.prototype.add},8254:(e,t,n)=>{"use strict";var r=t;r.base=n(4918),r.short=n(6673),r.mont=n(2881),r.edwards=n(1138)},2881:(e,t,n)=>{"use strict";var r=n(3550),i=n(5717),o=n(4918),a=n(953);function s(e){o.call(this,"mont",e),this.a=new r(e.a,16).toRed(this.red),this.b=new r(e.b,16).toRed(this.red),this.i4=new r(4).toRed(this.red).redInvm(),this.two=new r(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function c(e,t,n){o.BasePoint.call(this,e,"projective"),null===t&&null===n?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new r(t,16),this.z=new r(n,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}i(s,o),e.exports=s,s.prototype.validate=function(e){var t=e.normalize().x,n=t.redSqr(),r=n.redMul(t).redAdd(n.redMul(this.a)).redAdd(t);return 0===r.redSqrt().redSqr().cmp(r)},i(c,o.BasePoint),s.prototype.decodePoint=function(e,t){return this.point(a.toArray(e,t),1)},s.prototype.point=function(e,t){return new c(this,e,t)},s.prototype.pointFromJSON=function(e){return c.fromJSON(this,e)},c.prototype.precompute=function(){},c.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},c.fromJSON=function(e,t){return new c(e,t[0],t[1]||e.one)},c.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},c.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},c.prototype.dbl=function(){var e=this.x.redAdd(this.z).redSqr(),t=this.x.redSub(this.z).redSqr(),n=e.redSub(t),r=e.redMul(t),i=n.redMul(t.redAdd(this.curve.a24.redMul(n)));return this.curve.point(r,i)},c.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},c.prototype.diffAdd=function(e,t){var n=this.x.redAdd(this.z),r=this.x.redSub(this.z),i=e.x.redAdd(e.z),o=e.x.redSub(e.z).redMul(n),a=i.redMul(r),s=t.z.redMul(o.redAdd(a).redSqr()),c=t.x.redMul(o.redISub(a).redSqr());return this.curve.point(s,c)},c.prototype.mul=function(e){for(var t=e.clone(),n=this,r=this.curve.point(null,null),i=[];0!==t.cmpn(0);t.iushrn(1))i.push(t.andln(1));for(var o=i.length-1;o>=0;o--)0===i[o]?(n=n.diffAdd(r,this),r=r.dbl()):(r=n.diffAdd(r,this),n=n.dbl());return r},c.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},c.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},c.prototype.eq=function(e){return 0===this.getX().cmp(e.getX())},c.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},c.prototype.getX=function(){return this.normalize(),this.x.fromRed()}},6673:(e,t,n)=>{"use strict";var r=n(953),i=n(3550),o=n(5717),a=n(4918),s=r.assert;function c(e){a.call(this,"short",e),this.a=new i(e.a,16).toRed(this.red),this.b=new i(e.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(e),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function f(e,t,n,r){a.BasePoint.call(this,e,"affine"),null===t&&null===n?(this.x=null,this.y=null,this.inf=!0):(this.x=new i(t,16),this.y=new i(n,16),r&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function d(e,t,n,r){a.BasePoint.call(this,e,"jacobian"),null===t&&null===n&&null===r?(this.x=this.curve.one,this.y=this.curve.one,this.z=new i(0)):(this.x=new i(t,16),this.y=new i(n,16),this.z=new i(r,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}o(c,a),e.exports=c,c.prototype._getEndomorphism=function(e){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var t,n;if(e.beta)t=new i(e.beta,16).toRed(this.red);else{var r=this._getEndoRoots(this.p);t=(t=r[0].cmp(r[1])<0?r[0]:r[1]).toRed(this.red)}if(e.lambda)n=new i(e.lambda,16);else{var o=this._getEndoRoots(this.n);0===this.g.mul(o[0]).x.cmp(this.g.x.redMul(t))?n=o[0]:(n=o[1],s(0===this.g.mul(n).x.cmp(this.g.x.redMul(t))))}return{beta:t,lambda:n,basis:e.basis?e.basis.map((function(e){return{a:new i(e.a,16),b:new i(e.b,16)}})):this._getEndoBasis(n)}}},c.prototype._getEndoRoots=function(e){var t=e===this.p?this.red:i.mont(e),n=new i(2).toRed(t).redInvm(),r=n.redNeg(),o=new i(3).toRed(t).redNeg().redSqrt().redMul(n);return[r.redAdd(o).fromRed(),r.redSub(o).fromRed()]},c.prototype._getEndoBasis=function(e){for(var t,n,r,o,a,s,c,f,d,u=this.n.ushrn(Math.floor(this.n.bitLength()/2)),l=e,h=this.n.clone(),b=new i(1),p=new i(0),y=new i(0),v=new i(1),m=0;0!==l.cmpn(0);){var g=h.div(l);f=h.sub(g.mul(l)),d=y.sub(g.mul(b));var w=v.sub(g.mul(p));if(!r&&f.cmp(u)<0)t=c.neg(),n=b,r=f.neg(),o=d;else if(r&&2==++m)break;c=f,h=l,l=f,y=b,b=d,v=p,p=w}a=f.neg(),s=d;var P=r.sqr().add(o.sqr());return a.sqr().add(s.sqr()).cmp(P)>=0&&(a=t,s=n),r.negative&&(r=r.neg(),o=o.neg()),a.negative&&(a=a.neg(),s=s.neg()),[{a:r,b:o},{a,b:s}]},c.prototype._endoSplit=function(e){var t=this.endo.basis,n=t[0],r=t[1],i=r.b.mul(e).divRound(this.n),o=n.b.neg().mul(e).divRound(this.n),a=i.mul(n.a),s=o.mul(r.a),c=i.mul(n.b),f=o.mul(r.b);return{k1:e.sub(a).sub(s),k2:c.add(f).neg()}},c.prototype.pointFromX=function(e,t){(e=new i(e,16)).red||(e=e.toRed(this.red));var n=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),r=n.redSqrt();if(0!==r.redSqr().redSub(n).cmp(this.zero))throw new Error("invalid point");var o=r.fromRed().isOdd();return(t&&!o||!t&&o)&&(r=r.redNeg()),this.point(e,r)},c.prototype.validate=function(e){if(e.inf)return!0;var t=e.x,n=e.y,r=this.a.redMul(t),i=t.redSqr().redMul(t).redIAdd(r).redIAdd(this.b);return 0===n.redSqr().redISub(i).cmpn(0)},c.prototype._endoWnafMulAdd=function(e,t,n){for(var r=this._endoWnafT1,i=this._endoWnafT2,o=0;o<e.length;o++){var a=this._endoSplit(t[o]),s=e[o],c=s._getBeta();a.k1.negative&&(a.k1.ineg(),s=s.neg(!0)),a.k2.negative&&(a.k2.ineg(),c=c.neg(!0)),r[2*o]=s,r[2*o+1]=c,i[2*o]=a.k1,i[2*o+1]=a.k2}for(var f=this._wnafMulAdd(1,r,i,2*o,n),d=0;d<2*o;d++)r[d]=null,i[d]=null;return f},o(f,a.BasePoint),c.prototype.point=function(e,t,n){return new f(this,e,t,n)},c.prototype.pointFromJSON=function(e,t){return f.fromJSON(this,e,t)},f.prototype._getBeta=function(){if(this.curve.endo){var e=this.precomputed;if(e&&e.beta)return e.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var n=this.curve,r=function(e){return n.point(e.x.redMul(n.endo.beta),e.y)};e.beta=t,t.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(r)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(r)}}}return t}},f.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},f.fromJSON=function(e,t,n){"string"==typeof t&&(t=JSON.parse(t));var r=e.point(t[0],t[1],n);if(!t[2])return r;function i(t){return e.point(t[0],t[1],n)}var o=t[2];return r.precomputed={beta:null,doubles:o.doubles&&{step:o.doubles.step,points:[r].concat(o.doubles.points.map(i))},naf:o.naf&&{wnd:o.naf.wnd,points:[r].concat(o.naf.points.map(i))}},r},f.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},f.prototype.isInfinity=function(){return this.inf},f.prototype.add=function(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(0===this.x.cmp(e.x))return this.curve.point(null,null);var t=this.y.redSub(e.y);0!==t.cmpn(0)&&(t=t.redMul(this.x.redSub(e.x).redInvm()));var n=t.redSqr().redISub(this.x).redISub(e.x),r=t.redMul(this.x.redSub(n)).redISub(this.y);return this.curve.point(n,r)},f.prototype.dbl=function(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(0===e.cmpn(0))return this.curve.point(null,null);var t=this.curve.a,n=this.x.redSqr(),r=e.redInvm(),i=n.redAdd(n).redIAdd(n).redIAdd(t).redMul(r),o=i.redSqr().redISub(this.x.redAdd(this.x)),a=i.redMul(this.x.redSub(o)).redISub(this.y);return this.curve.point(o,a)},f.prototype.getX=function(){return this.x.fromRed()},f.prototype.getY=function(){return this.y.fromRed()},f.prototype.mul=function(e){return e=new i(e,16),this.isInfinity()?this:this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve.endo?this.curve._endoWnafMulAdd([this],[e]):this.curve._wnafMul(this,e)},f.prototype.mulAdd=function(e,t,n){var r=[this,t],i=[e,n];return this.curve.endo?this.curve._endoWnafMulAdd(r,i):this.curve._wnafMulAdd(1,r,i,2)},f.prototype.jmulAdd=function(e,t,n){var r=[this,t],i=[e,n];return this.curve.endo?this.curve._endoWnafMulAdd(r,i,!0):this.curve._wnafMulAdd(1,r,i,2,!0)},f.prototype.eq=function(e){return this===e||this.inf===e.inf&&(this.inf||0===this.x.cmp(e.x)&&0===this.y.cmp(e.y))},f.prototype.neg=function(e){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var n=this.precomputed,r=function(e){return e.neg()};t.precomputed={naf:n.naf&&{wnd:n.naf.wnd,points:n.naf.points.map(r)},doubles:n.doubles&&{step:n.doubles.step,points:n.doubles.points.map(r)}}}return t},f.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},o(d,a.BasePoint),c.prototype.jpoint=function(e,t,n){return new d(this,e,t,n)},d.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm(),t=e.redSqr(),n=this.x.redMul(t),r=this.y.redMul(t).redMul(e);return this.curve.point(n,r)},d.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},d.prototype.add=function(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var t=e.z.redSqr(),n=this.z.redSqr(),r=this.x.redMul(t),i=e.x.redMul(n),o=this.y.redMul(t.redMul(e.z)),a=e.y.redMul(n.redMul(this.z)),s=r.redSub(i),c=o.redSub(a);if(0===s.cmpn(0))return 0!==c.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var f=s.redSqr(),d=f.redMul(s),u=r.redMul(f),l=c.redSqr().redIAdd(d).redISub(u).redISub(u),h=c.redMul(u.redISub(l)).redISub(o.redMul(d)),b=this.z.redMul(e.z).redMul(s);return this.curve.jpoint(l,h,b)},d.prototype.mixedAdd=function(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var t=this.z.redSqr(),n=this.x,r=e.x.redMul(t),i=this.y,o=e.y.redMul(t).redMul(this.z),a=n.redSub(r),s=i.redSub(o);if(0===a.cmpn(0))return 0!==s.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var c=a.redSqr(),f=c.redMul(a),d=n.redMul(c),u=s.redSqr().redIAdd(f).redISub(d).redISub(d),l=s.redMul(d.redISub(u)).redISub(i.redMul(f)),h=this.z.redMul(a);return this.curve.jpoint(u,l,h)},d.prototype.dblp=function(e){if(0===e)return this;if(this.isInfinity())return this;if(!e)return this.dbl();var t;if(this.curve.zeroA||this.curve.threeA){var n=this;for(t=0;t<e;t++)n=n.dbl();return n}var r=this.curve.a,i=this.curve.tinv,o=this.x,a=this.y,s=this.z,c=s.redSqr().redSqr(),f=a.redAdd(a);for(t=0;t<e;t++){var d=o.redSqr(),u=f.redSqr(),l=u.redSqr(),h=d.redAdd(d).redIAdd(d).redIAdd(r.redMul(c)),b=o.redMul(u),p=h.redSqr().redISub(b.redAdd(b)),y=b.redISub(p),v=h.redMul(y);v=v.redIAdd(v).redISub(l);var m=f.redMul(s);t+1<e&&(c=c.redMul(l)),o=p,s=m,f=v}return this.curve.jpoint(o,f.redMul(i),s)},d.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},d.prototype._zeroDbl=function(){var e,t,n;if(this.zOne){var r=this.x.redSqr(),i=this.y.redSqr(),o=i.redSqr(),a=this.x.redAdd(i).redSqr().redISub(r).redISub(o);a=a.redIAdd(a);var s=r.redAdd(r).redIAdd(r),c=s.redSqr().redISub(a).redISub(a),f=o.redIAdd(o);f=(f=f.redIAdd(f)).redIAdd(f),e=c,t=s.redMul(a.redISub(c)).redISub(f),n=this.y.redAdd(this.y)}else{var d=this.x.redSqr(),u=this.y.redSqr(),l=u.redSqr(),h=this.x.redAdd(u).redSqr().redISub(d).redISub(l);h=h.redIAdd(h);var b=d.redAdd(d).redIAdd(d),p=b.redSqr(),y=l.redIAdd(l);y=(y=y.redIAdd(y)).redIAdd(y),e=p.redISub(h).redISub(h),t=b.redMul(h.redISub(e)).redISub(y),n=(n=this.y.redMul(this.z)).redIAdd(n)}return this.curve.jpoint(e,t,n)},d.prototype._threeDbl=function(){var e,t,n;if(this.zOne){var r=this.x.redSqr(),i=this.y.redSqr(),o=i.redSqr(),a=this.x.redAdd(i).redSqr().redISub(r).redISub(o);a=a.redIAdd(a);var s=r.redAdd(r).redIAdd(r).redIAdd(this.curve.a),c=s.redSqr().redISub(a).redISub(a);e=c;var f=o.redIAdd(o);f=(f=f.redIAdd(f)).redIAdd(f),t=s.redMul(a.redISub(c)).redISub(f),n=this.y.redAdd(this.y)}else{var d=this.z.redSqr(),u=this.y.redSqr(),l=this.x.redMul(u),h=this.x.redSub(d).redMul(this.x.redAdd(d));h=h.redAdd(h).redIAdd(h);var b=l.redIAdd(l),p=(b=b.redIAdd(b)).redAdd(b);e=h.redSqr().redISub(p),n=this.y.redAdd(this.z).redSqr().redISub(u).redISub(d);var y=u.redSqr();y=(y=(y=y.redIAdd(y)).redIAdd(y)).redIAdd(y),t=h.redMul(b.redISub(e)).redISub(y)}return this.curve.jpoint(e,t,n)},d.prototype._dbl=function(){var e=this.curve.a,t=this.x,n=this.y,r=this.z,i=r.redSqr().redSqr(),o=t.redSqr(),a=n.redSqr(),s=o.redAdd(o).redIAdd(o).redIAdd(e.redMul(i)),c=t.redAdd(t),f=(c=c.redIAdd(c)).redMul(a),d=s.redSqr().redISub(f.redAdd(f)),u=f.redISub(d),l=a.redSqr();l=(l=(l=l.redIAdd(l)).redIAdd(l)).redIAdd(l);var h=s.redMul(u).redISub(l),b=n.redAdd(n).redMul(r);return this.curve.jpoint(d,h,b)},d.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr(),t=this.y.redSqr(),n=this.z.redSqr(),r=t.redSqr(),i=e.redAdd(e).redIAdd(e),o=i.redSqr(),a=this.x.redAdd(t).redSqr().redISub(e).redISub(r),s=(a=(a=(a=a.redIAdd(a)).redAdd(a).redIAdd(a)).redISub(o)).redSqr(),c=r.redIAdd(r);c=(c=(c=c.redIAdd(c)).redIAdd(c)).redIAdd(c);var f=i.redIAdd(a).redSqr().redISub(o).redISub(s).redISub(c),d=t.redMul(f);d=(d=d.redIAdd(d)).redIAdd(d);var u=this.x.redMul(s).redISub(d);u=(u=u.redIAdd(u)).redIAdd(u);var l=this.y.redMul(f.redMul(c.redISub(f)).redISub(a.redMul(s)));l=(l=(l=l.redIAdd(l)).redIAdd(l)).redIAdd(l);var h=this.z.redAdd(a).redSqr().redISub(n).redISub(s);return this.curve.jpoint(u,l,h)},d.prototype.mul=function(e,t){return e=new i(e,t),this.curve._wnafMul(this,e)},d.prototype.eq=function(e){if("affine"===e.type)return this.eq(e.toJ());if(this===e)return!0;var t=this.z.redSqr(),n=e.z.redSqr();if(0!==this.x.redMul(n).redISub(e.x.redMul(t)).cmpn(0))return!1;var r=t.redMul(this.z),i=n.redMul(e.z);return 0===this.y.redMul(i).redISub(e.y.redMul(r)).cmpn(0)},d.prototype.eqXToP=function(e){var t=this.z.redSqr(),n=e.toRed(this.curve.red).redMul(t);if(0===this.x.cmp(n))return!0;for(var r=e.clone(),i=this.curve.redN.redMul(t);;){if(r.iadd(this.curve.n),r.cmp(this.curve.p)>=0)return!1;if(n.redIAdd(i),0===this.x.cmp(n))return!0}},d.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},d.prototype.isInfinity=function(){return 0===this.z.cmpn(0)}},5427:(e,t,n)=>{"use strict";var r,i=t,o=n(3715),a=n(8254),s=n(953).assert;function c(e){"short"===e.type?this.curve=new a.short(e):"edwards"===e.type?this.curve=new a.edwards(e):this.curve=new a.mont(e),this.g=this.curve.g,this.n=this.curve.n,this.hash=e.hash,s(this.g.validate(),"Invalid curve"),s(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function f(e,t){Object.defineProperty(i,e,{configurable:!0,enumerable:!0,get:function(){var n=new c(t);return Object.defineProperty(i,e,{configurable:!0,enumerable:!0,value:n}),n}})}i.PresetCurve=c,f("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:o.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),f("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:o.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),f("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:o.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),f("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:o.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),f("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:o.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),f("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:o.sha256,gRed:!1,g:["9"]}),f("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:o.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{r=n(1037)}catch(e){r=void 0}f("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:o.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",r]})},7954:(e,t,n)=>{"use strict";var r=n(3550),i=n(2156),o=n(953),a=n(5427),s=n(9931),c=o.assert,f=n(1251),d=n(611);function u(e){if(!(this instanceof u))return new u(e);"string"==typeof e&&(c(Object.prototype.hasOwnProperty.call(a,e),"Unknown curve "+e),e=a[e]),e instanceof a.PresetCurve&&(e={curve:e}),this.curve=e.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=e.curve.g,this.g.precompute(e.curve.n.bitLength()+1),this.hash=e.hash||e.curve.hash}e.exports=u,u.prototype.keyPair=function(e){return new f(this,e)},u.prototype.keyFromPrivate=function(e,t){return f.fromPrivate(this,e,t)},u.prototype.keyFromPublic=function(e,t){return f.fromPublic(this,e,t)},u.prototype.genKeyPair=function(e){e||(e={});for(var t=new i({hash:this.hash,pers:e.pers,persEnc:e.persEnc||"utf8",entropy:e.entropy||s(this.hash.hmacStrength),entropyEnc:e.entropy&&e.entropyEnc||"utf8",nonce:this.n.toArray()}),n=this.n.byteLength(),o=this.n.sub(new r(2));;){var a=new r(t.generate(n));if(!(a.cmp(o)>0))return a.iaddn(1),this.keyFromPrivate(a)}},u.prototype._truncateToN=function(e,t){var n=8*e.byteLength()-this.n.bitLength();return n>0&&(e=e.ushrn(n)),!t&&e.cmp(this.n)>=0?e.sub(this.n):e},u.prototype.sign=function(e,t,n,o){"object"==typeof n&&(o=n,n=null),o||(o={}),t=this.keyFromPrivate(t,n),e=this._truncateToN(new r(e,16));for(var a=this.n.byteLength(),s=t.getPrivate().toArray("be",a),c=e.toArray("be",a),f=new i({hash:this.hash,entropy:s,nonce:c,pers:o.pers,persEnc:o.persEnc||"utf8"}),u=this.n.sub(new r(1)),l=0;;l++){var h=o.k?o.k(l):new r(f.generate(this.n.byteLength()));if(!((h=this._truncateToN(h,!0)).cmpn(1)<=0||h.cmp(u)>=0)){var b=this.g.mul(h);if(!b.isInfinity()){var p=b.getX(),y=p.umod(this.n);if(0!==y.cmpn(0)){var v=h.invm(this.n).mul(y.mul(t.getPrivate()).iadd(e));if(0!==(v=v.umod(this.n)).cmpn(0)){var m=(b.getY().isOdd()?1:0)|(0!==p.cmp(y)?2:0);return o.canonical&&v.cmp(this.nh)>0&&(v=this.n.sub(v),m^=1),new d({r:y,s:v,recoveryParam:m})}}}}}},u.prototype.verify=function(e,t,n,i){e=this._truncateToN(new r(e,16)),n=this.keyFromPublic(n,i);var o=(t=new d(t,"hex")).r,a=t.s;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return!1;if(a.cmpn(1)<0||a.cmp(this.n)>=0)return!1;var s,c=a.invm(this.n),f=c.mul(e).umod(this.n),u=c.mul(o).umod(this.n);return this.curve._maxwellTrick?!(s=this.g.jmulAdd(f,n.getPublic(),u)).isInfinity()&&s.eqXToP(o):!(s=this.g.mulAdd(f,n.getPublic(),u)).isInfinity()&&0===s.getX().umod(this.n).cmp(o)},u.prototype.recoverPubKey=function(e,t,n,i){c((3&n)===n,"The recovery param is more than two bits"),t=new d(t,i);var o=this.n,a=new r(e),s=t.r,f=t.s,u=1&n,l=n>>1;if(s.cmp(this.curve.p.umod(this.curve.n))>=0&&l)throw new Error("Unable to find sencond key candinate");s=l?this.curve.pointFromX(s.add(this.curve.n),u):this.curve.pointFromX(s,u);var h=t.r.invm(o),b=o.sub(a).mul(h).umod(o),p=f.mul(h).umod(o);return this.g.mulAdd(b,s,p)},u.prototype.getKeyRecoveryParam=function(e,t,n,r){if(null!==(t=new d(t,r)).recoveryParam)return t.recoveryParam;for(var i=0;i<4;i++){var o;try{o=this.recoverPubKey(e,t,i)}catch(e){continue}if(o.eq(n))return i}throw new Error("Unable to find valid recovery factor")}},1251:(e,t,n)=>{"use strict";var r=n(3550),i=n(953).assert;function o(e,t){this.ec=e,this.priv=null,this.pub=null,t.priv&&this._importPrivate(t.priv,t.privEnc),t.pub&&this._importPublic(t.pub,t.pubEnc)}e.exports=o,o.fromPublic=function(e,t,n){return t instanceof o?t:new o(e,{pub:t,pubEnc:n})},o.fromPrivate=function(e,t,n){return t instanceof o?t:new o(e,{priv:t,privEnc:n})},o.prototype.validate=function(){var e=this.getPublic();return e.isInfinity()?{result:!1,reason:"Invalid public key"}:e.validate()?e.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},o.prototype.getPublic=function(e,t){return"string"==typeof e&&(t=e,e=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),t?this.pub.encode(t,e):this.pub},o.prototype.getPrivate=function(e){return"hex"===e?this.priv.toString(16,2):this.priv},o.prototype._importPrivate=function(e,t){this.priv=new r(e,t||16),this.priv=this.priv.umod(this.ec.curve.n)},o.prototype._importPublic=function(e,t){if(e.x||e.y)return"mont"===this.ec.curve.type?i(e.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||i(e.x&&e.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(e.x,e.y));this.pub=this.ec.curve.decodePoint(e,t)},o.prototype.derive=function(e){return e.validate()||i(e.validate(),"public point not validated"),e.mul(this.priv).getX()},o.prototype.sign=function(e,t,n){return this.ec.sign(e,this,t,n)},o.prototype.verify=function(e,t){return this.ec.verify(e,t,this)},o.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"}},611:(e,t,n)=>{"use strict";var r=n(3550),i=n(953),o=i.assert;function a(e,t){if(e instanceof a)return e;this._importDER(e,t)||(o(e.r&&e.s,"Signature without r or s"),this.r=new r(e.r,16),this.s=new r(e.s,16),void 0===e.recoveryParam?this.recoveryParam=null:this.recoveryParam=e.recoveryParam)}function s(){this.place=0}function c(e,t){var n=e[t.place++];if(!(128&n))return n;var r=15&n;if(0===r||r>4)return!1;for(var i=0,o=0,a=t.place;o<r;o++,a++)i<<=8,i|=e[a],i>>>=0;return!(i<=127)&&(t.place=a,i)}function f(e){for(var t=0,n=e.length-1;!e[t]&&!(128&e[t+1])&&t<n;)t++;return 0===t?e:e.slice(t)}function d(e,t){if(t<128)e.push(t);else{var n=1+(Math.log(t)/Math.LN2>>>3);for(e.push(128|n);--n;)e.push(t>>>(n<<3)&255);e.push(t)}}e.exports=a,a.prototype._importDER=function(e,t){e=i.toArray(e,t);var n=new s;if(48!==e[n.place++])return!1;var o=c(e,n);if(!1===o)return!1;if(o+n.place!==e.length)return!1;if(2!==e[n.place++])return!1;var a=c(e,n);if(!1===a)return!1;var f=e.slice(n.place,a+n.place);if(n.place+=a,2!==e[n.place++])return!1;var d=c(e,n);if(!1===d)return!1;if(e.length!==d+n.place)return!1;var u=e.slice(n.place,d+n.place);if(0===f[0]){if(!(128&f[1]))return!1;f=f.slice(1)}if(0===u[0]){if(!(128&u[1]))return!1;u=u.slice(1)}return this.r=new r(f),this.s=new r(u),this.recoveryParam=null,!0},a.prototype.toDER=function(e){var t=this.r.toArray(),n=this.s.toArray();for(128&t[0]&&(t=[0].concat(t)),128&n[0]&&(n=[0].concat(n)),t=f(t),n=f(n);!(n[0]||128&n[1]);)n=n.slice(1);var r=[2];d(r,t.length),(r=r.concat(t)).push(2),d(r,n.length);var o=r.concat(n),a=[48];return d(a,o.length),a=a.concat(o),i.encode(a,e)}},5980:(e,t,n)=>{"use strict";var r=n(3715),i=n(5427),o=n(953),a=o.assert,s=o.parseBytes,c=n(9087),f=n(3622);function d(e){if(a("ed25519"===e,"only tested with ed25519 so far"),!(this instanceof d))return new d(e);e=i[e].curve,this.curve=e,this.g=e.g,this.g.precompute(e.n.bitLength()+1),this.pointClass=e.point().constructor,this.encodingLength=Math.ceil(e.n.bitLength()/8),this.hash=r.sha512}e.exports=d,d.prototype.sign=function(e,t){e=s(e);var n=this.keyFromSecret(t),r=this.hashInt(n.messagePrefix(),e),i=this.g.mul(r),o=this.encodePoint(i),a=this.hashInt(o,n.pubBytes(),e).mul(n.priv()),c=r.add(a).umod(this.curve.n);return this.makeSignature({R:i,S:c,Rencoded:o})},d.prototype.verify=function(e,t,n){e=s(e),t=this.makeSignature(t);var r=this.keyFromPublic(n),i=this.hashInt(t.Rencoded(),r.pubBytes(),e),o=this.g.mul(t.S());return t.R().add(r.pub().mul(i)).eq(o)},d.prototype.hashInt=function(){for(var e=this.hash(),t=0;t<arguments.length;t++)e.update(arguments[t]);return o.intFromLE(e.digest()).umod(this.curve.n)},d.prototype.keyFromPublic=function(e){return c.fromPublic(this,e)},d.prototype.keyFromSecret=function(e){return c.fromSecret(this,e)},d.prototype.makeSignature=function(e){return e instanceof f?e:new f(this,e)},d.prototype.encodePoint=function(e){var t=e.getY().toArray("le",this.encodingLength);return t[this.encodingLength-1]|=e.getX().isOdd()?128:0,t},d.prototype.decodePoint=function(e){var t=(e=o.parseBytes(e)).length-1,n=e.slice(0,t).concat(-129&e[t]),r=0!=(128&e[t]),i=o.intFromLE(n);return this.curve.pointFromY(i,r)},d.prototype.encodeInt=function(e){return e.toArray("le",this.encodingLength)},d.prototype.decodeInt=function(e){return o.intFromLE(e)},d.prototype.isPoint=function(e){return e instanceof this.pointClass}},9087:(e,t,n)=>{"use strict";var r=n(953),i=r.assert,o=r.parseBytes,a=r.cachedProperty;function s(e,t){this.eddsa=e,this._secret=o(t.secret),e.isPoint(t.pub)?this._pub=t.pub:this._pubBytes=o(t.pub)}s.fromPublic=function(e,t){return t instanceof s?t:new s(e,{pub:t})},s.fromSecret=function(e,t){return t instanceof s?t:new s(e,{secret:t})},s.prototype.secret=function(){return this._secret},a(s,"pubBytes",(function(){return this.eddsa.encodePoint(this.pub())})),a(s,"pub",(function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())})),a(s,"privBytes",(function(){var e=this.eddsa,t=this.hash(),n=e.encodingLength-1,r=t.slice(0,e.encodingLength);return r[0]&=248,r[n]&=127,r[n]|=64,r})),a(s,"priv",(function(){return this.eddsa.decodeInt(this.privBytes())})),a(s,"hash",(function(){return this.eddsa.hash().update(this.secret()).digest()})),a(s,"messagePrefix",(function(){return this.hash().slice(this.eddsa.encodingLength)})),s.prototype.sign=function(e){return i(this._secret,"KeyPair can only verify"),this.eddsa.sign(e,this)},s.prototype.verify=function(e,t){return this.eddsa.verify(e,t,this)},s.prototype.getSecret=function(e){return i(this._secret,"KeyPair is public only"),r.encode(this.secret(),e)},s.prototype.getPublic=function(e){return r.encode(this.pubBytes(),e)},e.exports=s},3622:(e,t,n)=>{"use strict";var r=n(3550),i=n(953),o=i.assert,a=i.cachedProperty,s=i.parseBytes;function c(e,t){this.eddsa=e,"object"!=typeof t&&(t=s(t)),Array.isArray(t)&&(t={R:t.slice(0,e.encodingLength),S:t.slice(e.encodingLength)}),o(t.R&&t.S,"Signature without R or S"),e.isPoint(t.R)&&(this._R=t.R),t.S instanceof r&&(this._S=t.S),this._Rencoded=Array.isArray(t.R)?t.R:t.Rencoded,this._Sencoded=Array.isArray(t.S)?t.S:t.Sencoded}a(c,"S",(function(){return this.eddsa.decodeInt(this.Sencoded())})),a(c,"R",(function(){return this.eddsa.decodePoint(this.Rencoded())})),a(c,"Rencoded",(function(){return this.eddsa.encodePoint(this.R())})),a(c,"Sencoded",(function(){return this.eddsa.encodeInt(this.S())})),c.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},c.prototype.toHex=function(){return i.encode(this.toBytes(),"hex").toUpperCase()},e.exports=c},1037:e=>{e.exports={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}},953:(e,t,n)=>{"use strict";var r=t,i=n(3550),o=n(9746),a=n(4504);r.assert=o,r.toArray=a.toArray,r.zero2=a.zero2,r.toHex=a.toHex,r.encode=a.encode,r.getNAF=function(e,t,n){var r=new Array(Math.max(e.bitLength(),n)+1);r.fill(0);for(var i=1<<t+1,o=e.clone(),a=0;a<r.length;a++){var s,c=o.andln(i-1);o.isOdd()?(s=c>(i>>1)-1?(i>>1)-c:c,o.isubn(s)):s=0,r[a]=s,o.iushrn(1)}return r},r.getJSF=function(e,t){var n=[[],[]];e=e.clone(),t=t.clone();for(var r,i=0,o=0;e.cmpn(-i)>0||t.cmpn(-o)>0;){var a,s,c=e.andln(3)+i&3,f=t.andln(3)+o&3;3===c&&(c=-1),3===f&&(f=-1),a=0==(1&c)?0:3!=(r=e.andln(7)+i&7)&&5!==r||2!==f?c:-c,n[0].push(a),s=0==(1&f)?0:3!=(r=t.andln(7)+o&7)&&5!==r||2!==c?f:-f,n[1].push(s),2*i===a+1&&(i=1-i),2*o===s+1&&(o=1-o),e.iushrn(1),t.iushrn(1)}return n},r.cachedProperty=function(e,t,n){var r="_"+t;e.prototype[t]=function(){return void 0!==this[r]?this[r]:this[r]=n.call(this)}},r.parseBytes=function(e){return"string"==typeof e?r.toArray(e,"hex"):e},r.intFromLE=function(e){return new i(e,"hex","le")}},3715:(e,t,n)=>{var r=t;r.utils=n(6436),r.common=n(5772),r.sha=n(9041),r.ripemd=n(2949),r.hmac=n(2344),r.sha1=r.sha.sha1,r.sha256=r.sha.sha256,r.sha224=r.sha.sha224,r.sha384=r.sha.sha384,r.sha512=r.sha.sha512,r.ripemd160=r.ripemd.ripemd160},5772:(e,t,n)=>{"use strict";var r=n(6436),i=n(9746);function o(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}t.BlockHash=o,o.prototype.update=function(e,t){if(e=r.toArray(e,t),this.pending?this.pending=this.pending.concat(e):this.pending=e,this.pendingTotal+=e.length,this.pending.length>=this._delta8){var n=(e=this.pending).length%this._delta8;this.pending=e.slice(e.length-n,e.length),0===this.pending.length&&(this.pending=null),e=r.join32(e,0,e.length-n,this.endian);for(var i=0;i<e.length;i+=this._delta32)this._update(e,i,i+this._delta32)}return this},o.prototype.digest=function(e){return this.update(this._pad()),i(null===this.pending),this._digest(e)},o.prototype._pad=function(){var e=this.pendingTotal,t=this._delta8,n=t-(e+this.padLength)%t,r=new Array(n+this.padLength);r[0]=128;for(var i=1;i<n;i++)r[i]=0;if(e<<=3,"big"===this.endian){for(var o=8;o<this.padLength;o++)r[i++]=0;r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=e>>>24&255,r[i++]=e>>>16&255,r[i++]=e>>>8&255,r[i++]=255&e}else for(r[i++]=255&e,r[i++]=e>>>8&255,r[i++]=e>>>16&255,r[i++]=e>>>24&255,r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=0,o=8;o<this.padLength;o++)r[i++]=0;return r}},2344:(e,t,n)=>{"use strict";var r=n(6436),i=n(9746);function o(e,t,n){if(!(this instanceof o))return new o(e,t,n);this.Hash=e,this.blockSize=e.blockSize/8,this.outSize=e.outSize/8,this.inner=null,this.outer=null,this._init(r.toArray(t,n))}e.exports=o,o.prototype._init=function(e){e.length>this.blockSize&&(e=(new this.Hash).update(e).digest()),i(e.length<=this.blockSize);for(var t=e.length;t<this.blockSize;t++)e.push(0);for(t=0;t<e.length;t++)e[t]^=54;for(this.inner=(new this.Hash).update(e),t=0;t<e.length;t++)e[t]^=106;this.outer=(new this.Hash).update(e)},o.prototype.update=function(e,t){return this.inner.update(e,t),this},o.prototype.digest=function(e){return this.outer.update(this.inner.digest()),this.outer.digest(e)}},2949:(e,t,n)=>{"use strict";var r=n(6436),i=n(5772),o=r.rotl32,a=r.sum32,s=r.sum32_3,c=r.sum32_4,f=i.BlockHash;function d(){if(!(this instanceof d))return new d;f.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function u(e,t,n,r){return e<=15?t^n^r:e<=31?t&n|~t&r:e<=47?(t|~n)^r:e<=63?t&r|n&~r:t^(n|~r)}function l(e){return e<=15?0:e<=31?1518500249:e<=47?1859775393:e<=63?2400959708:2840853838}function h(e){return e<=15?1352829926:e<=31?1548603684:e<=47?1836072691:e<=63?2053994217:0}r.inherits(d,f),t.ripemd160=d,d.blockSize=512,d.outSize=160,d.hmacStrength=192,d.padLength=64,d.prototype._update=function(e,t){for(var n=this.h[0],r=this.h[1],i=this.h[2],f=this.h[3],d=this.h[4],m=n,g=r,w=i,P=f,x=d,M=0;M<80;M++){var O=a(o(c(n,u(M,r,i,f),e[b[M]+t],l(M)),y[M]),d);n=d,d=f,f=o(i,10),i=r,r=O,O=a(o(c(m,u(79-M,g,w,P),e[p[M]+t],h(M)),v[M]),x),m=x,x=P,P=o(w,10),w=g,g=O}O=s(this.h[1],i,P),this.h[1]=s(this.h[2],f,x),this.h[2]=s(this.h[3],d,m),this.h[3]=s(this.h[4],n,g),this.h[4]=s(this.h[0],r,w),this.h[0]=O},d.prototype._digest=function(e){return"hex"===e?r.toHex32(this.h,"little"):r.split32(this.h,"little")};var b=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],p=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],y=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],v=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},9041:(e,t,n)=>{"use strict";t.sha1=n(4761),t.sha224=n(799),t.sha256=n(9344),t.sha384=n(772),t.sha512=n(5900)},4761:(e,t,n)=>{"use strict";var r=n(6436),i=n(5772),o=n(7038),a=r.rotl32,s=r.sum32,c=r.sum32_5,f=o.ft_1,d=i.BlockHash,u=[1518500249,1859775393,2400959708,3395469782];function l(){if(!(this instanceof l))return new l;d.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}r.inherits(l,d),e.exports=l,l.blockSize=512,l.outSize=160,l.hmacStrength=80,l.padLength=64,l.prototype._update=function(e,t){for(var n=this.W,r=0;r<16;r++)n[r]=e[t+r];for(;r<n.length;r++)n[r]=a(n[r-3]^n[r-8]^n[r-14]^n[r-16],1);var i=this.h[0],o=this.h[1],d=this.h[2],l=this.h[3],h=this.h[4];for(r=0;r<n.length;r++){var b=~~(r/20),p=c(a(i,5),f(b,o,d,l),h,n[r],u[b]);h=l,l=d,d=a(o,30),o=i,i=p}this.h[0]=s(this.h[0],i),this.h[1]=s(this.h[1],o),this.h[2]=s(this.h[2],d),this.h[3]=s(this.h[3],l),this.h[4]=s(this.h[4],h)},l.prototype._digest=function(e){return"hex"===e?r.toHex32(this.h,"big"):r.split32(this.h,"big")}},799:(e,t,n)=>{"use strict";var r=n(6436),i=n(9344);function o(){if(!(this instanceof o))return new o;i.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}r.inherits(o,i),e.exports=o,o.blockSize=512,o.outSize=224,o.hmacStrength=192,o.padLength=64,o.prototype._digest=function(e){return"hex"===e?r.toHex32(this.h.slice(0,7),"big"):r.split32(this.h.slice(0,7),"big")}},9344:(e,t,n)=>{"use strict";var r=n(6436),i=n(5772),o=n(7038),a=n(9746),s=r.sum32,c=r.sum32_4,f=r.sum32_5,d=o.ch32,u=o.maj32,l=o.s0_256,h=o.s1_256,b=o.g0_256,p=o.g1_256,y=i.BlockHash,v=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function m(){if(!(this instanceof m))return new m;y.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=v,this.W=new Array(64)}r.inherits(m,y),e.exports=m,m.blockSize=512,m.outSize=256,m.hmacStrength=192,m.padLength=64,m.prototype._update=function(e,t){for(var n=this.W,r=0;r<16;r++)n[r]=e[t+r];for(;r<n.length;r++)n[r]=c(p(n[r-2]),n[r-7],b(n[r-15]),n[r-16]);var i=this.h[0],o=this.h[1],y=this.h[2],v=this.h[3],m=this.h[4],g=this.h[5],w=this.h[6],P=this.h[7];for(a(this.k.length===n.length),r=0;r<n.length;r++){var x=f(P,h(m),d(m,g,w),this.k[r],n[r]),M=s(l(i),u(i,o,y));P=w,w=g,g=m,m=s(v,x),v=y,y=o,o=i,i=s(x,M)}this.h[0]=s(this.h[0],i),this.h[1]=s(this.h[1],o),this.h[2]=s(this.h[2],y),this.h[3]=s(this.h[3],v),this.h[4]=s(this.h[4],m),this.h[5]=s(this.h[5],g),this.h[6]=s(this.h[6],w),this.h[7]=s(this.h[7],P)},m.prototype._digest=function(e){return"hex"===e?r.toHex32(this.h,"big"):r.split32(this.h,"big")}},772:(e,t,n)=>{"use strict";var r=n(6436),i=n(5900);function o(){if(!(this instanceof o))return new o;i.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}r.inherits(o,i),e.exports=o,o.blockSize=1024,o.outSize=384,o.hmacStrength=192,o.padLength=128,o.prototype._digest=function(e){return"hex"===e?r.toHex32(this.h.slice(0,12),"big"):r.split32(this.h.slice(0,12),"big")}},5900:(e,t,n)=>{"use strict";var r=n(6436),i=n(5772),o=n(9746),a=r.rotr64_hi,s=r.rotr64_lo,c=r.shr64_hi,f=r.shr64_lo,d=r.sum64,u=r.sum64_hi,l=r.sum64_lo,h=r.sum64_4_hi,b=r.sum64_4_lo,p=r.sum64_5_hi,y=r.sum64_5_lo,v=i.BlockHash,m=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function g(){if(!(this instanceof g))return new g;v.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=m,this.W=new Array(160)}function w(e,t,n,r,i){var o=e&n^~e&i;return o<0&&(o+=4294967296),o}function P(e,t,n,r,i,o){var a=t&r^~t&o;return a<0&&(a+=4294967296),a}function x(e,t,n,r,i){var o=e&n^e&i^n&i;return o<0&&(o+=4294967296),o}function M(e,t,n,r,i,o){var a=t&r^t&o^r&o;return a<0&&(a+=4294967296),a}function O(e,t){var n=a(e,t,28)^a(t,e,2)^a(t,e,7);return n<0&&(n+=4294967296),n}function j(e,t){var n=s(e,t,28)^s(t,e,2)^s(t,e,7);return n<0&&(n+=4294967296),n}function k(e,t){var n=s(e,t,14)^s(e,t,18)^s(t,e,9);return n<0&&(n+=4294967296),n}function A(e,t){var n=a(e,t,1)^a(e,t,8)^c(e,t,7);return n<0&&(n+=4294967296),n}function T(e,t){var n=s(e,t,1)^s(e,t,8)^f(e,t,7);return n<0&&(n+=4294967296),n}function E(e,t){var n=s(e,t,19)^s(t,e,29)^f(e,t,6);return n<0&&(n+=4294967296),n}r.inherits(g,v),e.exports=g,g.blockSize=1024,g.outSize=512,g.hmacStrength=192,g.padLength=128,g.prototype._prepareBlock=function(e,t){for(var n=this.W,r=0;r<32;r++)n[r]=e[t+r];for(;r<n.length;r+=2){var i=(y=n[r-4],v=n[r-3],m=void 0,(m=a(y,v,19)^a(v,y,29)^c(y,v,6))<0&&(m+=4294967296),m),o=E(n[r-4],n[r-3]),s=n[r-14],f=n[r-13],d=A(n[r-30],n[r-29]),u=T(n[r-30],n[r-29]),l=n[r-32],p=n[r-31];n[r]=h(i,o,s,f,d,u,l,p),n[r+1]=b(i,o,s,f,d,u,l,p)}var y,v,m},g.prototype._update=function(e,t){this._prepareBlock(e,t);var n,r,i,s=this.W,c=this.h[0],f=this.h[1],h=this.h[2],b=this.h[3],v=this.h[4],m=this.h[5],g=this.h[6],A=this.h[7],T=this.h[8],E=this.h[9],z=this.h[10],L=this.h[11],N=this.h[12],S=this.h[13],U=this.h[14],H=this.h[15];o(this.k.length===s.length);for(var I=0;I<s.length;I+=2){var B=U,D=H,X=(i=void 0,(i=a(n=T,r=E,14)^a(n,r,18)^a(r,n,9))<0&&(i+=4294967296),i),R=k(T,E),F=w(T,0,z,0,N),Z=P(0,E,0,L,0,S),W=this.k[I],G=this.k[I+1],q=s[I],V=s[I+1],K=p(B,D,X,R,F,Z,W,G,q,V),C=y(B,D,X,R,F,Z,W,G,q,V);B=O(c,f),D=j(c,f),X=x(c,0,h,0,v),R=M(0,f,0,b,0,m);var Y=u(B,D,X,R),J=l(B,D,X,R);U=N,H=S,N=z,S=L,z=T,L=E,T=u(g,A,K,C),E=l(A,A,K,C),g=v,A=m,v=h,m=b,h=c,b=f,c=u(K,C,Y,J),f=l(K,C,Y,J)}d(this.h,0,c,f),d(this.h,2,h,b),d(this.h,4,v,m),d(this.h,6,g,A),d(this.h,8,T,E),d(this.h,10,z,L),d(this.h,12,N,S),d(this.h,14,U,H)},g.prototype._digest=function(e){return"hex"===e?r.toHex32(this.h,"big"):r.split32(this.h,"big")}},7038:(e,t,n)=>{"use strict";var r=n(6436).rotr32;function i(e,t,n){return e&t^~e&n}function o(e,t,n){return e&t^e&n^t&n}function a(e,t,n){return e^t^n}t.ft_1=function(e,t,n,r){return 0===e?i(t,n,r):1===e||3===e?a(t,n,r):2===e?o(t,n,r):void 0},t.ch32=i,t.maj32=o,t.p32=a,t.s0_256=function(e){return r(e,2)^r(e,13)^r(e,22)},t.s1_256=function(e){return r(e,6)^r(e,11)^r(e,25)},t.g0_256=function(e){return r(e,7)^r(e,18)^e>>>3},t.g1_256=function(e){return r(e,17)^r(e,19)^e>>>10}},6436:(e,t,n)=>{"use strict";var r=n(9746),i=n(5717);function o(e,t){return 55296==(64512&e.charCodeAt(t))&&!(t<0||t+1>=e.length)&&56320==(64512&e.charCodeAt(t+1))}function a(e){return(e>>>24|e>>>8&65280|e<<8&16711680|(255&e)<<24)>>>0}function s(e){return 1===e.length?"0"+e:e}function c(e){return 7===e.length?"0"+e:6===e.length?"00"+e:5===e.length?"000"+e:4===e.length?"0000"+e:3===e.length?"00000"+e:2===e.length?"000000"+e:1===e.length?"0000000"+e:e}t.inherits=i,t.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var n=[];if("string"==typeof e)if(t){if("hex"===t)for((e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e),i=0;i<e.length;i+=2)n.push(parseInt(e[i]+e[i+1],16))}else for(var r=0,i=0;i<e.length;i++){var a=e.charCodeAt(i);a<128?n[r++]=a:a<2048?(n[r++]=a>>6|192,n[r++]=63&a|128):o(e,i)?(a=65536+((1023&a)<<10)+(1023&e.charCodeAt(++i)),n[r++]=a>>18|240,n[r++]=a>>12&63|128,n[r++]=a>>6&63|128,n[r++]=63&a|128):(n[r++]=a>>12|224,n[r++]=a>>6&63|128,n[r++]=63&a|128)}else for(i=0;i<e.length;i++)n[i]=0|e[i];return n},t.toHex=function(e){for(var t="",n=0;n<e.length;n++)t+=s(e[n].toString(16));return t},t.htonl=a,t.toHex32=function(e,t){for(var n="",r=0;r<e.length;r++){var i=e[r];"little"===t&&(i=a(i)),n+=c(i.toString(16))}return n},t.zero2=s,t.zero8=c,t.join32=function(e,t,n,i){var o=n-t;r(o%4==0);for(var a=new Array(o/4),s=0,c=t;s<a.length;s++,c+=4){var f;f="big"===i?e[c]<<24|e[c+1]<<16|e[c+2]<<8|e[c+3]:e[c+3]<<24|e[c+2]<<16|e[c+1]<<8|e[c],a[s]=f>>>0}return a},t.split32=function(e,t){for(var n=new Array(4*e.length),r=0,i=0;r<e.length;r++,i+=4){var o=e[r];"big"===t?(n[i]=o>>>24,n[i+1]=o>>>16&255,n[i+2]=o>>>8&255,n[i+3]=255&o):(n[i+3]=o>>>24,n[i+2]=o>>>16&255,n[i+1]=o>>>8&255,n[i]=255&o)}return n},t.rotr32=function(e,t){return e>>>t|e<<32-t},t.rotl32=function(e,t){return e<<t|e>>>32-t},t.sum32=function(e,t){return e+t>>>0},t.sum32_3=function(e,t,n){return e+t+n>>>0},t.sum32_4=function(e,t,n,r){return e+t+n+r>>>0},t.sum32_5=function(e,t,n,r,i){return e+t+n+r+i>>>0},t.sum64=function(e,t,n,r){var i=e[t],o=r+e[t+1]>>>0,a=(o<r?1:0)+n+i;e[t]=a>>>0,e[t+1]=o},t.sum64_hi=function(e,t,n,r){return(t+r>>>0<t?1:0)+e+n>>>0},t.sum64_lo=function(e,t,n,r){return t+r>>>0},t.sum64_4_hi=function(e,t,n,r,i,o,a,s){var c=0,f=t;return c+=(f=f+r>>>0)<t?1:0,c+=(f=f+o>>>0)<o?1:0,e+n+i+a+(c+=(f=f+s>>>0)<s?1:0)>>>0},t.sum64_4_lo=function(e,t,n,r,i,o,a,s){return t+r+o+s>>>0},t.sum64_5_hi=function(e,t,n,r,i,o,a,s,c,f){var d=0,u=t;return d+=(u=u+r>>>0)<t?1:0,d+=(u=u+o>>>0)<o?1:0,d+=(u=u+s>>>0)<s?1:0,e+n+i+a+c+(d+=(u=u+f>>>0)<f?1:0)>>>0},t.sum64_5_lo=function(e,t,n,r,i,o,a,s,c,f){return t+r+o+s+f>>>0},t.rotr64_hi=function(e,t,n){return(t<<32-n|e>>>n)>>>0},t.rotr64_lo=function(e,t,n){return(e<<32-n|t>>>n)>>>0},t.shr64_hi=function(e,t,n){return e>>>n},t.shr64_lo=function(e,t,n){return(e<<32-n|t>>>n)>>>0}},2156:(e,t,n)=>{"use strict";var r=n(3715),i=n(4504),o=n(9746);function a(e){if(!(this instanceof a))return new a(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.outSize,this.minEntropy=e.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var t=i.toArray(e.entropy,e.entropyEnc||"hex"),n=i.toArray(e.nonce,e.nonceEnc||"hex"),r=i.toArray(e.pers,e.persEnc||"hex");o(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(t,n,r)}e.exports=a,a.prototype._init=function(e,t,n){var r=e.concat(t).concat(n);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++)this.K[i]=0,this.V[i]=1;this._update(r),this._reseed=1,this.reseedInterval=281474976710656},a.prototype._hmac=function(){return new r.hmac(this.hash,this.K)},a.prototype._update=function(e){var t=this._hmac().update(this.V).update([0]);e&&(t=t.update(e)),this.K=t.digest(),this.V=this._hmac().update(this.V).digest(),e&&(this.K=this._hmac().update(this.V).update([1]).update(e).digest(),this.V=this._hmac().update(this.V).digest())},a.prototype.reseed=function(e,t,n,r){"string"!=typeof t&&(r=n,n=t,t=null),e=i.toArray(e,t),n=i.toArray(n,r),o(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(e.concat(n||[])),this._reseed=1},a.prototype.generate=function(e,t,n,r){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof t&&(r=n,n=t,t=null),n&&(n=i.toArray(n,r||"hex"),this._update(n));for(var o=[];o.length<e;)this.V=this._hmac().update(this.V).digest(),o=o.concat(this.V);var a=o.slice(0,e);return this._update(n),this._reseed++,i.encode(a,t)}},645:(e,t)=>{t.read=function(e,t,n,r,i){var o,a,s=8*i-r-1,c=(1<<s)-1,f=c>>1,d=-7,u=n?i-1:0,l=n?-1:1,h=e[t+u];for(u+=l,o=h&(1<<-d)-1,h>>=-d,d+=s;d>0;o=256*o+e[t+u],u+=l,d-=8);for(a=o&(1<<-d)-1,o>>=-d,d+=r;d>0;a=256*a+e[t+u],u+=l,d-=8);if(0===o)o=1-f;else{if(o===c)return a?NaN:1/0*(h?-1:1);a+=Math.pow(2,r),o-=f}return(h?-1:1)*a*Math.pow(2,o-r)},t.write=function(e,t,n,r,i,o){var a,s,c,f=8*o-i-1,d=(1<<f)-1,u=d>>1,l=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:o-1,b=r?1:-1,p=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=d):(a=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-a))<1&&(a--,c*=2),(t+=a+u>=1?l/c:l*Math.pow(2,1-u))*c>=2&&(a++,c/=2),a+u>=d?(s=0,a=d):a+u>=1?(s=(t*c-1)*Math.pow(2,i),a+=u):(s=t*Math.pow(2,u-1)*Math.pow(2,i),a=0));i>=8;e[n+h]=255&s,h+=b,s/=256,i-=8);for(a=a<<i|s,f+=i;f>0;e[n+h]=255&a,h+=b,a/=256,f-=8);e[n+h-b]|=128*p}},5717:e=>{"function"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}}},1476:e=>{"use strict";const t="[a-fA-F\\d:]",n=e=>e&&e.includeBoundaries?`(?:(?<=\\s|^)(?=${t})|(?<=${t})(?=\\s|$))`:"",r="(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",i="[a-fA-F\\d]{1,4}",o=`\n(?:\n(?:${i}:){7}(?:${i}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${i}:){6}(?:${r}|:${i}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${i}:){5}(?::${r}|(?::${i}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${i}:){4}(?:(?::${i}){0,1}:${r}|(?::${i}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${i}:){3}(?:(?::${i}){0,2}:${r}|(?::${i}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${i}:){2}(?:(?::${i}){0,3}:${r}|(?::${i}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${i}:){1}(?:(?::${i}){0,4}:${r}|(?::${i}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${i}){0,5}:${r}|(?::${i}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),a=new RegExp(`(?:^${r}$)|(?:^${o}$)`),s=new RegExp(`^${r}$`),c=new RegExp(`^${o}$`),f=e=>e&&e.exact?a:new RegExp(`(?:${n(e)}${r}${n(e)})|(?:${n(e)}${o}${n(e)})`,"g");f.v4=e=>e&&e.exact?s:new RegExp(`${n(e)}${r}${n(e)}`,"g"),f.v6=e=>e&&e.exact?c:new RegExp(`${n(e)}${o}${n(e)}`,"g"),e.exports=f},4841:(e,t)=>{"use strict";function n(...e){const t=(e,t)=>n=>e(t(n));return{encode:Array.from(e).reverse().reduce(((e,n)=>e?t(e,n.encode):n.encode),void 0),decode:e.reduce(((e,n)=>e?t(e,n.decode):n.decode),void 0)}}function r(e){return{encode:t=>{if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw new Error("alphabet.encode input should be an array of numbers");return t.map((t=>{if(t<0||t>=e.length)throw new Error(`Digit index outside alphabet: ${t} (alphabet: ${e.length})`);return e[t]}))},decode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("alphabet.decode input should be array of strings");return t.map((t=>{const n=e.indexOf(t);if(-1===n)throw new Error(`Unknown letter: "${t}". Allowed: ${e}`);return n}))}}}function i(e=""){return{encode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("join.encode input should be array of strings");return t.join(e)},decode:t=>{if("string"!=typeof t)throw new Error("join.decode input should be string");return t.split(e)}}}function o(e,t="="){return{encode(n){if(!Array.isArray(n)||n.length&&"string"!=typeof n[0])throw new Error("padding.encode input should be array of strings");for(;n.length*e%8;)n.push(t);return n},decode(n){if(!Array.isArray(n)||n.length&&"string"!=typeof n[0])throw new Error("padding.encode input should be array of strings");let r=n.length;if(r*e%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;r>0&&n[r-1]===t;)if(r--,!(r*e%8))throw new Error("Invalid padding: string has too much padding");return n.slice(0,r)}}}function a(e){return{encode:e=>e,decode:t=>e(t)}}function s(e,t,n){if(!e.length)return[];let r=0;const i=[],o=Array.from(e);for(;;){let e=0,a=!0;for(let i=r;i<o.length;i++){const s=t*e+o[i];e=s%n,o[i]=Math.floor(s/n),a&&(o[i]?a=!1:r=i)}if(i.push(e),a)break}for(let t=0;t<e.length-1&&0===e[t];t++)i.push(0);return i.reverse()}function c(e,t,n,r){let i=0,o=0;const a=2**n-1,s=[];for(const r of e)for(i=i<<t|r,o+=t;o>=n;o-=n)s.push(i>>o-n&a);if(i=i<<n-o&a,!r&&o>=t)throw new Error("Excess padding");if(!r&&i)throw new Error(`Non-zero padding: ${i}`);return r&&o>0&&s.push(i),s}function f(e,t=!1){return{encode:n=>{if(!(n instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return c(Array.from(n),8,e,!t)},decode:n=>{if(!Array.isArray(n)||n.length&&"number"!=typeof n[0])throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(c(n,e,8,t))}}}function d(e){return function(...t){try{return e.apply(null,t)}catch(e){}}}function u(e,t){return{encode(n){if(!(n instanceof Uint8Array))throw new Error("checksum.encode: input should be Uint8Array");const r=t(n).slice(0,e),i=new Uint8Array(n.length+e);return i.set(n),i.set(r,n.length),i},decode(n){if(!(n instanceof Uint8Array))throw new Error("checksum.decode: input should be Uint8Array");const r=n.slice(0,-e),i=t(r).slice(0,e),o=n.slice(-e);for(let t=0;t<e;t++)if(i[t]!==o[t])throw new Error("Invalid checksum");return r}}}Object.defineProperty(t,"__esModule",{value:!0}),t.bytes=t.stringToBytes=t.str=t.bytesToString=t.hex=t.utf8=t.bech32m=t.bech32=t.base58check=t.base58xmr=t.base58xrp=t.base58flickr=t.base58=t.base64url=t.base64=t.base32crockford=t.base32hex=t.base32=t.base16=t.utils=void 0,t.utils={alphabet:r,chain:n,checksum:u,radix2:f},t.base16=n(f(4),r("0123456789ABCDEF"),i("")),t.base32=n(f(5),r("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),o(5),i("")),t.base32hex=n(f(5),r("0123456789ABCDEFGHIJKLMNOPQRSTUV"),o(5),i("")),t.base32crockford=n(f(5),r("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),i(""),a((e=>e.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")))),t.base64=n(f(6),r("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),o(6),i("")),t.base64url=n(f(6),r("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),o(6),i(""));const l=e=>n((58,{encode:e=>{if(!(e instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return s(Array.from(e),256,58)},decode:e=>{if(!Array.isArray(e)||e.length&&"number"!=typeof e[0])throw new Error("radix.decode input should be array of strings");return Uint8Array.from(s(e,58,256))}}),r(e),i(""));t.base58=l("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),t.base58flickr=l("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),t.base58xrp=l("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"),t.base58xmr={encode(e){let n="";for(let r=0;r<e.length;r+=8){const i=e.subarray(r,r+8);n+=t.base58.encode(i).padStart(8===i.length?11:7,"1")}return n},decode(e){let n=[];for(let r=0;r<e.length;r+=11)n=n.concat(Array.from(t.base58.decode(e.slice(r,r+11))));return Uint8Array.from(n)}},t.base58check=e=>n(u(4,(t=>e(e(t)))),t.base58);const h=n(r("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),i("")),b=[996825010,642813549,513874426,1027748829,705979059];function p(e){const t=e>>25;let n=(33554431&e)<<5;for(let e=0;e<b.length;e++)1==(t>>e&1)&&(n^=b[e]);return n}function y(e,t,n=1){const r=e.length;let i=1;for(let t=0;t<r;t++){const n=e.charCodeAt(t);if(n<33||n>126)throw new Error(`Invalid prefix (${e})`);i=p(i)^n>>5}i=p(i);for(let t=0;t<r;t++)i=p(i)^31&e.charCodeAt(t);for(let e of t)i=p(i)^e;for(let e=0;e<6;e++)i=p(i);return i^=n,h.encode(c([i%2**30],30,5,!1))}function v(e){const t="bech32"===e?1:734539939,n=f(5),r=n.decode,i=n.encode,o=d(r);function a(e,n=90){if("string"!=typeof e)throw new Error("bech32.decode input should be string, not "+typeof e);if(e.length<8||!1!==n&&e.length>n)throw new TypeError(`Wrong string length: ${e.length} (${e}). Expected (8..${n})`);const r=e.toLowerCase();if(e!==r&&e!==e.toUpperCase())throw new Error("String must be lowercase or uppercase");const i=(e=r).lastIndexOf("1");if(0===i||-1===i)throw new Error('Letter "1" must be present between prefix and data only');const[o,a]=[e.slice(0,i),e.slice(i+1)];if(a.length<6)throw new Error("Data must be at least 6 characters long");const s=h.decode(a).slice(0,-6),c=y(o,s,t);if(!a.endsWith(c))throw new Error(`Invalid checksum in ${e}: expected "${c}"`);return{prefix:o,words:s}}return{encode:function(e,n,r=90){if("string"!=typeof e)throw new Error("bech32.decode prefix should be string, not "+typeof e);if(!Array.isArray(n)||n.length&&"number"!=typeof n[0])throw new Error("bech32.decode words should be array of numbers, not "+typeof n);const i=e.length+7+n.length;if(!1!==r&&i>r)throw new TypeError(`Length ${i} exceeds limit ${r}`);return`${e=e.toLowerCase()}1${h.encode(n)}${y(e,n,t)}`},decode:a,decodeToBytes:function(e){const{prefix:t,words:n}=a(e,!1);return{prefix:t,words:n,bytes:r(n)}},decodeUnsafe:d(a),fromWords:r,fromWordsUnsafe:o,toWords:i}}t.bech32=v("bech32"),t.bech32m=v("bech32m"),t.utf8={encode:e=>(new TextDecoder).decode(e),decode:e=>(new TextEncoder).encode(e)},t.hex=n(f(4),r("0123456789abcdef"),i(""),a((e=>{if("string"!=typeof e||e.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()})));const m={utf8:t.utf8,hex:t.hex,base16:t.base16,base32:t.base32,base64:t.base64,base64url:t.base64url,base58:t.base58,base58xmr:t.base58xmr},g=`Invalid encoding type. Available types: ${Object.keys(m).join(", ")}`;t.bytesToString=(e,t)=>{if("string"!=typeof e||!m.hasOwnProperty(e))throw new TypeError(g);if(!(t instanceof Uint8Array))throw new TypeError("bytesToString() expects Uint8Array");return m[e].encode(t)},t.str=t.bytesToString,t.stringToBytes=(e,t)=>{if(!m.hasOwnProperty(e))throw new TypeError(g);if("string"!=typeof t)throw new TypeError("stringToBytes() expects string");return m[e].decode(t)},t.bytes=t.stringToBytes},9746:e=>{function t(e,t){if(!e)throw new Error(t||"Assertion failed")}e.exports=t,t.equal=function(e,t,n){if(e!=t)throw new Error(n||"Assertion failed: "+e+" != "+t)}},4504:(e,t)=>{"use strict";var n=t;function r(e){return 1===e.length?"0"+e:e}function i(e){for(var t="",n=0;n<e.length;n++)t+=r(e[n].toString(16));return t}n.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var n=[];if("string"!=typeof e){for(var r=0;r<e.length;r++)n[r]=0|e[r];return n}if("hex"===t)for((e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e),r=0;r<e.length;r+=2)n.push(parseInt(e[r]+e[r+1],16));else for(r=0;r<e.length;r++){var i=e.charCodeAt(r),o=i>>8,a=255&i;o?n.push(o,a):n.push(a)}return n},n.zero2=r,n.toHex=i,n.encode=function(e,t){return"hex"===t?i(e):e}},1339:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};t.__esModule=!0;var a=o(n(5542));t.default=a},595:(e,t)=>{"use strict";var n;t.__esModule=!0,function(e){e.ETHEREUM="ETH",e.AVALANCHE="AVAX",e.SUBSTRATE="DOT",e.SOLANA="SOL",e.NULS2="NULS2"}(n||(n={})),t.default=n},5542:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t};t.__esModule=!0,t.substrate=void 0;var a=o(n(5481));t.substrate=a},5481:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{c(r.next(e))}catch(e){o(e)}}function s(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){a.label=o[1];break}if(6===o[0]&&a.label<i[1]){a.label=i[1],i=o;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(o);break}i[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};t.__esModule=!0,t.transfer=t.getApi=t.sign=t.newAccount=t.importAccount=void 0;var a=n(7491),s=n(4730),c=o(n(595)),f=n(8764);t.importAccount=function(e,t,n,o){return void 0===e&&(e=void 0),void 0===t&&(t=void 0),r(this,void 0,void 0,(function(){var r,d,u;return i(this,(function(i){switch(i.label){case 0:return[4,(0,s.cryptoWaitReady)()];case 1:if(i.sent(),r=new a.Keyring({type:"sr25519",ss58Format:n}),d=null,t?d=r.createFromUri(t,{name:"sr25519"}):e&&(d=r.createFromUri(e,{name:"sr25519"})),!d)throw new Error("could not import account, error while imported keypair");return u={keyring:r,private_key:e,public_key:f.Buffer.from(d.publicKey).toString("hex"),mnemonic:t,address:d.address,address_format:n,type:c.default.SUBSTRATE,source:"integrated",signer:d,name:d.address},t&&(u.private_key="0x".concat(f.Buffer.from((0,s.mnemonicToMiniSecret)(t)).toString("hex"))),o&&(u.name=o),window.PolkaWallet&&window.PolkaWallet.postMessage(JSON.stringify({account:u,status:200})),[2,u]}}))}))},t.newAccount=function(){return r(this,void 0,void 0,(function(){return i(this,(function(e){return[2,"ddddd"]}))}))},t.sign=function(){return"ddddd"},t.getApi=function(){return r(this,void 0,void 0,(function(){return i(this,(function(e){return[2,"ddddd"]}))}))},t.transfer=function(){return r(this,void 0,void 0,(function(){return i(this,(function(e){return[2,"ddddd"]}))}))}},3607:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};t.__esModule=!0;var i=r(n(1339));window.account=i.default},780:(e,t,n)=>{!function(e){"use strict";var t=function(e){var t,n=new Float64Array(16);if(e)for(t=0;t<e.length;t++)n[t]=e[t];return n},r=function(){throw new Error("no PRNG")},i=new Uint8Array(16),o=new Uint8Array(32);o[0]=9;var a=t(),s=t([1]),c=t([56129,1]),f=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),d=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),u=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),l=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),h=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function b(e,t,n,r){e[t]=n>>24&255,e[t+1]=n>>16&255,e[t+2]=n>>8&255,e[t+3]=255&n,e[t+4]=r>>24&255,e[t+5]=r>>16&255,e[t+6]=r>>8&255,e[t+7]=255&r}function p(e,t,n,r,i){var o,a=0;for(o=0;o<i;o++)a|=e[t+o]^n[r+o];return(1&a-1>>>8)-1}function y(e,t,n,r){return p(e,t,n,r,16)}function v(e,t,n,r){return p(e,t,n,r,32)}function m(e,t,n,r){!function(e,t,n,r){for(var i,o=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,c=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,f=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,d=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,l=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,h=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,b=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,p=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,y=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,v=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,m=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,g=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,w=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,P=o,x=a,M=s,O=c,j=f,k=d,A=u,T=l,E=h,z=b,L=p,N=y,S=v,U=m,H=g,I=w,B=0;B<20;B+=2)P^=(i=(S^=(i=(E^=(i=(j^=(i=P+S|0)<<7|i>>>25)+P|0)<<9|i>>>23)+j|0)<<13|i>>>19)+E|0)<<18|i>>>14,k^=(i=(x^=(i=(U^=(i=(z^=(i=k+x|0)<<7|i>>>25)+k|0)<<9|i>>>23)+z|0)<<13|i>>>19)+U|0)<<18|i>>>14,L^=(i=(A^=(i=(M^=(i=(H^=(i=L+A|0)<<7|i>>>25)+L|0)<<9|i>>>23)+H|0)<<13|i>>>19)+M|0)<<18|i>>>14,I^=(i=(N^=(i=(T^=(i=(O^=(i=I+N|0)<<7|i>>>25)+I|0)<<9|i>>>23)+O|0)<<13|i>>>19)+T|0)<<18|i>>>14,P^=(i=(O^=(i=(M^=(i=(x^=(i=P+O|0)<<7|i>>>25)+P|0)<<9|i>>>23)+x|0)<<13|i>>>19)+M|0)<<18|i>>>14,k^=(i=(j^=(i=(T^=(i=(A^=(i=k+j|0)<<7|i>>>25)+k|0)<<9|i>>>23)+A|0)<<13|i>>>19)+T|0)<<18|i>>>14,L^=(i=(z^=(i=(E^=(i=(N^=(i=L+z|0)<<7|i>>>25)+L|0)<<9|i>>>23)+N|0)<<13|i>>>19)+E|0)<<18|i>>>14,I^=(i=(H^=(i=(U^=(i=(S^=(i=I+H|0)<<7|i>>>25)+I|0)<<9|i>>>23)+S|0)<<13|i>>>19)+U|0)<<18|i>>>14;P=P+o|0,x=x+a|0,M=M+s|0,O=O+c|0,j=j+f|0,k=k+d|0,A=A+u|0,T=T+l|0,E=E+h|0,z=z+b|0,L=L+p|0,N=N+y|0,S=S+v|0,U=U+m|0,H=H+g|0,I=I+w|0,e[0]=P>>>0&255,e[1]=P>>>8&255,e[2]=P>>>16&255,e[3]=P>>>24&255,e[4]=x>>>0&255,e[5]=x>>>8&255,e[6]=x>>>16&255,e[7]=x>>>24&255,e[8]=M>>>0&255,e[9]=M>>>8&255,e[10]=M>>>16&255,e[11]=M>>>24&255,e[12]=O>>>0&255,e[13]=O>>>8&255,e[14]=O>>>16&255,e[15]=O>>>24&255,e[16]=j>>>0&255,e[17]=j>>>8&255,e[18]=j>>>16&255,e[19]=j>>>24&255,e[20]=k>>>0&255,e[21]=k>>>8&255,e[22]=k>>>16&255,e[23]=k>>>24&255,e[24]=A>>>0&255,e[25]=A>>>8&255,e[26]=A>>>16&255,e[27]=A>>>24&255,e[28]=T>>>0&255,e[29]=T>>>8&255,e[30]=T>>>16&255,e[31]=T>>>24&255,e[32]=E>>>0&255,e[33]=E>>>8&255,e[34]=E>>>16&255,e[35]=E>>>24&255,e[36]=z>>>0&255,e[37]=z>>>8&255,e[38]=z>>>16&255,e[39]=z>>>24&255,e[40]=L>>>0&255,e[41]=L>>>8&255,e[42]=L>>>16&255,e[43]=L>>>24&255,e[44]=N>>>0&255,e[45]=N>>>8&255,e[46]=N>>>16&255,e[47]=N>>>24&255,e[48]=S>>>0&255,e[49]=S>>>8&255,e[50]=S>>>16&255,e[51]=S>>>24&255,e[52]=U>>>0&255,e[53]=U>>>8&255,e[54]=U>>>16&255,e[55]=U>>>24&255,e[56]=H>>>0&255,e[57]=H>>>8&255,e[58]=H>>>16&255,e[59]=H>>>24&255,e[60]=I>>>0&255,e[61]=I>>>8&255,e[62]=I>>>16&255,e[63]=I>>>24&255}(e,t,n,r)}function g(e,t,n,r){!function(e,t,n,r){for(var i,o=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,a=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,s=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,c=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,f=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,d=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,l=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,h=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,b=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,p=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,y=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,v=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,m=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,g=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,w=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,P=0;P<20;P+=2)o^=(i=(v^=(i=(h^=(i=(f^=(i=o+v|0)<<7|i>>>25)+o|0)<<9|i>>>23)+f|0)<<13|i>>>19)+h|0)<<18|i>>>14,d^=(i=(a^=(i=(m^=(i=(b^=(i=d+a|0)<<7|i>>>25)+d|0)<<9|i>>>23)+b|0)<<13|i>>>19)+m|0)<<18|i>>>14,p^=(i=(u^=(i=(s^=(i=(g^=(i=p+u|0)<<7|i>>>25)+p|0)<<9|i>>>23)+g|0)<<13|i>>>19)+s|0)<<18|i>>>14,w^=(i=(y^=(i=(l^=(i=(c^=(i=w+y|0)<<7|i>>>25)+w|0)<<9|i>>>23)+c|0)<<13|i>>>19)+l|0)<<18|i>>>14,o^=(i=(c^=(i=(s^=(i=(a^=(i=o+c|0)<<7|i>>>25)+o|0)<<9|i>>>23)+a|0)<<13|i>>>19)+s|0)<<18|i>>>14,d^=(i=(f^=(i=(l^=(i=(u^=(i=d+f|0)<<7|i>>>25)+d|0)<<9|i>>>23)+u|0)<<13|i>>>19)+l|0)<<18|i>>>14,p^=(i=(b^=(i=(h^=(i=(y^=(i=p+b|0)<<7|i>>>25)+p|0)<<9|i>>>23)+y|0)<<13|i>>>19)+h|0)<<18|i>>>14,w^=(i=(g^=(i=(m^=(i=(v^=(i=w+g|0)<<7|i>>>25)+w|0)<<9|i>>>23)+v|0)<<13|i>>>19)+m|0)<<18|i>>>14;e[0]=o>>>0&255,e[1]=o>>>8&255,e[2]=o>>>16&255,e[3]=o>>>24&255,e[4]=d>>>0&255,e[5]=d>>>8&255,e[6]=d>>>16&255,e[7]=d>>>24&255,e[8]=p>>>0&255,e[9]=p>>>8&255,e[10]=p>>>16&255,e[11]=p>>>24&255,e[12]=w>>>0&255,e[13]=w>>>8&255,e[14]=w>>>16&255,e[15]=w>>>24&255,e[16]=u>>>0&255,e[17]=u>>>8&255,e[18]=u>>>16&255,e[19]=u>>>24&255,e[20]=l>>>0&255,e[21]=l>>>8&255,e[22]=l>>>16&255,e[23]=l>>>24&255,e[24]=h>>>0&255,e[25]=h>>>8&255,e[26]=h>>>16&255,e[27]=h>>>24&255,e[28]=b>>>0&255,e[29]=b>>>8&255,e[30]=b>>>16&255,e[31]=b>>>24&255}(e,t,n,r)}var w=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function P(e,t,n,r,i,o,a){var s,c,f=new Uint8Array(16),d=new Uint8Array(64);for(c=0;c<16;c++)f[c]=0;for(c=0;c<8;c++)f[c]=o[c];for(;i>=64;){for(m(d,f,a,w),c=0;c<64;c++)e[t+c]=n[r+c]^d[c];for(s=1,c=8;c<16;c++)s=s+(255&f[c])|0,f[c]=255&s,s>>>=8;i-=64,t+=64,r+=64}if(i>0)for(m(d,f,a,w),c=0;c<i;c++)e[t+c]=n[r+c]^d[c];return 0}function x(e,t,n,r,i){var o,a,s=new Uint8Array(16),c=new Uint8Array(64);for(a=0;a<16;a++)s[a]=0;for(a=0;a<8;a++)s[a]=r[a];for(;n>=64;){for(m(c,s,i,w),a=0;a<64;a++)e[t+a]=c[a];for(o=1,a=8;a<16;a++)o=o+(255&s[a])|0,s[a]=255&o,o>>>=8;n-=64,t+=64}if(n>0)for(m(c,s,i,w),a=0;a<n;a++)e[t+a]=c[a];return 0}function M(e,t,n,r,i){var o=new Uint8Array(32);g(o,r,i,w);for(var a=new Uint8Array(8),s=0;s<8;s++)a[s]=r[s+16];return x(e,t,n,a,o)}function O(e,t,n,r,i,o,a){var s=new Uint8Array(32);g(s,o,a,w);for(var c=new Uint8Array(8),f=0;f<8;f++)c[f]=o[f+16];return P(e,t,n,r,i,c,s)}var j=function(e){var t,n,r,i,o,a,s,c;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,n=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|n<<3),r=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(n>>>10|r<<6),i=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(r>>>7|i<<9),o=255&e[8]|(255&e[9])<<8,this.r[4]=255&(i>>>4|o<<12),this.r[5]=o>>>1&8190,a=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(o>>>14|a<<2),s=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(a>>>11|s<<5),c=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(s>>>8|c<<8),this.r[9]=c>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function k(e,t,n,r,i,o){var a=new j(o);return a.update(n,r,i),a.finish(e,t),0}function A(e,t,n,r,i,o){var a=new Uint8Array(16);return k(a,0,n,r,i,o),y(e,t,a,0)}function T(e,t,n,r,i){var o;if(n<32)return-1;for(O(e,0,t,0,n,r,i),k(e,16,e,32,n-32,e),o=0;o<16;o++)e[o]=0;return 0}function E(e,t,n,r,i){var o,a=new Uint8Array(32);if(n<32)return-1;if(M(a,0,32,r,i),0!==A(t,16,t,32,n-32,a))return-1;for(O(e,0,t,0,n,r,i),o=0;o<32;o++)e[o]=0;return 0}function z(e,t){var n;for(n=0;n<16;n++)e[n]=0|t[n]}function L(e){var t,n,r=1;for(t=0;t<16;t++)n=e[t]+r+65535,r=Math.floor(n/65536),e[t]=n-65536*r;e[0]+=r-1+37*(r-1)}function N(e,t,n){for(var r,i=~(n-1),o=0;o<16;o++)r=i&(e[o]^t[o]),e[o]^=r,t[o]^=r}function S(e,n){var r,i,o,a=t(),s=t();for(r=0;r<16;r++)s[r]=n[r];for(L(s),L(s),L(s),i=0;i<2;i++){for(a[0]=s[0]-65517,r=1;r<15;r++)a[r]=s[r]-65535-(a[r-1]>>16&1),a[r-1]&=65535;a[15]=s[15]-32767-(a[14]>>16&1),o=a[15]>>16&1,a[14]&=65535,N(s,a,1-o)}for(r=0;r<16;r++)e[2*r]=255&s[r],e[2*r+1]=s[r]>>8}function U(e,t){var n=new Uint8Array(32),r=new Uint8Array(32);return S(n,e),S(r,t),v(n,0,r,0)}function H(e){var t=new Uint8Array(32);return S(t,e),1&t[0]}function I(e,t){var n;for(n=0;n<16;n++)e[n]=t[2*n]+(t[2*n+1]<<8);e[15]&=32767}function B(e,t,n){for(var r=0;r<16;r++)e[r]=t[r]+n[r]}function D(e,t,n){for(var r=0;r<16;r++)e[r]=t[r]-n[r]}function X(e,t,n){var r,i,o=0,a=0,s=0,c=0,f=0,d=0,u=0,l=0,h=0,b=0,p=0,y=0,v=0,m=0,g=0,w=0,P=0,x=0,M=0,O=0,j=0,k=0,A=0,T=0,E=0,z=0,L=0,N=0,S=0,U=0,H=0,I=n[0],B=n[1],D=n[2],X=n[3],R=n[4],F=n[5],Z=n[6],W=n[7],G=n[8],q=n[9],V=n[10],K=n[11],C=n[12],Y=n[13],J=n[14],Q=n[15];o+=(r=t[0])*I,a+=r*B,s+=r*D,c+=r*X,f+=r*R,d+=r*F,u+=r*Z,l+=r*W,h+=r*G,b+=r*q,p+=r*V,y+=r*K,v+=r*C,m+=r*Y,g+=r*J,w+=r*Q,a+=(r=t[1])*I,s+=r*B,c+=r*D,f+=r*X,d+=r*R,u+=r*F,l+=r*Z,h+=r*W,b+=r*G,p+=r*q,y+=r*V,v+=r*K,m+=r*C,g+=r*Y,w+=r*J,P+=r*Q,s+=(r=t[2])*I,c+=r*B,f+=r*D,d+=r*X,u+=r*R,l+=r*F,h+=r*Z,b+=r*W,p+=r*G,y+=r*q,v+=r*V,m+=r*K,g+=r*C,w+=r*Y,P+=r*J,x+=r*Q,c+=(r=t[3])*I,f+=r*B,d+=r*D,u+=r*X,l+=r*R,h+=r*F,b+=r*Z,p+=r*W,y+=r*G,v+=r*q,m+=r*V,g+=r*K,w+=r*C,P+=r*Y,x+=r*J,M+=r*Q,f+=(r=t[4])*I,d+=r*B,u+=r*D,l+=r*X,h+=r*R,b+=r*F,p+=r*Z,y+=r*W,v+=r*G,m+=r*q,g+=r*V,w+=r*K,P+=r*C,x+=r*Y,M+=r*J,O+=r*Q,d+=(r=t[5])*I,u+=r*B,l+=r*D,h+=r*X,b+=r*R,p+=r*F,y+=r*Z,v+=r*W,m+=r*G,g+=r*q,w+=r*V,P+=r*K,x+=r*C,M+=r*Y,O+=r*J,j+=r*Q,u+=(r=t[6])*I,l+=r*B,h+=r*D,b+=r*X,p+=r*R,y+=r*F,v+=r*Z,m+=r*W,g+=r*G,w+=r*q,P+=r*V,x+=r*K,M+=r*C,O+=r*Y,j+=r*J,k+=r*Q,l+=(r=t[7])*I,h+=r*B,b+=r*D,p+=r*X,y+=r*R,v+=r*F,m+=r*Z,g+=r*W,w+=r*G,P+=r*q,x+=r*V,M+=r*K,O+=r*C,j+=r*Y,k+=r*J,A+=r*Q,h+=(r=t[8])*I,b+=r*B,p+=r*D,y+=r*X,v+=r*R,m+=r*F,g+=r*Z,w+=r*W,P+=r*G,x+=r*q,M+=r*V,O+=r*K,j+=r*C,k+=r*Y,A+=r*J,T+=r*Q,b+=(r=t[9])*I,p+=r*B,y+=r*D,v+=r*X,m+=r*R,g+=r*F,w+=r*Z,P+=r*W,x+=r*G,M+=r*q,O+=r*V,j+=r*K,k+=r*C,A+=r*Y,T+=r*J,E+=r*Q,p+=(r=t[10])*I,y+=r*B,v+=r*D,m+=r*X,g+=r*R,w+=r*F,P+=r*Z,x+=r*W,M+=r*G,O+=r*q,j+=r*V,k+=r*K,A+=r*C,T+=r*Y,E+=r*J,z+=r*Q,y+=(r=t[11])*I,v+=r*B,m+=r*D,g+=r*X,w+=r*R,P+=r*F,x+=r*Z,M+=r*W,O+=r*G,j+=r*q,k+=r*V,A+=r*K,T+=r*C,E+=r*Y,z+=r*J,L+=r*Q,v+=(r=t[12])*I,m+=r*B,g+=r*D,w+=r*X,P+=r*R,x+=r*F,M+=r*Z,O+=r*W,j+=r*G,k+=r*q,A+=r*V,T+=r*K,E+=r*C,z+=r*Y,L+=r*J,N+=r*Q,m+=(r=t[13])*I,g+=r*B,w+=r*D,P+=r*X,x+=r*R,M+=r*F,O+=r*Z,j+=r*W,k+=r*G,A+=r*q,T+=r*V,E+=r*K,z+=r*C,L+=r*Y,N+=r*J,S+=r*Q,g+=(r=t[14])*I,w+=r*B,P+=r*D,x+=r*X,M+=r*R,O+=r*F,j+=r*Z,k+=r*W,A+=r*G,T+=r*q,E+=r*V,z+=r*K,L+=r*C,N+=r*Y,S+=r*J,U+=r*Q,w+=(r=t[15])*I,a+=38*(x+=r*D),s+=38*(M+=r*X),c+=38*(O+=r*R),f+=38*(j+=r*F),d+=38*(k+=r*Z),u+=38*(A+=r*W),l+=38*(T+=r*G),h+=38*(E+=r*q),b+=38*(z+=r*V),p+=38*(L+=r*K),y+=38*(N+=r*C),v+=38*(S+=r*Y),m+=38*(U+=r*J),g+=38*(H+=r*Q),o=(r=(o+=38*(P+=r*B))+(i=1)+65535)-65536*(i=Math.floor(r/65536)),a=(r=a+i+65535)-65536*(i=Math.floor(r/65536)),s=(r=s+i+65535)-65536*(i=Math.floor(r/65536)),c=(r=c+i+65535)-65536*(i=Math.floor(r/65536)),f=(r=f+i+65535)-65536*(i=Math.floor(r/65536)),d=(r=d+i+65535)-65536*(i=Math.floor(r/65536)),u=(r=u+i+65535)-65536*(i=Math.floor(r/65536)),l=(r=l+i+65535)-65536*(i=Math.floor(r/65536)),h=(r=h+i+65535)-65536*(i=Math.floor(r/65536)),b=(r=b+i+65535)-65536*(i=Math.floor(r/65536)),p=(r=p+i+65535)-65536*(i=Math.floor(r/65536)),y=(r=y+i+65535)-65536*(i=Math.floor(r/65536)),v=(r=v+i+65535)-65536*(i=Math.floor(r/65536)),m=(r=m+i+65535)-65536*(i=Math.floor(r/65536)),g=(r=g+i+65535)-65536*(i=Math.floor(r/65536)),w=(r=w+i+65535)-65536*(i=Math.floor(r/65536)),o=(r=(o+=i-1+37*(i-1))+(i=1)+65535)-65536*(i=Math.floor(r/65536)),a=(r=a+i+65535)-65536*(i=Math.floor(r/65536)),s=(r=s+i+65535)-65536*(i=Math.floor(r/65536)),c=(r=c+i+65535)-65536*(i=Math.floor(r/65536)),f=(r=f+i+65535)-65536*(i=Math.floor(r/65536)),d=(r=d+i+65535)-65536*(i=Math.floor(r/65536)),u=(r=u+i+65535)-65536*(i=Math.floor(r/65536)),l=(r=l+i+65535)-65536*(i=Math.floor(r/65536)),h=(r=h+i+65535)-65536*(i=Math.floor(r/65536)),b=(r=b+i+65535)-65536*(i=Math.floor(r/65536)),p=(r=p+i+65535)-65536*(i=Math.floor(r/65536)),y=(r=y+i+65535)-65536*(i=Math.floor(r/65536)),v=(r=v+i+65535)-65536*(i=Math.floor(r/65536)),m=(r=m+i+65535)-65536*(i=Math.floor(r/65536)),g=(r=g+i+65535)-65536*(i=Math.floor(r/65536)),w=(r=w+i+65535)-65536*(i=Math.floor(r/65536)),o+=i-1+37*(i-1),e[0]=o,e[1]=a,e[2]=s,e[3]=c,e[4]=f,e[5]=d,e[6]=u,e[7]=l,e[8]=h,e[9]=b,e[10]=p,e[11]=y,e[12]=v,e[13]=m,e[14]=g,e[15]=w}function R(e,t){X(e,t,t)}function F(e,n){var r,i=t();for(r=0;r<16;r++)i[r]=n[r];for(r=253;r>=0;r--)R(i,i),2!==r&&4!==r&&X(i,i,n);for(r=0;r<16;r++)e[r]=i[r]}function Z(e,n){var r,i=t();for(r=0;r<16;r++)i[r]=n[r];for(r=250;r>=0;r--)R(i,i),1!==r&&X(i,i,n);for(r=0;r<16;r++)e[r]=i[r]}function W(e,n,r){var i,o,a=new Uint8Array(32),s=new Float64Array(80),f=t(),d=t(),u=t(),l=t(),h=t(),b=t();for(o=0;o<31;o++)a[o]=n[o];for(a[31]=127&n[31]|64,a[0]&=248,I(s,r),o=0;o<16;o++)d[o]=s[o],l[o]=f[o]=u[o]=0;for(f[0]=l[0]=1,o=254;o>=0;--o)N(f,d,i=a[o>>>3]>>>(7&o)&1),N(u,l,i),B(h,f,u),D(f,f,u),B(u,d,l),D(d,d,l),R(l,h),R(b,f),X(f,u,f),X(u,d,h),B(h,f,u),D(f,f,u),R(d,f),D(u,l,b),X(f,u,c),B(f,f,l),X(u,u,f),X(f,l,b),X(l,d,s),R(d,h),N(f,d,i),N(u,l,i);for(o=0;o<16;o++)s[o+16]=f[o],s[o+32]=u[o],s[o+48]=d[o],s[o+64]=l[o];var p=s.subarray(32),y=s.subarray(16);return F(p,p),X(y,y,p),S(e,y),0}function G(e,t){return W(e,t,o)}function q(e,t){return r(t,32),G(e,t)}function V(e,t,n){var r=new Uint8Array(32);return W(r,n,t),g(e,i,r,w)}j.prototype.blocks=function(e,t,n){for(var r,i,o,a,s,c,f,d,u,l,h,b,p,y,v,m,g,w,P,x=this.fin?0:2048,M=this.h[0],O=this.h[1],j=this.h[2],k=this.h[3],A=this.h[4],T=this.h[5],E=this.h[6],z=this.h[7],L=this.h[8],N=this.h[9],S=this.r[0],U=this.r[1],H=this.r[2],I=this.r[3],B=this.r[4],D=this.r[5],X=this.r[6],R=this.r[7],F=this.r[8],Z=this.r[9];n>=16;)l=u=0,l+=(M+=8191&(r=255&e[t+0]|(255&e[t+1])<<8))*S,l+=(O+=8191&(r>>>13|(i=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*Z),l+=(j+=8191&(i>>>10|(o=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*F),l+=(k+=8191&(o>>>7|(a=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*R),u=(l+=(A+=8191&(a>>>4|(s=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*X))>>>13,l&=8191,l+=(T+=s>>>1&8191)*(5*D),l+=(E+=8191&(s>>>14|(c=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*B),l+=(z+=8191&(c>>>11|(f=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*I),l+=(L+=8191&(f>>>8|(d=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*H),h=u+=(l+=(N+=d>>>5|x)*(5*U))>>>13,h+=M*U,h+=O*S,h+=j*(5*Z),h+=k*(5*F),u=(h+=A*(5*R))>>>13,h&=8191,h+=T*(5*X),h+=E*(5*D),h+=z*(5*B),h+=L*(5*I),u+=(h+=N*(5*H))>>>13,h&=8191,b=u,b+=M*H,b+=O*U,b+=j*S,b+=k*(5*Z),u=(b+=A*(5*F))>>>13,b&=8191,b+=T*(5*R),b+=E*(5*X),b+=z*(5*D),b+=L*(5*B),p=u+=(b+=N*(5*I))>>>13,p+=M*I,p+=O*H,p+=j*U,p+=k*S,u=(p+=A*(5*Z))>>>13,p&=8191,p+=T*(5*F),p+=E*(5*R),p+=z*(5*X),p+=L*(5*D),y=u+=(p+=N*(5*B))>>>13,y+=M*B,y+=O*I,y+=j*H,y+=k*U,u=(y+=A*S)>>>13,y&=8191,y+=T*(5*Z),y+=E*(5*F),y+=z*(5*R),y+=L*(5*X),v=u+=(y+=N*(5*D))>>>13,v+=M*D,v+=O*B,v+=j*I,v+=k*H,u=(v+=A*U)>>>13,v&=8191,v+=T*S,v+=E*(5*Z),v+=z*(5*F),v+=L*(5*R),m=u+=(v+=N*(5*X))>>>13,m+=M*X,m+=O*D,m+=j*B,m+=k*I,u=(m+=A*H)>>>13,m&=8191,m+=T*U,m+=E*S,m+=z*(5*Z),m+=L*(5*F),g=u+=(m+=N*(5*R))>>>13,g+=M*R,g+=O*X,g+=j*D,g+=k*B,u=(g+=A*I)>>>13,g&=8191,g+=T*H,g+=E*U,g+=z*S,g+=L*(5*Z),w=u+=(g+=N*(5*F))>>>13,w+=M*F,w+=O*R,w+=j*X,w+=k*D,u=(w+=A*B)>>>13,w&=8191,w+=T*I,w+=E*H,w+=z*U,w+=L*S,P=u+=(w+=N*(5*Z))>>>13,P+=M*Z,P+=O*F,P+=j*R,P+=k*X,u=(P+=A*D)>>>13,P&=8191,P+=T*B,P+=E*I,P+=z*H,P+=L*U,M=l=8191&(u=(u=((u+=(P+=N*S)>>>13)<<2)+u|0)+(l&=8191)|0),O=h+=u>>>=13,j=b&=8191,k=p&=8191,A=y&=8191,T=v&=8191,E=m&=8191,z=g&=8191,L=w&=8191,N=P&=8191,t+=16,n-=16;this.h[0]=M,this.h[1]=O,this.h[2]=j,this.h[3]=k,this.h[4]=A,this.h[5]=T,this.h[6]=E,this.h[7]=z,this.h[8]=L,this.h[9]=N},j.prototype.finish=function(e,t){var n,r,i,o,a=new Uint16Array(10);if(this.leftover){for(o=this.leftover,this.buffer[o++]=1;o<16;o++)this.buffer[o]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(n=this.h[1]>>>13,this.h[1]&=8191,o=2;o<10;o++)this.h[o]+=n,n=this.h[o]>>>13,this.h[o]&=8191;for(this.h[0]+=5*n,n=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=n,n=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=n,a[0]=this.h[0]+5,n=a[0]>>>13,a[0]&=8191,o=1;o<10;o++)a[o]=this.h[o]+n,n=a[o]>>>13,a[o]&=8191;for(a[9]-=8192,r=(1^n)-1,o=0;o<10;o++)a[o]&=r;for(r=~r,o=0;o<10;o++)this.h[o]=this.h[o]&r|a[o];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),i=this.h[0]+this.pad[0],this.h[0]=65535&i,o=1;o<8;o++)i=(this.h[o]+this.pad[o]|0)+(i>>>16)|0,this.h[o]=65535&i;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},j.prototype.update=function(e,t,n){var r,i;if(this.leftover){for((i=16-this.leftover)>n&&(i=n),r=0;r<i;r++)this.buffer[this.leftover+r]=e[t+r];if(n-=i,t+=i,this.leftover+=i,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(n>=16&&(i=n-n%16,this.blocks(e,t,i),t+=i,n-=i),n){for(r=0;r<n;r++)this.buffer[this.leftover+r]=e[t+r];this.leftover+=n}};var K=T,C=E,Y=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function J(e,t,n,r){for(var i,o,a,s,c,f,d,u,l,h,b,p,y,v,m,g,w,P,x,M,O,j,k,A,T,E,z=new Int32Array(16),L=new Int32Array(16),N=e[0],S=e[1],U=e[2],H=e[3],I=e[4],B=e[5],D=e[6],X=e[7],R=t[0],F=t[1],Z=t[2],W=t[3],G=t[4],q=t[5],V=t[6],K=t[7],C=0;r>=128;){for(x=0;x<16;x++)M=8*x+C,z[x]=n[M+0]<<24|n[M+1]<<16|n[M+2]<<8|n[M+3],L[x]=n[M+4]<<24|n[M+5]<<16|n[M+6]<<8|n[M+7];for(x=0;x<80;x++)if(i=N,o=S,a=U,s=H,c=I,f=B,d=D,l=R,h=F,b=Z,p=W,y=G,v=q,m=V,k=65535&(j=K),A=j>>>16,T=65535&(O=X),E=O>>>16,k+=65535&(j=(G>>>14|I<<18)^(G>>>18|I<<14)^(I>>>9|G<<23)),A+=j>>>16,T+=65535&(O=(I>>>14|G<<18)^(I>>>18|G<<14)^(G>>>9|I<<23)),E+=O>>>16,k+=65535&(j=G&q^~G&V),A+=j>>>16,T+=65535&(O=I&B^~I&D),E+=O>>>16,k+=65535&(j=Y[2*x+1]),A+=j>>>16,T+=65535&(O=Y[2*x]),E+=O>>>16,O=z[x%16],A+=(j=L[x%16])>>>16,T+=65535&O,E+=O>>>16,T+=(A+=(k+=65535&j)>>>16)>>>16,k=65535&(j=P=65535&k|A<<16),A=j>>>16,T=65535&(O=w=65535&T|(E+=T>>>16)<<16),E=O>>>16,k+=65535&(j=(R>>>28|N<<4)^(N>>>2|R<<30)^(N>>>7|R<<25)),A+=j>>>16,T+=65535&(O=(N>>>28|R<<4)^(R>>>2|N<<30)^(R>>>7|N<<25)),E+=O>>>16,A+=(j=R&F^R&Z^F&Z)>>>16,T+=65535&(O=N&S^N&U^S&U),E+=O>>>16,u=65535&(T+=(A+=(k+=65535&j)>>>16)>>>16)|(E+=T>>>16)<<16,g=65535&k|A<<16,k=65535&(j=p),A=j>>>16,T=65535&(O=s),E=O>>>16,A+=(j=P)>>>16,T+=65535&(O=w),E+=O>>>16,S=i,U=o,H=a,I=s=65535&(T+=(A+=(k+=65535&j)>>>16)>>>16)|(E+=T>>>16)<<16,B=c,D=f,X=d,N=u,F=l,Z=h,W=b,G=p=65535&k|A<<16,q=y,V=v,K=m,R=g,x%16==15)for(M=0;M<16;M++)O=z[M],k=65535&(j=L[M]),A=j>>>16,T=65535&O,E=O>>>16,O=z[(M+9)%16],k+=65535&(j=L[(M+9)%16]),A+=j>>>16,T+=65535&O,E+=O>>>16,w=z[(M+1)%16],k+=65535&(j=((P=L[(M+1)%16])>>>1|w<<31)^(P>>>8|w<<24)^(P>>>7|w<<25)),A+=j>>>16,T+=65535&(O=(w>>>1|P<<31)^(w>>>8|P<<24)^w>>>7),E+=O>>>16,w=z[(M+14)%16],A+=(j=((P=L[(M+14)%16])>>>19|w<<13)^(w>>>29|P<<3)^(P>>>6|w<<26))>>>16,T+=65535&(O=(w>>>19|P<<13)^(P>>>29|w<<3)^w>>>6),E+=O>>>16,E+=(T+=(A+=(k+=65535&j)>>>16)>>>16)>>>16,z[M]=65535&T|E<<16,L[M]=65535&k|A<<16;k=65535&(j=R),A=j>>>16,T=65535&(O=N),E=O>>>16,O=e[0],A+=(j=t[0])>>>16,T+=65535&O,E+=O>>>16,E+=(T+=(A+=(k+=65535&j)>>>16)>>>16)>>>16,e[0]=N=65535&T|E<<16,t[0]=R=65535&k|A<<16,k=65535&(j=F),A=j>>>16,T=65535&(O=S),E=O>>>16,O=e[1],A+=(j=t[1])>>>16,T+=65535&O,E+=O>>>16,E+=(T+=(A+=(k+=65535&j)>>>16)>>>16)>>>16,e[1]=S=65535&T|E<<16,t[1]=F=65535&k|A<<16,k=65535&(j=Z),A=j>>>16,T=65535&(O=U),E=O>>>16,O=e[2],A+=(j=t[2])>>>16,T+=65535&O,E+=O>>>16,E+=(T+=(A+=(k+=65535&j)>>>16)>>>16)>>>16,e[2]=U=65535&T|E<<16,t[2]=Z=65535&k|A<<16,k=65535&(j=W),A=j>>>16,T=65535&(O=H),E=O>>>16,O=e[3],A+=(j=t[3])>>>16,T+=65535&O,E+=O>>>16,E+=(T+=(A+=(k+=65535&j)>>>16)>>>16)>>>16,e[3]=H=65535&T|E<<16,t[3]=W=65535&k|A<<16,k=65535&(j=G),A=j>>>16,T=65535&(O=I),E=O>>>16,O=e[4],A+=(j=t[4])>>>16,T+=65535&O,E+=O>>>16,E+=(T+=(A+=(k+=65535&j)>>>16)>>>16)>>>16,e[4]=I=65535&T|E<<16,t[4]=G=65535&k|A<<16,k=65535&(j=q),A=j>>>16,T=65535&(O=B),E=O>>>16,O=e[5],A+=(j=t[5])>>>16,T+=65535&O,E+=O>>>16,E+=(T+=(A+=(k+=65535&j)>>>16)>>>16)>>>16,e[5]=B=65535&T|E<<16,t[5]=q=65535&k|A<<16,k=65535&(j=V),A=j>>>16,T=65535&(O=D),E=O>>>16,O=e[6],A+=(j=t[6])>>>16,T+=65535&O,E+=O>>>16,E+=(T+=(A+=(k+=65535&j)>>>16)>>>16)>>>16,e[6]=D=65535&T|E<<16,t[6]=V=65535&k|A<<16,k=65535&(j=K),A=j>>>16,T=65535&(O=X),E=O>>>16,O=e[7],A+=(j=t[7])>>>16,T+=65535&O,E+=O>>>16,E+=(T+=(A+=(k+=65535&j)>>>16)>>>16)>>>16,e[7]=X=65535&T|E<<16,t[7]=K=65535&k|A<<16,C+=128,r-=128}return r}function Q(e,t,n){var r,i=new Int32Array(8),o=new Int32Array(8),a=new Uint8Array(256),s=n;for(i[0]=1779033703,i[1]=3144134277,i[2]=1013904242,i[3]=2773480762,i[4]=1359893119,i[5]=2600822924,i[6]=528734635,i[7]=1541459225,o[0]=4089235720,o[1]=2227873595,o[2]=4271175723,o[3]=1595750129,o[4]=2917565137,o[5]=725511199,o[6]=4215389547,o[7]=327033209,J(i,o,t,n),n%=128,r=0;r<n;r++)a[r]=t[s-n+r];for(a[n]=128,a[(n=256-128*(n<112?1:0))-9]=0,b(a,n-8,s/536870912|0,s<<3),J(i,o,a,n),r=0;r<8;r++)b(e,8*r,i[r],o[r]);return 0}function _(e,n){var r=t(),i=t(),o=t(),a=t(),s=t(),c=t(),f=t(),u=t(),l=t();D(r,e[1],e[0]),D(l,n[1],n[0]),X(r,r,l),B(i,e[0],e[1]),B(l,n[0],n[1]),X(i,i,l),X(o,e[3],n[3]),X(o,o,d),X(a,e[2],n[2]),B(a,a,a),D(s,i,r),D(c,a,o),B(f,a,o),B(u,i,r),X(e[0],s,c),X(e[1],u,f),X(e[2],f,c),X(e[3],s,u)}function $(e,t,n){var r;for(r=0;r<4;r++)N(e[r],t[r],n)}function ee(e,n){var r=t(),i=t(),o=t();F(o,n[2]),X(r,n[0],o),X(i,n[1],o),S(e,i),e[31]^=H(r)<<7}function te(e,t,n){var r,i;for(z(e[0],a),z(e[1],s),z(e[2],s),z(e[3],a),i=255;i>=0;--i)$(e,t,r=n[i/8|0]>>(7&i)&1),_(t,e),_(e,e),$(e,t,r)}function ne(e,n){var r=[t(),t(),t(),t()];z(r[0],u),z(r[1],l),z(r[2],s),X(r[3],u,l),te(e,r,n)}function re(e,n,i){var o,a=new Uint8Array(64),s=[t(),t(),t(),t()];for(i||r(n,32),Q(a,n,32),a[0]&=248,a[31]&=127,a[31]|=64,ne(s,a),ee(e,s),o=0;o<32;o++)n[o+32]=e[o];return 0}var ie=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function oe(e,t){var n,r,i,o;for(r=63;r>=32;--r){for(n=0,i=r-32,o=r-12;i<o;++i)t[i]+=n-16*t[r]*ie[i-(r-32)],n=Math.floor((t[i]+128)/256),t[i]-=256*n;t[i]+=n,t[r]=0}for(n=0,i=0;i<32;i++)t[i]+=n-(t[31]>>4)*ie[i],n=t[i]>>8,t[i]&=255;for(i=0;i<32;i++)t[i]-=n*ie[i];for(r=0;r<32;r++)t[r+1]+=t[r]>>8,e[r]=255&t[r]}function ae(e){var t,n=new Float64Array(64);for(t=0;t<64;t++)n[t]=e[t];for(t=0;t<64;t++)e[t]=0;oe(e,n)}function se(e,n,r,i){var o,a,s=new Uint8Array(64),c=new Uint8Array(64),f=new Uint8Array(64),d=new Float64Array(64),u=[t(),t(),t(),t()];Q(s,i,32),s[0]&=248,s[31]&=127,s[31]|=64;var l=r+64;for(o=0;o<r;o++)e[64+o]=n[o];for(o=0;o<32;o++)e[32+o]=s[32+o];for(Q(f,e.subarray(32),r+32),ae(f),ne(u,f),ee(e,u),o=32;o<64;o++)e[o]=i[o];for(Q(c,e,r+64),ae(c),o=0;o<64;o++)d[o]=0;for(o=0;o<32;o++)d[o]=f[o];for(o=0;o<32;o++)for(a=0;a<32;a++)d[o+a]+=c[o]*s[a];return oe(e.subarray(32),d),l}function ce(e,n,r,i){var o,c=new Uint8Array(32),d=new Uint8Array(64),u=[t(),t(),t(),t()],l=[t(),t(),t(),t()];if(r<64)return-1;if(function(e,n){var r=t(),i=t(),o=t(),c=t(),d=t(),u=t(),l=t();return z(e[2],s),I(e[1],n),R(o,e[1]),X(c,o,f),D(o,o,e[2]),B(c,e[2],c),R(d,c),R(u,d),X(l,u,d),X(r,l,o),X(r,r,c),Z(r,r),X(r,r,o),X(r,r,c),X(r,r,c),X(e[0],r,c),R(i,e[0]),X(i,i,c),U(i,o)&&X(e[0],e[0],h),R(i,e[0]),X(i,i,c),U(i,o)?-1:(H(e[0])===n[31]>>7&&D(e[0],a,e[0]),X(e[3],e[0],e[1]),0)}(l,i))return-1;for(o=0;o<r;o++)e[o]=n[o];for(o=0;o<32;o++)e[o+32]=i[o];if(Q(d,e,r),ae(d),te(u,l,d),ne(l,n.subarray(32)),_(u,l),ee(c,u),r-=64,v(n,0,c,0)){for(o=0;o<r;o++)e[o]=0;return-1}for(o=0;o<r;o++)e[o]=n[o+64];return r}var fe=64,de=32,ue=64;function le(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function he(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function be(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:g,crypto_stream_xor:O,crypto_stream:M,crypto_stream_salsa20_xor:P,crypto_stream_salsa20:x,crypto_onetimeauth:k,crypto_onetimeauth_verify:A,crypto_verify_16:y,crypto_verify_32:v,crypto_secretbox:T,crypto_secretbox_open:E,crypto_scalarmult:W,crypto_scalarmult_base:G,crypto_box_beforenm:V,crypto_box_afternm:K,crypto_box:function(e,t,n,r,i,o){var a=new Uint8Array(32);return V(a,i,o),K(e,t,n,r,a)},crypto_box_open:function(e,t,n,r,i,o){var a=new Uint8Array(32);return V(a,i,o),C(e,t,n,r,a)},crypto_box_keypair:q,crypto_hash:Q,crypto_sign:se,crypto_sign_keypair:re,crypto_sign_open:ce,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:16,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:fe,crypto_sign_PUBLICKEYBYTES:de,crypto_sign_SECRETKEYBYTES:ue,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:f,L:ie,pack25519:S,unpack25519:I,M:X,A:B,S:R,Z:D,pow2523:Z,add:_,set25519:z,modL:oe,scalarmult:te,scalarbase:ne},e.randomBytes=function(e){var t=new Uint8Array(e);return r(t,e),t},e.secretbox=function(e,t,n){he(e,t,n),le(n,t);for(var r=new Uint8Array(32+e.length),i=new Uint8Array(r.length),o=0;o<e.length;o++)r[o+32]=e[o];return T(i,r,r.length,t,n),i.subarray(16)},e.secretbox.open=function(e,t,n){he(e,t,n),le(n,t);for(var r=new Uint8Array(16+e.length),i=new Uint8Array(r.length),o=0;o<e.length;o++)r[o+16]=e[o];return r.length<32||0!==E(i,r,r.length,t,n)?null:i.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=16,e.scalarMult=function(e,t){if(he(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var n=new Uint8Array(32);return W(n,e,t),n},e.scalarMult.base=function(e){if(he(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return G(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,n,r,i){var o=e.box.before(r,i);return e.secretbox(t,n,o)},e.box.before=function(e,t){he(e,t),function(e,t){if(32!==e.length)throw new Error("bad public key size");if(32!==t.length)throw new Error("bad secret key size")}(e,t);var n=new Uint8Array(32);return V(n,e,t),n},e.box.after=e.secretbox,e.box.open=function(t,n,r,i){var o=e.box.before(r,i);return e.secretbox.open(t,n,o)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return q(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(he(e),32!==e.length)throw new Error("bad secret key size");var t=new Uint8Array(32);return G(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(he(e,t),t.length!==ue)throw new Error("bad secret key size");var n=new Uint8Array(fe+e.length);return se(n,e,e.length,t),n},e.sign.open=function(e,t){if(he(e,t),t.length!==de)throw new Error("bad public key size");var n=new Uint8Array(e.length),r=ce(n,e,e.length,t);if(r<0)return null;for(var i=new Uint8Array(r),o=0;o<i.length;o++)i[o]=n[o];return i},e.sign.detached=function(t,n){for(var r=e.sign(t,n),i=new Uint8Array(fe),o=0;o<i.length;o++)i[o]=r[o];return i},e.sign.detached.verify=function(e,t,n){if(he(e,t,n),t.length!==fe)throw new Error("bad signature size");if(n.length!==de)throw new Error("bad public key size");var r,i=new Uint8Array(fe+e.length),o=new Uint8Array(fe+e.length);for(r=0;r<fe;r++)i[r]=t[r];for(r=0;r<e.length;r++)i[r+fe]=e[r];return ce(o,i,i.length,n)>=0},e.sign.keyPair=function(){var e=new Uint8Array(de),t=new Uint8Array(ue);return re(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(he(e),e.length!==ue)throw new Error("bad secret key size");for(var t=new Uint8Array(de),n=0;n<t.length;n++)t[n]=e[32+n];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(he(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(de),n=new Uint8Array(ue),r=0;r<32;r++)n[r]=e[r];return re(t,n,!0),{publicKey:t,secretKey:n}},e.sign.publicKeyLength=de,e.sign.secretKeyLength=ue,e.sign.seedLength=32,e.sign.signatureLength=fe,e.hash=function(e){he(e);var t=new Uint8Array(64);return Q(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return he(e,t),0!==e.length&&0!==t.length&&e.length===t.length&&0===p(e,0,t,0,e.length)},e.setPRNG=function(e){r=e},function(){var t="undefined"!=typeof self?self.crypto||self.msCrypto:null;t&&t.getRandomValues?e.setPRNG((function(e,n){var r,i=new Uint8Array(n);for(r=0;r<n;r+=65536)t.getRandomValues(i.subarray(r,r+Math.min(n-r,65536)));for(r=0;r<n;r++)e[r]=i[r];be(i)})):(t=n(5024))&&t.randomBytes&&e.setPRNG((function(e,n){var r,i=t.randomBytes(n);for(r=0;r<n;r++)e[r]=i[r];be(i)}))}()}(e.exports?e.exports:self.nacl=self.nacl||{})},4847:()=>{},6601:()=>{},9214:()=>{},5024:()=>{},9709:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r={Keyring:!0,decodeAddress:!0,encodeAddress:!0,setSS58Format:!0,createPair:!0,packageInfo:!0,createTestKeyring:!0,createTestPairs:!0};Object.defineProperty(t,"Keyring",{enumerable:!0,get:function(){return i.Keyring}}),Object.defineProperty(t,"createPair",{enumerable:!0,get:function(){return s.createPair}}),Object.defineProperty(t,"createTestKeyring",{enumerable:!0,get:function(){return f.createTestKeyring}}),Object.defineProperty(t,"createTestPairs",{enumerable:!0,get:function(){return d.createTestPairs}}),Object.defineProperty(t,"decodeAddress",{enumerable:!0,get:function(){return o.decodeAddress}}),Object.defineProperty(t,"encodeAddress",{enumerable:!0,get:function(){return o.encodeAddress}}),Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return c.packageInfo}}),Object.defineProperty(t,"setSS58Format",{enumerable:!0,get:function(){return o.setSS58Format}});var i=n(516),o=n(4730),a=n(3650);Object.keys(a).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===a[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}}))}));var s=n(8839),c=n(1559),f=n(6930),d=n(9943)},3650:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DEV_SEED=t.DEV_PHRASE=void 0,t.DEV_PHRASE="bottom drive obey lake curtain smoke basket hold race lonely fit walk",t.DEV_SEED="0xfac7959dbfe72f052e5a0c3c8d6530f202b02fd8f9f5ca3580ec8deb7797479e"},5359:(e,t,n)=>{"use strict";var r=n(9215),i=n(3725),o=n(1559);(0,r.detectPackage)(o.packageInfo,"/",[r.packageInfo,i.packageInfo])},7491:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r={};t.default=void 0,n(5359);var i=n(9709);Object.keys(i).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===i[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}}))}));var o=i.Keyring;t.default=o},516:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.Keyring=void 0;var i=r(n(7509)),o=r(n(3399)),a=n(9215),s=n(4730),c=n(3650),f=n(8839),d=n(307);const u={ecdsa:e=>(0,s.secp256k1PairFromSeed)(e),ed25519:e=>(0,s.ed25519PairFromSeed)(e),ethereum:e=>(0,s.secp256k1PairFromSeed)(e),sr25519:e=>(0,s.sr25519PairFromSeed)(e)};function l(e){let{publicKey:t}=e;return t}var h=(0,o.default)("pairs"),b=(0,o.default)("type"),p=(0,o.default)("ss58");t.Keyring=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Object.defineProperty(this,h,{writable:!0,value:void 0}),Object.defineProperty(this,b,{writable:!0,value:void 0}),Object.defineProperty(this,p,{writable:!0,value:void 0}),this.decodeAddress=s.decodeAddress,this.encodeAddress=(e,t)=>"ethereum"===this.type?(0,s.ethereumEncode)(e):(0,s.encodeAddress)(e,(0,a.isUndefined)(t)?(0,i.default)(this,p)[p]:t),e.type=e.type||"ed25519",(0,a.assert)(["ecdsa","ethereum","ed25519","sr25519"].includes(e.type||"undefined"),(()=>`Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${e.type||"unknown"}`)),(0,i.default)(this,h)[h]=new d.Pairs,(0,i.default)(this,p)[p]=e.ss58Format,(0,i.default)(this,b)[b]=e.type}get pairs(){return this.getPairs()}get publicKeys(){return this.getPublicKeys()}get type(){return(0,i.default)(this,b)[b]}addPair(e){return(0,i.default)(this,h)[h].add(e)}addFromAddress(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.type,i=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0;const a=this.decodeAddress(e,i);return this.addPair((0,f.createPair)({toSS58:this.encodeAddress,type:r},{publicKey:a,secretKey:new Uint8Array},t,n,o))}addFromJson(e,t){return this.addPair(this.createFromJson(e,t))}addFromMnemonic(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.type;return this.addFromUri(e,t,n)}addFromPair(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.type;return this.addPair(this.createFromPair(e,t,n))}addFromSeed(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.type;return this.addPair((0,f.createPair)({toSS58:this.encodeAddress,type:n},u[n](e),t,null))}addFromUri(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.type;return this.addPair(this.createFromUri(e,t,n))}createFromJson(e,t){let{address:n,encoded:r,encoding:{content:i,type:o,version:c},meta:d}=e;(0,a.assert)("3"!==c||"pkcs8"===i[0],(()=>`Unable to decode non-pkcs8 type, [${i.join(",")}] found}`));const u="0"!==c&&Array.isArray(i)?i[1]:this.type,l=Array.isArray(o)?o:[o];(0,a.assert)(["ed25519","sr25519","ecdsa","ethereum"].includes(u),(()=>`Unknown crypto type ${u}`));const h=(0,a.isHex)(n)?(0,a.hexToU8a)(n):this.decodeAddress(n,t),b=(0,a.isHex)(r)?(0,a.hexToU8a)(r):(0,s.base64Decode)(r);return(0,f.createPair)({toSS58:this.encodeAddress,type:u},{publicKey:h,secretKey:new Uint8Array},d,b,l)}createFromPair(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.type;return(0,f.createPair)({toSS58:this.encodeAddress,type:n},e,t,null)}createFromUri(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.type;const r=e.startsWith("//")?`${c.DEV_PHRASE}${e}`:e,{derivePath:i,password:o,path:d,phrase:l}=(0,s.keyExtractSuri)(r);let h;const b=(0,a.isHex)(l,256);if(b)h=(0,a.hexToU8a)(l);else{const e=l.split(" ");[12,15,18,21,24].includes(e.length)?h="ethereum"===n?(0,s.mnemonicToLegacySeed)(l,"",!1,64):(0,s.mnemonicToMiniSecret)(l,o):((0,a.assert)(l.length<=32,"specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes"),h=(0,a.stringToU8a)(l.padEnd(32)))}const p="ethereum"===n?b?u[n](h):(0,s.hdEthereum)(h,i.substring(1)):(0,s.keyFromPath)(u[n](h),d,n);return(0,f.createPair)({toSS58:this.encodeAddress,type:n},p,t,null)}getPair(e){return(0,i.default)(this,h)[h].get(e)}getPairs(){return(0,i.default)(this,h)[h].all()}getPublicKeys(){return(0,i.default)(this,h)[h].all().map(l)}removePair(e){(0,i.default)(this,h)[h].remove(e)}setSS58Format(e){(0,i.default)(this,p)[p]=e}toJson(e,t){return(0,i.default)(this,h)[h].get(e).toJson(t)}}},1559:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/keyring",version:"8.0.5"}},2445:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodePair=function(e,t,n){const s=Array.isArray(n)||(0,r.isUndefined)(n)?n:[n],c=(0,i.jsonDecryptData)(t,e,s),f=c.subarray(0,o.PKCS8_HEADER.length);(0,r.assert)((0,r.u8aEq)(f,o.PKCS8_HEADER),"Invalid Pkcs8 header found in body");let d=c.subarray(a,a+o.SEC_LENGTH),u=a+o.SEC_LENGTH,l=c.subarray(u,u+o.PKCS8_DIVIDER.length);(0,r.u8aEq)(l,o.PKCS8_DIVIDER)||(u=a+o.SEED_LENGTH,d=c.subarray(a,u),l=c.subarray(u,u+o.PKCS8_DIVIDER.length),(0,r.assert)((0,r.u8aEq)(l,o.PKCS8_DIVIDER),"Invalid Pkcs8 divider found in body"));const h=u+o.PKCS8_DIVIDER.length;return{publicKey:c.subarray(h,h+o.PUB_LENGTH),secretKey:d}};var r=n(9215),i=n(4730),o=n(3231);const a=o.PKCS8_HEADER.length},3231:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SEED_LENGTH=t.SEC_LENGTH=t.SALT_LENGTH=t.PUB_LENGTH=t.PKCS8_HEADER=t.PKCS8_DIVIDER=void 0;const n=new Uint8Array([161,35,3,33,0]);t.PKCS8_DIVIDER=n;const r=new Uint8Array([48,83,2,1,1,48,5,6,3,43,101,112,4,34,4,32]);t.PKCS8_HEADER=r,t.PUB_LENGTH=32,t.SALT_LENGTH=32,t.SEC_LENGTH=64,t.SEED_LENGTH=32},4353:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.encodePair=function(e,t){let{publicKey:n,secretKey:a}=e;(0,r.assert)(a,"Expected a valid secretKey to be passed to encode");const s=(0,r.u8aConcat)(o.PKCS8_HEADER,a,o.PKCS8_DIVIDER,n);if(!t)return s;const{params:c,password:f,salt:d}=(0,i.scryptEncode)(t),{encrypted:u,nonce:l}=(0,i.naclEncrypt)(s,f.subarray(0,32));return(0,r.u8aConcat)((0,i.scryptToU8a)(d,c),l,u)};var r=n(9215),i=n(4730),o=n(3231)},8839:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createPair=function e(t,n){let{toSS58:p,type:y}=t,{publicKey:v,secretKey:m}=n,g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},w=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,P=arguments.length>4?arguments[4]:void 0;const x=(e,t)=>{const n=(0,o.decodePair)(e,t||w,P);if(64===n.secretKey.length)v=n.publicKey,m=n.secretKey;else{const e=f[y](n.secretKey);v=e.publicKey,m=e.secretKey}},M=e=>(h(m)&&w&&x(e,w),w=(0,a.encodePair)({publicKey:v,secretKey:m},e),P=void 0,w),O=()=>{const e=l[y](v);return"ethereum"===y?(0,i.ethereumEncode)(e):p(e)};return{get address(){return O()},get addressRaw(){const e=l[y](v);return"ethereum"===y?e.slice(-20):e},get isLocked(){return h(m)},get meta(){return g},get publicKey(){return v},get type(){return y},decodePkcs8:x,decryptMessage:(e,t)=>{(0,r.assert)(!h(m),"Cannot encrypt with a locked key pair"),(0,r.assert)(!["ecdsa","ethereum"].includes(y),"Secp256k1 not supported yet");const n=(0,r.u8aToU8a)(e);return(0,i.naclOpen)(n.slice(24,n.length),n.slice(0,24),(0,i.convertPublicKeyToCurve25519)((0,r.u8aToU8a)(t)),(0,i.convertSecretKeyToCurve25519)(m))},derive:(t,n)=>{(0,r.assert)("ethereum"!==y,"Unable to derive on this keypair"),(0,r.assert)(!h(m),"Cannot derive on a locked keypair");const{path:o}=(0,i.keyExtractPath)(t),a=(0,i.keyFromPath)({publicKey:v,secretKey:m},o,y);return e({toSS58:p,type:y},a,n,null)},encodePkcs8:e=>M(e),encryptMessage:(e,t,n)=>{(0,r.assert)(!h(m),"Cannot encrypt with a locked key pair"),(0,r.assert)(!["ecdsa","ethereum"].includes(y),"Secp256k1 not supported yet");const{nonce:o,sealed:a}=(0,i.naclSeal)((0,r.u8aToU8a)(e),(0,i.convertSecretKeyToCurve25519)(m),(0,i.convertPublicKeyToCurve25519)((0,r.u8aToU8a)(t)),n);return(0,r.u8aConcat)(o,a)},lock:()=>{m=new Uint8Array},setMeta:e=>{g=(0,r.objectSpread)({},g,e)},sign:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(0,r.assert)(!h(m),"Cannot sign with a locked key pair"),(0,r.u8aConcat)(t.withType?d[y]:c,u[y]((0,r.u8aToU8a)(e),{publicKey:v,secretKey:m}))},toJson:e=>{const t=["ecdsa","ethereum"].includes(y)?20===v.length?(0,r.u8aToHex)(v):(0,r.u8aToHex)((0,i.secp256k1Compress)(v)):O();return(0,s.pairToJson)(y,{address:t,meta:g},M(e),!!e)},unlock:e=>x(e),verify:(e,t,n)=>(0,i.signatureVerify)(e,t,l[y]((0,r.u8aToU8a)(n))).isValid,vrfSign:(e,t,n)=>{if((0,r.assert)(!h(m),"Cannot sign with a locked key pair"),"sr25519"===y)return(0,i.sr25519VrfSign)(e,{secretKey:m},t,n);const o=u[y]((0,r.u8aToU8a)(e),{publicKey:v,secretKey:m});return(0,r.u8aConcat)(b(o,t,n),o)},vrfVerify:(e,t,n,o,a)=>"sr25519"===y?(0,i.sr25519VrfVerify)(e,t,v,o,a):(0,i.signatureVerify)(e,(0,r.u8aConcat)(d[y],t.subarray(32)),l[y]((0,r.u8aToU8a)(n))).isValid&&(0,r.u8aEq)(t.subarray(0,32),b(t.subarray(32),o,a))}};var r=n(9215),i=n(4730),o=n(2445),a=n(4353),s=n(4987);const c=new Uint8Array,f={ecdsa:i.secp256k1PairFromSeed,ed25519:i.ed25519PairFromSeed,ethereum:i.secp256k1PairFromSeed,sr25519:i.sr25519PairFromSeed},d={ecdsa:new Uint8Array([2]),ed25519:new Uint8Array([0]),ethereum:new Uint8Array([2]),sr25519:new Uint8Array([1])},u={ecdsa:(e,t)=>(0,i.secp256k1Sign)(e,t,"blake2"),ed25519:i.ed25519Sign,ethereum:(e,t)=>(0,i.secp256k1Sign)(e,t,"keccak"),sr25519:i.sr25519Sign},l={ecdsa:e=>e.length>32?(0,i.blake2AsU8a)(e):e,ed25519:e=>e,ethereum:e=>20===e.length?e:(0,i.keccakAsU8a)((0,i.secp256k1Expand)(e)),sr25519:e=>e};function h(e){return!e||(0,r.u8aEmpty)(e)}function b(e,t,n){return(0,i.blake2AsU8a)((0,r.u8aConcat)(t||"",n||"",e))}},7187:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nobody=function(){return c};var r=n(4730);const i=new Uint8Array(32),o=(0,r.encodeAddress)(i),a={isTesting:!0,name:"nobody"},s={address:o,encoded:"",encoding:{content:["pkcs8","ed25519"],type:"none",version:"0"},meta:a},c={address:o,addressRaw:i,decodePkcs8:(e,t)=>{},decryptMessage:(e,t)=>null,derive:(e,t)=>c,encodePkcs8:e=>new Uint8Array(0),encryptMessage:(e,t,n)=>new Uint8Array,isLocked:!0,lock:()=>{},meta:a,publicKey:i,setMeta:e=>{},sign:e=>new Uint8Array(64),toJson:e=>s,type:"ed25519",unlock:e=>{},verify:(e,t)=>!1,vrfSign:(e,t,n)=>new Uint8Array(96),vrfVerify:(e,t,n,r)=>!1}},4987:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.pairToJson=function(e,t,n,o){let{address:a,meta:s}=t;return(0,r.objectSpread)((0,i.jsonEncryptFormat)(n,["pkcs8",e],o),{address:a,meta:s})};var r=n(9215),i=n(4730)},307:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.Pairs=void 0;var i=r(n(7509)),o=r(n(3399)),a=n(9215),s=n(4730),c=(0,o.default)("map");t.Pairs=class{constructor(){Object.defineProperty(this,c,{writable:!0,value:{}})}add(e){return(0,i.default)(this,c)[c][(0,s.decodeAddress)(e.address).toString()]=e,e}all(){return Object.values((0,i.default)(this,c)[c])}get(e){const t=(0,i.default)(this,c)[c][(0,s.decodeAddress)(e).toString()];return(0,a.assert)(t,(()=>`Unable to retrieve keypair '${(0,a.isU8a)(e)||(0,a.isHex)(e)?(0,a.u8aToHex)((0,a.u8aToU8a)(e)):e}'`)),t}remove(e){delete(0,i.default)(this,c)[c][(0,s.decodeAddress)(e).toString()]}}},6930:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PAIRSSR25519=t.PAIRSETHEREUM=void 0,t.createTestKeyring=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=new i.Keyring(e),r=e.type&&"ethereum"===e.type?s:a;for(const{name:i,publicKey:a,secretKey:s,seed:c,type:f}of r){if(!i&&!c)throw new Error("Testing pair should have either a name or a seed");const r={isTesting:!0,name:i||c&&c.replace("//","_").toLowerCase()};(t||i||!c?n.addPair((0,o.createPair)({toSS58:n.encodeAddress,type:f},{publicKey:a,secretKey:s},r)):n.addFromUri(c,r,e.type)).lock=()=>{}}return n};var r=n(9215),i=n(516),o=n(8839);const a=[{publicKey:(0,r.hexToU8a)("0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d"),secretKey:(0,r.hexToU8a)("0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011"),seed:"Alice",type:"sr25519"},{publicKey:(0,r.hexToU8a)("0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f"),secretKey:(0,r.hexToU8a)("0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd"),seed:"Alice//stash",type:"sr25519"},{publicKey:(0,r.hexToU8a)("0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48"),secretKey:(0,r.hexToU8a)("0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325"),seed:"Bob",type:"sr25519"},{publicKey:(0,r.hexToU8a)("0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e"),secretKey:(0,r.hexToU8a)("0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde"),seed:"Bob//stash",type:"sr25519"},{publicKey:(0,r.hexToU8a)("0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22"),secretKey:(0,r.hexToU8a)("0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c"),seed:"Charlie",type:"sr25519"},{publicKey:(0,r.hexToU8a)("0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20"),secretKey:(0,r.hexToU8a)("0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568"),seed:"Dave",type:"sr25519"},{publicKey:(0,r.hexToU8a)("0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e"),secretKey:(0,r.hexToU8a)("0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587"),seed:"Eve",type:"sr25519"},{publicKey:(0,r.hexToU8a)("0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c"),secretKey:(0,r.hexToU8a)("0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426"),seed:"Ferdie",type:"sr25519"}];t.PAIRSSR25519=a;const s=[{name:"Alith",publicKey:(0,r.hexToU8a)("0x02509540919faacf9ab52146c9aa40db68172d83777250b28e4679176e49ccdd9f"),secretKey:(0,r.hexToU8a)("0x5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133"),type:"ethereum"},{name:"Baltathar",publicKey:(0,r.hexToU8a)("0x033bc19e36ff1673910575b6727a974a9abd80c9a875d41ab3e2648dbfb9e4b518"),secretKey:(0,r.hexToU8a)("0x8075991ce870b93a8870eca0c0f91913d12f47948ca0fd25b49c6fa7cdbeee8b"),type:"ethereum"},{name:"Charleth",publicKey:(0,r.hexToU8a)("0x0234637bdc0e89b5d46543bcbf8edff329d2702bc995e27e9af4b1ba009a3c2a5e"),secretKey:(0,r.hexToU8a)("0x0b6e18cafb6ed99687ec547bd28139cafdd2bffe70e6b688025de6b445aa5c5b"),type:"ethereum"},{name:"Dorothy",publicKey:(0,r.hexToU8a)("0x02a00d60b2b408c2a14c5d70cdd2c205db8985ef737a7e55ad20ea32cc9e7c417c"),secretKey:(0,r.hexToU8a)("0x39539ab1876910bbf3a223d84a29e28f1cb4e2e456503e7e91ed39b2e7223d68"),type:"ethereum"},{name:"Ethan",publicKey:(0,r.hexToU8a)("0x025cdc005b752651cd3f728fb9192182acb3a9c89e19072cbd5b03f3ee1f1b3ffa"),secretKey:(0,r.hexToU8a)("0x7dce9bc8babb68fec1409be38c8e1a52650206a7ed90ff956ae8a6d15eeaaef4"),type:"ethereum"},{name:"Faith",publicKey:(0,r.hexToU8a)("0x037964b6c9d546da4646ada28a99e34acaa1d14e7aba861a9055f9bd200c8abf74"),secretKey:(0,r.hexToU8a)("0xb9d2ea9a615f3165812e8d44de0d24da9bbd164b65c4f0573e1ce2c8dbd9c8df"),type:"ethereum"}];t.PAIRSETHEREUM=s},9943:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createTestPairs=function(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=(0,i.createTestKeyring)(e,t),o=n.getPairs(),a={nobody:(0,r.nobody)()};for(const e of o)a[e.meta.name]=e;return a};var r=n(7187),i=n(6930)},8530:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.substrateRegistry=t.knownTestnet=t.knownLedger=t.knownIcon=t.knownGenesis=void 0,t.substrateRegistry="https://raw.githubusercontent.com/paritytech/ss58-registry/main/ss58-registry.json",t.knownGenesis={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],bifrost:["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],"dock-mainnet":["0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],"nodle-chain":["0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23"],plasm:["0x3e86364d4b4894021cb2a0390bcf2feb5517d5292f2de2bb9404227e908b0b8b"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"]},t.knownIcon={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},t.knownLedger={centrifuge:747,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,kusama:434,"nodle-chain":1003,polkadot:354,polymesh:595,statemine:434},t.knownTestnet={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,subspace_testnet:!0,"zero-alphaville":!0}},9502:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.selectableNetworks=t.availableNetworks=t.allNetworks=void 0;var r=n(8530),i=n(5568);const o=[0,2,42],a=["testnet"],s=i.knownSubstrate.map((function(e){const t=e.network||"",n=t.replace(/_/g,"-").split("-"),i=e;return i.slip44=r.knownLedger[t],i.hasLedgerSupport=!!i.slip44,i.genesisHash=r.knownGenesis[t]||[],i.icon=r.knownIcon[t]||"substrate",i.isTestnet=!!r.knownTestnet[t]||a.includes(n[n.length-1]),i.isIgnored=i.isTestnet||!(e.standardAccount&&e.decimals&&e.symbols)&&42!==e.prefix,i}));t.allNetworks=s;const c=s.filter((function(e){return!e.isIgnored&&!!e.network})).sort((function(e,t){const n=o.includes(e.prefix),r=o.includes(t.prefix);return n===r?0:n?-1:r?1:e.displayName.localeCompare(t.displayName)}));t.availableNetworks=c;const f=c.filter((function(e){let{genesisHash:t,prefix:n}=e;return!!t.length||42===n}));t.selectableNetworks=f},7988:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/networks",version:"8.0.5"}},5568:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.knownSubstrate=void 0,t.knownSubstrate=[{decimals:[10],displayName:"Polkadot Relay Chain",network:"polkadot",prefix:0,standardAccount:"*25519",symbols:["DOT"],website:"https://polkadot.network"},{decimals:null,displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",network:"BareSr25519",prefix:1,standardAccount:"Sr25519",symbols:null,website:null},{decimals:[12],displayName:"Kusama Relay Chain",network:"kusama",prefix:2,standardAccount:"*25519",symbols:["KSM"],website:"https://kusama.network"},{decimals:null,displayName:"Bare 32-bit Ed25519 public key.",network:"BareEd25519",prefix:3,standardAccount:"Ed25519",symbols:null,website:null},{decimals:null,displayName:"Katal Chain",network:"katalchain",prefix:4,standardAccount:"*25519",symbols:null,website:null},{decimals:[15],displayName:"Plasm Network",network:"plasm",prefix:5,standardAccount:"*25519",symbols:["PLM"],website:"https://plasmnet.io"},{decimals:[12],displayName:"Bifrost",network:"bifrost",prefix:6,standardAccount:"*25519",symbols:["BNC"],website:"https://bifrost.finance/"},{decimals:[18],displayName:"Edgeware",network:"edgeware",prefix:7,standardAccount:"*25519",symbols:["EDG"],website:"https://edgewa.re"},{decimals:[12],displayName:"Karura",network:"karura",prefix:8,standardAccount:"*25519",symbols:["KAR"],website:"https://karura.network/"},{decimals:[18],displayName:"Laminar Reynolds Canary",network:"reynolds",prefix:9,standardAccount:"*25519",symbols:["REY"],website:"http://laminar.network/"},{decimals:[12],displayName:"Acala",network:"acala",prefix:10,standardAccount:"*25519",symbols:["ACA"],website:"https://acala.network/"},{decimals:[18],displayName:"Laminar",network:"laminar",prefix:11,standardAccount:"*25519",symbols:["LAMI"],website:"http://laminar.network/"},{decimals:[6],displayName:"Polymesh",network:"polymesh",prefix:12,standardAccount:"*25519",symbols:["POLYX"],website:"https://polymath.network/"},{decimals:[12],displayName:"Integritee",network:"integritee",prefix:13,standardAccount:"*25519",symbols:["TEER"],website:"https://integritee.network"},{decimals:[0],displayName:"Totem",network:"totem",prefix:14,standardAccount:"*25519",symbols:["TOTEM"],website:"https://totemaccounting.com"},{decimals:[12],displayName:"Synesthesia",network:"synesthesia",prefix:15,standardAccount:"*25519",symbols:["SYN"],website:"https://synesthesia.network/"},{decimals:[12],displayName:"Kulupu",network:"kulupu",prefix:16,standardAccount:"*25519",symbols:["KLP"],website:"https://kulupu.network/"},{decimals:null,displayName:"Dark Mainnet",network:"dark",prefix:17,standardAccount:"*25519",symbols:null,website:null},{decimals:[9,9],displayName:"Darwinia Network",network:"darwinia",prefix:18,standardAccount:"*25519",symbols:["RING","KTON"],website:"https://darwinia.network/"},{decimals:[12],displayName:"GeekCash",network:"geek",prefix:19,standardAccount:"*25519",symbols:["GEEK"],website:"https://geekcash.org"},{decimals:[12],displayName:"Stafi",network:"stafi",prefix:20,standardAccount:"*25519",symbols:["FIS"],website:"https://stafi.io"},{decimals:[6],displayName:"Dock Testnet",network:"dock-testnet",prefix:21,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:[6],displayName:"Dock Mainnet",network:"dock-mainnet",prefix:22,standardAccount:"*25519",symbols:["DCK"],website:"https://dock.io"},{decimals:null,displayName:"ShiftNrg",network:"shift",prefix:23,standardAccount:"*25519",symbols:null,website:null},{decimals:[18],displayName:"ZERO",network:"zero",prefix:24,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[18],displayName:"ZERO Alphaville",network:"zero-alphaville",prefix:25,standardAccount:"*25519",symbols:["PLAY"],website:"https://zero.io"},{decimals:[10],displayName:"Jupiter",network:"jupiter",prefix:26,standardAccount:"*25519",symbols:["jDOT"],website:"https://jupiter.patract.io"},{decimals:null,displayName:"Subsocial",network:"subsocial",prefix:28,standardAccount:"*25519",symbols:null,website:null},{decimals:[12,12],displayName:"CORD Network",network:"cord",prefix:29,standardAccount:"*25519",symbols:["DHI","WAY"],website:"https://cord.network/"},{decimals:[12],displayName:"Phala Network",network:"phala",prefix:30,standardAccount:"*25519",symbols:["PHA"],website:"https://phala.network"},{decimals:[12],displayName:"Litentry Network",network:"litentry",prefix:31,standardAccount:"*25519",symbols:["LIT"],website:"https://litentry.com/"},{decimals:[9],displayName:"Robonomics",network:"robonomics",prefix:32,standardAccount:"*25519",symbols:["XRT"],website:"https://robonomics.network"},{decimals:null,displayName:"DataHighway",network:"datahighway",prefix:33,standardAccount:"*25519",symbols:null,website:null},{decimals:[12],displayName:"Ares Protocol",network:"ares",prefix:34,standardAccount:"*25519",symbols:["ARES"],website:"https://www.aresprotocol.com/"},{decimals:[15],displayName:"Valiu Liquidity Network",network:"vln",prefix:35,standardAccount:"*25519",symbols:["USDv"],website:"https://valiu.com/"},{decimals:[18],displayName:"Centrifuge Chain",network:"centrifuge",prefix:36,standardAccount:"*25519",symbols:["CFG"],website:"https://centrifuge.io/"},{decimals:[18],displayName:"Nodle Chain",network:"nodle",prefix:37,standardAccount:"*25519",symbols:["NODL"],website:"https://nodle.io/"},{decimals:[18],displayName:"KILT Chain",network:"kilt",prefix:38,standardAccount:"*25519",symbols:["KILT"],website:"https://kilt.io/"},{decimals:[18],displayName:"MathChain mainnet",network:"mathchain",prefix:39,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:[18],displayName:"MathChain testnet",network:"mathchain-testnet",prefix:40,standardAccount:"*25519",symbols:["MATH"],website:"https://mathwallet.org"},{decimals:null,displayName:"Polimec Chain",network:"poli",prefix:41,standardAccount:"*25519",symbols:null,website:"https://polimec.io/"},{decimals:null,displayName:"Substrate",network:"substrate",prefix:42,standardAccount:"*25519",symbols:null,website:"https://substrate.io/"},{decimals:null,displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",network:"BareSecp256k1",prefix:43,standardAccount:"secp256k1",symbols:null,website:null},{decimals:[8],displayName:"ChainX",network:"chainx",prefix:44,standardAccount:"*25519",symbols:["PCX"],website:"https://chainx.org/"},{decimals:[12,12],displayName:"UniArts Network",network:"uniarts",prefix:45,standardAccount:"*25519",symbols:["UART","UINK"],website:"https://uniarts.me"},{decimals:null,displayName:"This prefix is reserved.",network:"reserved46",prefix:46,standardAccount:null,symbols:null,website:null},{decimals:null,displayName:"This prefix is reserved.",network:"reserved47",prefix:47,standardAccount:null,symbols:null,website:null},{decimals:[12],displayName:"Neatcoin Mainnet",network:"neatcoin",prefix:48,standardAccount:"*25519",symbols:["NEAT"],website:"https://neatcoin.org"},{decimals:[12],displayName:"Picasso",network:"picasso",prefix:49,standardAccount:"*25519",symbols:["PICA"],website:"https://picasso.composable.finance"},{decimals:[12],displayName:"Composable",network:"composable",prefix:50,standardAccount:"*25519",symbols:["LAYR"],website:"https://composable.finance"},{decimals:[9],displayName:"xx network",network:"xxnetwork",prefix:55,standardAccount:"*25519",symbols:["XX"],website:"https://xx.network"},{decimals:[12],displayName:"HydraDX",network:"hydradx",prefix:63,standardAccount:"*25519",symbols:["HDX"],website:"https://hydradx.io"},{decimals:[18],displayName:"AvN Mainnet",network:"aventus",prefix:65,standardAccount:"*25519",symbols:["AVT"],website:"https://aventus.io"},{decimals:[12],displayName:"Crust Network",network:"crust",prefix:66,standardAccount:"*25519",symbols:["CRU"],website:"https://crust.network"},{decimals:[0,9,9,9,9,9,9,9],displayName:"Equilibrium Network",network:"equilibrium",prefix:67,standardAccount:"*25519",symbols:["Unknown","USD","EQ","ETH","BTC","EOS","DOT","CRV"],website:"https://equilibrium.io"},{decimals:[18],displayName:"SORA Network",network:"sora",prefix:69,standardAccount:"*25519",symbols:["XOR"],website:"https://sora.org"},{decimals:[10],displayName:"Zeitgeist",network:"zeitgeist",prefix:73,standardAccount:"*25519",symbols:["ZTG"],website:"https://zeitgeist.pm"},{decimals:[12],displayName:"Manta network",network:"manta",prefix:77,standardAccount:"*25519",symbols:["MA"],website:"https://manta.network"},{decimals:[12],displayName:"Calamari: Manta Canary Network",network:"calamari",prefix:78,standardAccount:"*25519",symbols:["KMA"],website:"https://manta.network"},{decimals:[12],displayName:"Polkadex Mainnet",network:"polkadex",prefix:88,standardAccount:"*25519",symbols:["PDEX"],website:"https://polkadex.trade"},{decimals:[18],displayName:"PolkaSmith Canary Network",network:"polkasmith",prefix:98,standardAccount:"*25519",symbols:["PKS"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"PolkaFoundry Network",network:"polkafoundry",prefix:99,standardAccount:"*25519",symbols:["PKF"],website:"https://polkafoundry.com"},{decimals:[18],displayName:"OriginTrail Parachain",network:"origintrail-parachain",prefix:101,standardAccount:"secp256k1",symbols:["TRAC"],website:"https://origintrail.io"},{decimals:[10],displayName:"Pontem Network",network:"pontem-network",prefix:105,standardAccount:"*25519",symbols:["PONT"],website:"https://pontem.network"},{decimals:[12],displayName:"Heiko",network:"heiko",prefix:110,standardAccount:"*25519",symbols:["HKO"],website:"https://parallel.fi/"},{decimals:null,displayName:"Integritee Incognito",network:"integritee-incognito",prefix:113,standardAccount:"*25519",symbols:null,website:"https://integritee.network"},{decimals:[18],displayName:"Clover Finance",network:"clover",prefix:128,standardAccount:"*25519",symbols:["CLV"],website:"https://clover.finance"},{decimals:[18],displayName:"Altair",network:"altair",prefix:136,standardAccount:"*25519",symbols:["AIR"],website:"https://centrifuge.io/"},{decimals:[12],displayName:"Parallel",network:"parallel",prefix:172,standardAccount:"*25519",symbols:["PARA"],website:"https://parallel.fi/"},{decimals:[18],displayName:"Social Network",network:"social-network",prefix:252,standardAccount:"*25519",symbols:["NET"],website:"https://social.network"},{decimals:[15],displayName:"QUARTZ by UNIQUE",network:"quartz_mainnet",prefix:255,standardAccount:"*25519",symbols:["QTZ"],website:"https://unique.network"},{decimals:[18],displayName:"Pioneer Network by Bit.Country",network:"pioneer_network",prefix:268,standardAccount:"*25519",symbols:["NEER"],website:"https://bit.country"},{decimals:[18],displayName:"Moonbeam",network:"moonbeam",prefix:1284,standardAccount:"secp256k1",symbols:["GLMR"],website:"https://moonbeam.network"},{decimals:[18],displayName:"Moonriver",network:"moonriver",prefix:1285,standardAccount:"secp256k1",symbols:["MOVR"],website:"https://moonbeam.network"},{decimals:[12],displayName:"Kapex",network:"kapex",prefix:2007,standardAccount:"*25519",symbols:["KAPEX"],website:"https://totemaccounting.com"},{decimals:[18],displayName:"Subspace testnet",network:"subspace_testnet",prefix:2254,standardAccount:"*25519",symbols:["tSSC"],website:"https://subspace.network"},{decimals:[18],displayName:"Subspace",network:"subspace",prefix:6094,standardAccount:"*25519",symbols:["SSC"],website:"https://subspace.network"},{decimals:[12],displayName:"Basilisk",network:"basilisk",prefix:10041,standardAccount:"*25519",symbols:["BSX"],website:"https://bsx.fi"},{decimals:[12],displayName:"CESS Testnet",network:"cess-testnet",prefix:10042,standardAccount:"*25519",symbols:["TCESS"],website:"https://cess.cloud"},{decimals:[12],displayName:"CESS",network:"cess",prefix:10043,standardAccount:"*25519",symbols:["CESS"],website:"https://cess.cloud"},{decimals:[18],displayName:"Automata ContextFree",network:"contextfree",prefix:11820,standardAccount:"*25519",symbols:["CTX"],website:"https://ata.network"}]},6913:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addressToEvm=function(e,t){return(0,r.decodeAddress)(e,t).subarray(0,20)};var r=n(8909)},8709:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkAddress=function(e,t){let n;try{n=(0,r.base58Decode)(e)}catch(e){return[!1,e.message]}const[a,,,s]=(0,i.checkAddressChecksum)(n);return s!==t?[!1,`Prefix mismatch, expected ${t}, found ${s}`]:o.defaults.allowedEncodedLengths.includes(n.length)?[a,a?null:"Invalid decoded address checksum"]:[!1,"Invalid decoded address length"]};var r=n(7783),i=n(5023),o=n(6909)},5023:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkAddressChecksum=function(e){const t=64&e[0]?2:1,n=1===t?e[0]:(63&e[0])<<2|e[1]>>6|(63&e[1])<<8,i=[34+t,35+t].includes(e.length),o=e.length-(i?2:1),a=(0,r.sshash)(e.subarray(0,o));return[0==(128&e[0])&&![46,47].includes(e[0])&&(i?e[e.length-2]===a[0]&&e[e.length-1]===a[1]:e[e.length-1]===a[0]),o,t,n]};var r=n(2705)},8909:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.decodeAddress=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if((0,r.assert)(e,"Invalid empty address passed"),(0,r.isU8a)(e)||(0,r.isHex)(e))return(0,r.u8aToU8a)(e);try{const s=(0,i.base58Decode)(e);(0,r.assert)(a.defaults.allowedEncodedLengths.includes(s.length),"Invalid decoded address length");const[c,f,d,u]=(0,o.checkAddressChecksum)(s);return(0,r.assert)(t||c,"Invalid decoded address checksum"),(0,r.assert)([-1,u].includes(n),(()=>`Expected ss58Format ${n}, received ${u}`)),s.slice(d,f)}catch(t){throw new Error(`Decoding ${e}: ${t.message}`)}};var r=n(9215),i=n(7783),o=n(5023),a=n(6909)},6909:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.defaults=void 0;const r={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:n(3403).availableNetworks.map((function(e){let{prefix:t}=e;return t})),prefix:42};t.defaults=r},6780:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.deriveAddress=function(e,t,n){const{path:f}=(0,i.keyExtractPath)(t);(0,r.assert)(f.length&&!f.every(c),"Expected suri to contain a combination of non-hard paths");let d=(0,a.decodeAddress)(e);for(const{chainCode:e}of f)d=(0,o.sr25519DerivePublic)(d,e);return(0,s.encodeAddress)(d,n)};var r=n(9215),i=n(4610),o=n(9247),a=n(8909),s=n(3992);function c(e){let{isHard:t}=e;return t}},3992:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.encodeAddress=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a.defaults.prefix;const n=(0,o.decodeAddress)(e);(0,r.assert)(t>=0&&t<=16383&&![46,47].includes(t),"Out of range ss58Format specified"),(0,r.assert)(a.defaults.allowedDecodedLengths.includes(n.length),(()=>`Expected a valid key to convert, with length ${a.defaults.allowedDecodedLengths.join(", ")}`));const c=(0,r.u8aConcat)(t<64?[t]:[(252&t)>>2|64,t>>8|(3&t)<<6],n);return(0,i.base58Encode)((0,r.u8aConcat)(c,(0,s.sshash)(c).subarray(0,[32,33].includes(n.length)?2:1)))};var r=n(9215),i=n(7783),o=n(8909),a=n(6909),s=n(2705)},1377:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.encodeDerivedAddress=function(e,t,n){return(0,i.encodeAddress)((0,o.createKeyDerived)((0,r.decodeAddress)(e),t),n)};var r=n(8909),i=n(3992),o=n(3262)},9072:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.encodeMultiAddress=function(e,t,n){return(0,r.encodeAddress)((0,i.createKeyMulti)(e,t),n)};var r=n(3992),i=n(5935)},3734:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addressEq=function(e,t){return(0,r.u8aEq)((0,i.decodeAddress)(e),(0,i.decodeAddress)(t))};var r=n(9215),i=n(8909)},7019:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.evmToAddress=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"blake2";const a=t=>`Converting ${e}: ${t}`,s=(0,r.u8aConcat)("evm:",e);if(24!==s.length)throw new Error(a("Invalid evm address length"));const c=(0,i.secp256k1Hasher)(n,s);return(0,o.encodeAddress)(c,t)};var r=n(9215),i=n(2441),o=n(3992)},3253:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"addressEq",{enumerable:!0,get:function(){return b.addressEq}}),Object.defineProperty(t,"addressToEvm",{enumerable:!0,get:function(){return r.addressToEvm}}),Object.defineProperty(t,"checkAddress",{enumerable:!0,get:function(){return i.checkAddress}}),Object.defineProperty(t,"checkAddressChecksum",{enumerable:!0,get:function(){return o.checkAddressChecksum}}),Object.defineProperty(t,"createKeyDerived",{enumerable:!0,get:function(){return s.createKeyDerived}}),Object.defineProperty(t,"createKeyMulti",{enumerable:!0,get:function(){return a.createKeyMulti}}),Object.defineProperty(t,"decodeAddress",{enumerable:!0,get:function(){return c.decodeAddress}}),Object.defineProperty(t,"deriveAddress",{enumerable:!0,get:function(){return f.deriveAddress}}),Object.defineProperty(t,"encodeAddress",{enumerable:!0,get:function(){return d.encodeAddress}}),Object.defineProperty(t,"encodeDerivedAddress",{enumerable:!0,get:function(){return u.encodeDerivedAddress}}),Object.defineProperty(t,"encodeMultiAddress",{enumerable:!0,get:function(){return l.encodeMultiAddress}}),Object.defineProperty(t,"evmToAddress",{enumerable:!0,get:function(){return h.evmToAddress}}),Object.defineProperty(t,"isAddress",{enumerable:!0,get:function(){return p.isAddress}}),Object.defineProperty(t,"setSS58Format",{enumerable:!0,get:function(){return y.setSS58Format}}),Object.defineProperty(t,"sortAddresses",{enumerable:!0,get:function(){return v.sortAddresses}}),Object.defineProperty(t,"validateAddress",{enumerable:!0,get:function(){return m.validateAddress}});var r=n(6913),i=n(8709),o=n(5023),a=n(5935),s=n(3262),c=n(8909),f=n(6780),d=n(3992),u=n(1377),l=n(9072),h=n(7019),b=n(3734),p=n(489),y=n(9852),v=n(6869),m=n(9612)},489:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isAddress=function(e,t,n){try{return(0,r.validateAddress)(e,t,n)}catch(e){return!1}};var r=n(9612)},3262:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createKeyDerived=function(e,t){return(0,i.blake2AsU8a)((0,r.u8aConcat)(s,(0,a.decodeAddress)(e),(0,r.bnToU8a)(t,o.BN_LE_16_OPTS)))};var r=n(9215),i=n(2376),o=n(9078),a=n(8909);const s=(0,r.stringToU8a)("modlpy/utilisuba")},5935:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createKeyMulti=function(e,t){return(0,i.blake2AsU8a)((0,r.u8aConcat)(s,(0,r.compactToU8a)(e.length),...(0,r.u8aSorted)(e.map(a.addressToU8a)),(0,r.bnToU8a)(t,o.BN_LE_16_OPTS)))};var r=n(9215),i=n(2376),o=n(9078),a=n(1881);const s=(0,r.stringToU8a)("modlpy/utilisuba")},9852:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setSS58Format=function(e){o.warn("Global setting of the ss58Format is deprecated and not recommended. Set format on the keyring (if used) or as pat of the address encode function"),i.defaults.prefix=e};var r=n(9215),i=n(6909);const o=(0,r.logger)("setSS58Format")},6869:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sortAddresses=function(e,t){return(0,r.u8aSorted)(e.map(o.addressToU8a)).map((e=>(0,i.encodeAddress)(e,t)))};var r=n(9215),i=n(3992),o=n(1881)},2705:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sshash=function(e){return(0,i.blake2AsU8a)((0,r.u8aConcat)(o,e),512)};var r=n(9215),i=n(2376);const o=(0,r.stringToU8a)("SS58PRE")},1881:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addressToU8a=function(e){return(0,r.decodeAddress)(e)};var r=n(8909)},9612:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateAddress=function(e,t,n){return!!(0,r.decodeAddress)(e,t,n)};var r=n(8909)},2330:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBase32=t.base32Validate=t.base32Encode=t.base32Decode=void 0;var r=n(4841),i=n(3896);const o="abcdefghijklmnopqrstuvwxyz234567",a={chars:o,coder:r.utils.chain(r.utils.radix2(5),r.utils.alphabet(o),{decode:e=>e.split(""),encode:e=>e.join("")}),ipfs:"b",type:"base32"},s=(0,i.createValidate)(a);t.base32Validate=s;const c=(0,i.createIs)(s);t.isBase32=c;const f=(0,i.createDecode)(a,s);t.base32Decode=f;const d=(0,i.createEncode)(a);t.base32Encode=d},3896:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createDecode=function(e,t){let{coder:n,ipfs:r}=e;return(e,i)=>(t(e,i),n.decode(r&&i?e.substr(1):e))},t.createEncode=function(e){let{coder:t,ipfs:n}=e;return(e,i)=>{const o=t.encode((0,r.u8aToU8a)(e));return n&&i?`${n}${o}`:o}},t.createIs=function(e){return(t,n)=>{try{return e(t,n)}catch(e){return!1}}},t.createValidate=function(e){let{chars:t,ipfs:n,type:i}=e;return(e,o)=>{(0,r.assert)(e&&"string"==typeof e,(()=>`Expected non-null, non-empty ${i} string input`)),n&&o&&(0,r.assert)(e[0]===n,(()=>`Expected ipfs-compatible ${i} to start with '${n}'`));for(let n=o?1:0;n<e.length;n++)(0,r.assert)(t.includes(e[n])||"="===e[n]&&(n===e.length-1||!t.includes(e[n+1])),(()=>`Invalid ${i} character "${e[n]}" (0x${e.charCodeAt(n).toString(16)}) at index ${n}`));return!0}};var r=n(9215)},6120:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"base32Decode",{enumerable:!0,get:function(){return r.base32Decode}}),Object.defineProperty(t,"base32Encode",{enumerable:!0,get:function(){return r.base32Encode}}),Object.defineProperty(t,"base32Validate",{enumerable:!0,get:function(){return r.base32Validate}}),Object.defineProperty(t,"isBase32",{enumerable:!0,get:function(){return r.isBase32}});var r=n(2330)},7141:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBase58=t.base58Validate=t.base58Encode=t.base58Decode=void 0;var r=n(4841),i=n(3896);const o={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:r.base58,ipfs:"z",type:"base58"},a=(0,i.createValidate)(o);t.base58Validate=a;const s=(0,i.createDecode)(o,a);t.base58Decode=s;const c=(0,i.createEncode)(o);t.base58Encode=c;const f=(0,i.createIs)(a);t.isBase58=f},7783:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"base58Decode",{enumerable:!0,get:function(){return r.base58Decode}}),Object.defineProperty(t,"base58Encode",{enumerable:!0,get:function(){return r.base58Encode}}),Object.defineProperty(t,"base58Validate",{enumerable:!0,get:function(){return r.base58Validate}}),Object.defineProperty(t,"isBase58",{enumerable:!0,get:function(){return r.isBase58}});var r=n(7141)},4019:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBase64=t.base64Validate=t.base64Encode=t.base64Decode=void 0;var r=n(4841),i=n(3896);const o={chars:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",coder:r.base64,type:"base64"},a=(0,i.createValidate)(o);t.base64Validate=a;const s=(0,i.createIs)(a);t.isBase64=s;const c=(0,i.createDecode)(o,a);t.base64Decode=c;const f=(0,i.createEncode)(o);t.base64Encode=f},164:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"base64Decode",{enumerable:!0,get:function(){return r.base64Decode}}),Object.defineProperty(t,"base64Encode",{enumerable:!0,get:function(){return r.base64Encode}}),Object.defineProperty(t,"base64Pad",{enumerable:!0,get:function(){return i.base64Pad}}),Object.defineProperty(t,"base64Trim",{enumerable:!0,get:function(){return o.base64Trim}}),Object.defineProperty(t,"base64Validate",{enumerable:!0,get:function(){return r.base64Validate}}),Object.defineProperty(t,"isBase64",{enumerable:!0,get:function(){return r.isBase64}});var r=n(4019),i=n(5504),o=n(2692)},5504:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.base64Pad=function(e){return e.padEnd(e.length+e.length%4,"=")}},2692:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.base64Trim=function(e){for(;e.length&&"="===e[e.length-1];)e=e.slice(0,-1);return e}},2376:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.blake2AsHex=void 0,t.blake2AsU8a=s;var r=n(9215),i=n(223),o=n(7671),a=n(2796);function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:256,n=arguments.length>2?arguments[2]:void 0,o=arguments.length>3?arguments[3]:void 0;const s=Math.ceil(t/8),c=(0,r.u8aToU8a)(e);return!r.hasBigInt||!o&&(0,i.isReady)()?(0,i.blake2b)(c,(0,r.u8aToU8a)(n),s):(0,a.blake2b)(c,{dkLen:s,key:n||void 0})}const c=(0,o.createAsHex)(s);t.blake2AsHex=c},7838:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"blake2AsHex",{enumerable:!0,get:function(){return r.blake2AsHex}}),Object.defineProperty(t,"blake2AsU8a",{enumerable:!0,get:function(){return r.blake2AsU8a}});var r=n(2376)},9078:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BN_LE_OPTS=t.BN_LE_512_OPTS=t.BN_LE_32_OPTS=t.BN_LE_256_OPTS=t.BN_LE_16_OPTS=t.BN_BE_32_OPTS=t.BN_BE_256_OPTS=void 0,t.BN_LE_OPTS={isLe:!0},t.BN_LE_16_OPTS={bitLength:16,isLe:!0},t.BN_BE_32_OPTS={bitLength:32,isLe:!1},t.BN_LE_32_OPTS={bitLength:32,isLe:!0},t.BN_BE_256_OPTS={bitLength:256,isLe:!1},t.BN_LE_256_OPTS={bitLength:256,isLe:!0},t.BN_LE_512_OPTS={bitLength:512,isLe:!0}},1243:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r={packageInfo:!0};Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return i.packageInfo}}),n(8766);var i=n(3725),o=n(3253);Object.keys(o).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===o[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}}))}));var a=n(6120);Object.keys(a).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===a[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}}))}));var s=n(7783);Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}));var c=n(164);Object.keys(c).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===c[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return c[e]}}))}));var f=n(7838);Object.keys(f).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===f[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return f[e]}}))}));var d=n(6053);Object.keys(d).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===d[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return d[e]}}))}));var u=n(717);Object.keys(u).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===u[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return u[e]}}))}));var l=n(3585);Object.keys(l).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===l[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return l[e]}}))}));var h=n(6786);Object.keys(h).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===h[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return h[e]}}))}));var b=n(8770);Object.keys(b).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===b[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return b[e]}}))}));var p=n(8495);Object.keys(p).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===p[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return p[e]}}))}));var y=n(2399);Object.keys(y).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===y[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return y[e]}}))}));var v=n(4610);Object.keys(v).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===v[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return v[e]}}))}));var m=n(9009);Object.keys(m).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===m[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return m[e]}}))}));var g=n(3403);Object.keys(g).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===g[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return g[e]}}))}));var w=n(6949);Object.keys(w).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===w[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return w[e]}}))}));var P=n(7212);Object.keys(P).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===P[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return P[e]}}))}));var x=n(8631);Object.keys(x).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===x[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return x[e]}}))}));var M=n(1731);Object.keys(M).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===M[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return M[e]}}))}));var O=n(6447);Object.keys(O).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===O[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return O[e]}}))}));var j=n(7139);Object.keys(j).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===j[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return j[e]}}))}));var k=n(7927);Object.keys(k).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===k[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return k[e]}}))}));var A=n(9247);Object.keys(A).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===A[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return A[e]}}))}));var T=n(4140);Object.keys(T).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===T[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return T[e]}}))}))},6053:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.cryptoIsReady=void 0,t.cryptoWaitReady=function(){return(0,r.waitReady)().then((()=>!0)).catch((e=>(console.error("Unable to initialize @polkadot/util-crypto",e),!1)))};var r=n(223);const i=r.isReady;t.cryptoIsReady=i},8766:(e,t,n)=>{"use strict";(0,n(6053).cryptoWaitReady)().catch((()=>{}))},6931:(e,t,n)=>{"use strict";var r=n(7988),i=n(9215),o=n(4081),a=n(3725);(0,i.detectPackage)(a.packageInfo,"/",[r.packageInfo,i.packageInfo,o.packageInfo])},2209:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.convertPublicKeyToCurve25519=function(e){return(0,o.assertReturn)(i.default.convertPublicKey(e),"Unable to convert publicKey to ed25519")},t.convertSecretKeyToCurve25519=function(e){return i.default.convertSecretKey(e)};var i=r(n(5678)),o=n(9215)},8076:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519DeriveHard=function(e,t){return(0,r.assert)((0,r.isU8a)(t)&&32===t.length,"Invalid chainCode passed to derive"),(0,i.blake2AsU8a)((0,r.u8aConcat)(o,e,t))};var r=n(9215),i=n(2376);const o=(0,r.compactAddLength)((0,r.stringToU8a)("Ed25519HDKD"))},717:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"convertPublicKeyToCurve25519",{enumerable:!0,get:function(){return r.convertPublicKeyToCurve25519}}),Object.defineProperty(t,"convertSecretKeyToCurve25519",{enumerable:!0,get:function(){return r.convertSecretKeyToCurve25519}}),Object.defineProperty(t,"ed25519DeriveHard",{enumerable:!0,get:function(){return i.ed25519DeriveHard}}),Object.defineProperty(t,"ed25519PairFromRandom",{enumerable:!0,get:function(){return o.ed25519PairFromRandom}}),Object.defineProperty(t,"ed25519PairFromSecret",{enumerable:!0,get:function(){return a.ed25519PairFromSecret}}),Object.defineProperty(t,"ed25519PairFromSeed",{enumerable:!0,get:function(){return s.ed25519PairFromSeed}}),Object.defineProperty(t,"ed25519PairFromString",{enumerable:!0,get:function(){return c.ed25519PairFromString}}),Object.defineProperty(t,"ed25519Sign",{enumerable:!0,get:function(){return f.ed25519Sign}}),Object.defineProperty(t,"ed25519Verify",{enumerable:!0,get:function(){return d.ed25519Verify}});var r=n(2209),i=n(8076),o=n(1902),a=n(7991),s=n(8497),c=n(3237),f=n(7293),d=n(3333)},1902:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519PairFromRandom=function(){return i.default.sign.keyPair()};var i=r(n(780))},7991:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519PairFromSecret=function(e){return i.default.sign.keyPair.fromSecretKey(e)};var i=r(n(780))},8497:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519PairFromSeed=function(e,t){if(!t&&(0,o.isReady)()){const t=(0,o.ed25519KeypairFromSeed)(e);return{publicKey:t.slice(32),secretKey:t.slice(0,64)}}return i.default.sign.keyPair.fromSeed(e)};var i=r(n(780)),o=n(223)},3237:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519PairFromString=function(e){return(0,o.ed25519PairFromSeed)((0,i.blake2AsU8a)((0,r.stringToU8a)(e),256))};var r=n(9215),i=n(2376),o=n(8497)},7293:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519Sign=function(e,t,n){let{publicKey:r,secretKey:s}=t;(0,o.assert)(s,"Expected a valid secretKey");const c=(0,o.u8aToU8a)(e);return!n&&(0,a.isReady)()?(0,a.ed25519Sign)(r,s.subarray(0,32),c):i.default.sign.detached(c,s)};var i=r(n(780)),o=n(9215),a=n(223)},3333:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.ed25519Verify=function(e,t,n,r){const s=(0,o.u8aToU8a)(e),c=(0,o.u8aToU8a)(n),f=(0,o.u8aToU8a)(t);return(0,o.assert)(32===c.length,(()=>`Invalid publicKey, received ${c.length}, expected 32`)),(0,o.assert)(64===f.length,(()=>`Invalid signature, received ${f.length} bytes, expected 64`)),!r&&(0,a.isReady)()?(0,a.ed25519Verify)(f,s,c):i.default.sign.detached.verify(s,f,c)};var i=r(n(780)),o=n(9215),a=n(223)},8437:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ethereumEncode=function(e){if(!e)return"0x";const t=(0,r.u8aToU8a)(e);(0,r.assert)([20,32,33,65].includes(t.length),"Invalid address or publicKey passed");const n=(0,r.u8aToHex)(([33,65].includes((s=t).length)&&(s=(0,i.keccakAsU8a)((0,o.secp256k1Expand)(s))),s.slice(-20)),-1,!1),a=(0,r.u8aToHex)((0,i.keccakAsU8a)(n),-1,!1);var s;let c="";for(let e=0;e<40;e++)c=`${c}${parseInt(a[e],16)>7?n[e].toUpperCase():n[e]}`;return`0x${c}`};var r=n(9215),i=n(2399),o=n(6447)},3585:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"ethereumEncode",{enumerable:!0,get:function(){return r.ethereumEncode}}),Object.defineProperty(t,"isEthereumAddress",{enumerable:!0,get:function(){return i.isEthereumAddress}}),Object.defineProperty(t,"isEthereumChecksum",{enumerable:!0,get:function(){return o.isEthereumChecksum}});var r=n(8437),i=n(6152),o=n(2264)},6152:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isEthereumAddress=function(e){return!(!e||42!==e.length||!(0,r.isHex)(e))&&(!(!/^(0x)?[0-9a-f]{40}$/.test(e)&&!/^(0x)?[0-9A-F]{40}$/.test(e))||(0,i.isEthereumChecksum)(e))};var r=n(9215),i=n(2264)},2264:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isEthereumChecksum=function(e){const t=e.replace("0x",""),n=(0,r.u8aToHex)((0,i.keccakAsU8a)(t.toLowerCase()),-1,!1);for(let e=0;e<40;e++)if((o=t[e])!==(parseInt(n[e],16)>7?o.toUpperCase():o.toLowerCase()))return!1;var o;return!0};var r=n(9215),i=n(2399)},5875:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hdEthereum=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const n=(0,o.hmacShaAsU8a)(c,e,512);let i=f(n.slice(0,32),n.slice(32));if(!t||"m"===t||"M"===t||"m'"===t||"M'"===t)return i;(0,r.assert)((0,s.hdValidatePath)(t),"Invalid derivation path");const a=t.split("/").slice(1);for(const e of a)i=d(i,parseInt(e,10)+(e.length>1&&e.endsWith("'")?s.HARDENED:0));return i};var r=n(9215),i=n(9078),o=n(8770),a=n(6447),s=n(2410);const c=(0,r.stringToU8a)("Bitcoin seed");function f(e,t){return{chainCode:t,publicKey:(0,a.secp256k1PairFromSeed)(e).publicKey,secretKey:e}}function d(e,t){const n=(0,r.bnToU8a)(t,i.BN_BE_32_OPTS),c=t>=s.HARDENED?(0,r.u8aConcat)(new Uint8Array(1),e.secretKey,n):(0,r.u8aConcat)(e.publicKey,n);try{const t=(0,o.hmacShaAsU8a)(e.chainCode,c,512);return f((0,a.secp256k1PrivateKeyTweakAdd)(e.secretKey,t.slice(0,32)),t.slice(32))}catch(n){return d(e,t+1)}}},6786:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"hdEthereum",{enumerable:!0,get:function(){return r.hdEthereum}}),Object.defineProperty(t,"hdLedger",{enumerable:!0,get:function(){return i.hdLedger}}),Object.defineProperty(t,"hdValidatePath",{enumerable:!0,get:function(){return o.hdValidatePath}});var r=n(5875),i=n(600),o=n(2410)},9441:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ledgerDerivePrivate=function(e,t){const n=e.subarray(0,32),a=e.subarray(32,64),s=e.subarray(64,96),c=(0,r.u8aConcat)([0],n,a,(0,r.bnToU8a)(t,i.BN_LE_32_OPTS)),f=(0,o.hmacShaAsU8a)(s,c,512);return c[0]=1,(0,r.u8aConcat)((0,r.bnToU8a)((0,r.u8aToBn)(n,i.BN_LE_OPTS).iadd((0,r.u8aToBn)(f.subarray(0,28),i.BN_LE_OPTS).imul(r.BN_EIGHT)),i.BN_LE_512_OPTS).subarray(0,32),(0,r.bnToU8a)((0,r.u8aToBn)(a,i.BN_LE_OPTS).iadd((0,r.u8aToBn)(f.subarray(32,64),i.BN_LE_OPTS)),i.BN_LE_512_OPTS).subarray(0,32),(0,o.hmacShaAsU8a)(s,c,512).subarray(32,64))};var r=n(9215),i=n(9078),o=n(8770)},600:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hdLedger=function(e,t){const n=e.split(" ").map((e=>e.trim())).filter((e=>e));(0,r.assert)([12,24,25].includes(n.length),"Expected a mnemonic with 24 words (or 25 including a password)");const[f,d]=25===n.length?[n.slice(0,24).join(" "),n[24]]:[n.join(" "),""];(0,r.assert)((0,o.mnemonicValidate)(f),"Invalid mnemonic passed to ledger derivation"),(0,r.assert)((0,a.hdValidatePath)(t),"Invalid derivation path");const u=t.split("/").slice(1);let l=(0,c.ledgerMaster)(f,d);for(const e of u){const t=parseInt(e.replace(/'$/,""),10);l=(0,s.ledgerDerivePrivate)(l,t<a.HARDENED?t+a.HARDENED:t)}return(0,i.ed25519PairFromSeed)(l.slice(0,32))};var r=n(9215),i=n(717),o=n(9009),a=n(2410),s=n(9441),c=n(8187)},8187:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ledgerMaster=function(e,t){const n=(0,o.mnemonicToSeedSync)(e,t),s=(0,i.hmacShaAsU8a)(a,new Uint8Array([1,...n]),256);let c;for(;!c||32&c[31];)c=(0,i.hmacShaAsU8a)(a,c||n,512);return c[0]&=248,c[31]&=127,c[31]|=64,(0,r.u8aConcat)(c,s)};var r=n(9215),i=n(8770),o=n(2273);const a="ed25519 seed"},2410:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HARDENED=void 0,t.hdValidatePath=function(e){if(!e.startsWith("m/"))return!1;const t=e.split("/").slice(1);for(const e of t){const t=/^\d+'?$/.test(e)?parseInt(e.replace(/'$/,""),10):Number.NaN;if(isNaN(t)||t>=n||t<0)return!1}return!0};const n=2147483648;t.HARDENED=n},7671:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createAsHex=function(e){return function(){return(0,r.u8aToHex)(e(...arguments))}},t.createBitHasher=function(e,t){return(n,r)=>t(n,e,r)};var r=n(9215)},8770:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"hmacSha256AsU8a",{enumerable:!0,get:function(){return r.hmacSha256AsU8a}}),Object.defineProperty(t,"hmacSha512AsU8a",{enumerable:!0,get:function(){return r.hmacSha512AsU8a}}),Object.defineProperty(t,"hmacShaAsU8a",{enumerable:!0,get:function(){return r.hmacShaAsU8a}});var r=n(2910)},2910:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hmacSha512AsU8a=t.hmacSha256AsU8a=void 0,t.hmacShaAsU8a=f;var r=n(9215),i=n(223),o=n(9828),a=n(3409),s=n(2828);function c(e){return(t,n,r)=>f(t,n,e,r)}function f(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:256,c=arguments.length>3?arguments[3]:void 0;const f=256===n,d=(0,r.u8aToU8a)(e);return!r.hasBigInt||!c&&(0,i.isReady)()?f?(0,i.hmacSha256)(d,t):(0,i.hmacSha512)(d,t):f?(0,o.hmac)(a.sha256,d,t):(0,o.hmac)(s.sha512,d,t)}const d=c(256);t.hmacSha256AsU8a=d;const u=c(512);t.hmacSha512AsU8a=u},4730:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(6931);var r=n(1243);Object.keys(r).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===r[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return r[e]}}))}))},3570:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SCRYPT_LENGTH=t.NONCE_LENGTH=t.ENCODING_VERSION=t.ENCODING_NONE=t.ENCODING=void 0,t.ENCODING=["scrypt","xsalsa20-poly1305"],t.ENCODING_NONE=["none"],t.ENCODING_VERSION="3",t.NONCE_LENGTH=24,t.SCRYPT_LENGTH=44},4350:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.jsonDecrypt=function(e,t){let{encoded:n,encoding:a}=e;return(0,r.assert)(n,"No encrypted data available to decode"),(0,o.jsonDecryptData)((0,r.isHex)(n)?(0,r.hexToU8a)(n):(0,i.base64Decode)(n),t,Array.isArray(a.type)?a.type:[a.type])};var r=n(9215),i=n(164),o=n(5830)},5830:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.jsonDecryptData=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a.ENCODING;(0,r.assert)(e,"No encrypted data available to decode"),(0,r.assert)(t||!n.includes("xsalsa20-poly1305"),"Password required to decode encrypted data");let s=e;if(t){let c;if(n.includes("scrypt")){const{params:n,salt:r}=(0,o.scryptFromU8a)(e);c=(0,o.scryptEncode)(t,r,n).password,e=e.subarray(a.SCRYPT_LENGTH)}else c=(0,r.stringToU8a)(t);s=(0,i.naclDecrypt)(e.subarray(a.NONCE_LENGTH),e.subarray(0,a.NONCE_LENGTH),(0,r.u8aFixLength)(c,256,!0))}return(0,r.assert)(s,"Unable to decode using the supplied passphrase"),s};var r=n(9215),i=n(6949),o=n(1731),a=n(3570)},3330:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.jsonEncrypt=function(e,t,n){let s=!1,c=e;if(n){const{params:e,password:t,salt:a}=(0,o.scryptEncode)(n),{encrypted:f,nonce:d}=(0,i.naclEncrypt)(c,t.subarray(0,32));s=!0,c=(0,r.u8aConcat)((0,o.scryptToU8a)(a,e),d,f)}return(0,a.jsonEncryptFormat)(c,t,s)};var r=n(9215),i=n(6949),o=n(1731),a=n(2777)},2777:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.jsonEncryptFormat=function(e,t,n){return{encoded:(0,r.base64Encode)(e),encoding:{content:t,type:n?i.ENCODING:i.ENCODING_NONE,version:i.ENCODING_VERSION}}};var r=n(164),i=n(3570)},8495:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"jsonDecrypt",{enumerable:!0,get:function(){return r.jsonDecrypt}}),Object.defineProperty(t,"jsonDecryptData",{enumerable:!0,get:function(){return i.jsonDecryptData}}),Object.defineProperty(t,"jsonEncrypt",{enumerable:!0,get:function(){return o.jsonEncrypt}}),Object.defineProperty(t,"jsonEncryptFormat",{enumerable:!0,get:function(){return a.jsonEncryptFormat}});var r=n(4350),i=n(5830),o=n(3330),a=n(2777)},1119:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keccakAsHex=t.keccak512AsU8a=t.keccak256AsU8a=void 0,t.keccakAsU8a=s;var r=n(9215),i=n(223),o=n(7671),a=n(9786);function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:256,n=arguments.length>2?arguments[2]:void 0;const o=256===t,s=(0,r.u8aToU8a)(e);return!r.hasBigInt||!n&&(0,i.isReady)()?o?(0,i.keccak256)(s):(0,i.keccak512)(s):o?(0,a.keccak_256)(s):(0,a.keccak_512)(s)}const c=(0,o.createBitHasher)(256,s);t.keccak256AsU8a=c;const f=(0,o.createBitHasher)(512,s);t.keccak512AsU8a=f;const d=(0,o.createAsHex)(s);t.keccakAsHex=d},2399:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"keccak256AsU8a",{enumerable:!0,get:function(){return r.keccak256AsU8a}}),Object.defineProperty(t,"keccak512AsU8a",{enumerable:!0,get:function(){return r.keccak512AsU8a}}),Object.defineProperty(t,"keccakAsHex",{enumerable:!0,get:function(){return r.keccakAsHex}}),Object.defineProperty(t,"keccakAsU8a",{enumerable:!0,get:function(){return r.keccakAsU8a}});var r=n(1119)},2103:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.DeriveJunction=void 0;var i=r(n(7509)),o=r(n(3399)),a=n(9215),s=n(2376),c=n(9078);const f=/^\d+$/;var d=(0,o.default)("chainCode"),u=(0,o.default)("isHard");class l{constructor(){Object.defineProperty(this,d,{writable:!0,value:new Uint8Array(32)}),Object.defineProperty(this,u,{writable:!0,value:!1})}static from(e){const t=new l,[n,r]=e.startsWith("/")?[e.substr(1),!0]:[e,!1];return t.soft(f.test(n)?new a.BN(n,10):n),r?t.harden():t}get chainCode(){return(0,i.default)(this,d)[d]}get isHard(){return(0,i.default)(this,u)[u]}get isSoft(){return!(0,i.default)(this,u)[u]}hard(e){return this.soft(e).harden()}harden(){return(0,i.default)(this,u)[u]=!0,this}soft(e){return(0,a.isNumber)(e)||(0,a.isBn)(e)||(0,a.isBigInt)(e)?this.soft((0,a.bnToU8a)(e,c.BN_LE_256_OPTS)):(0,a.isHex)(e)?this.soft((0,a.hexToU8a)(e)):(0,a.isString)(e)?this.soft((0,a.compactAddLength)((0,a.stringToU8a)(e))):e.length>32?this.soft((0,s.blake2AsU8a)(e)):((0,i.default)(this,d)[d].fill(0),(0,i.default)(this,d)[d].set(e,0),this)}soften(){return(0,i.default)(this,u)[u]=!1,this}}t.DeriveJunction=l},3246:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyExtractPath=function(e){const t=e.match(o),n=[];let a="";if(t){a=t.join("");for(const e of t)n.push(i.DeriveJunction.from(e.substr(1)))}return(0,r.assert)(a===e,(()=>`Re-constructed path "${a}" does not match input`)),{parts:t,path:n}};var r=n(9215),i=n(2103);const o=/\/(\/?)([^/]+)/g},6463:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyExtractSuri=function(e){const t=e.match(o);(0,r.assert)(!(0,r.isNull)(t),"Unable to match provided value to a secret URI");const[,n,,a,,,s]=t,{path:c}=(0,i.keyExtractPath)(a);return{derivePath:a,password:s,path:c,phrase:n}};var r=n(9215),i=n(3246);const o=/^(\w+( \w+)*)((\/\/?[^/]+)*)(\/\/\/(.*))?$/},1035:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyFromPath=function(e,t,n){const r=a[n];let i=e;for(const e of t)i=r(i,e);return i};var r=n(225),i=n(1380),o=n(1606);const a={ecdsa:r.keyHdkdEcdsa,ed25519:i.keyHdkdEd25519,ethereum:r.keyHdkdEcdsa,sr25519:o.keyHdkdSr25519}},4723:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createSeedDeriveFn=function(e,t){return(n,i)=>{let{chainCode:o,isHard:a}=i;return(0,r.assert)(a,"A soft key was found in the path and is not supported"),e(t(n.secretKey.subarray(0,32),o))}};var r=n(9215)},225:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyHdkdEcdsa=void 0;var r=n(8641),i=n(3095);const o=(0,n(4723).createSeedDeriveFn)(i.secp256k1PairFromSeed,r.secp256k1DeriveHard);t.keyHdkdEcdsa=o},1380:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyHdkdEd25519=void 0;var r=n(717);const i=(0,n(4723).createSeedDeriveFn)(r.ed25519PairFromSeed,r.ed25519DeriveHard);t.keyHdkdEd25519=i},1606:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.keyHdkdSr25519=function(e,t){let{chainCode:n,isSoft:o}=t;return o?(0,i.sr25519DeriveSoft)(e,n):(0,r.sr25519DeriveHard)(e,n)};var r=n(853),i=n(9351)},4610:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"keyExtractPath",{enumerable:!0,get:function(){return r.keyExtractPath}}),Object.defineProperty(t,"keyExtractSuri",{enumerable:!0,get:function(){return i.keyExtractSuri}}),Object.defineProperty(t,"keyFromPath",{enumerable:!0,get:function(){return o.keyFromPath}}),Object.defineProperty(t,"keyHdkdEcdsa",{enumerable:!0,get:function(){return c.keyHdkdEcdsa}}),Object.defineProperty(t,"keyHdkdEd25519",{enumerable:!0,get:function(){return a.keyHdkdEd25519}}),Object.defineProperty(t,"keyHdkdSr25519",{enumerable:!0,get:function(){return s.keyHdkdSr25519}});var r=n(3246),i=n(6463),o=n(1035),a=n(1380),s=n(1606),c=n(225)},8894:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n="abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo".split("\n");t.default=n},2273:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.entropyToMnemonic=y,t.generateMnemonic=function(e){return e=e||128,(0,i.assert)(e%32==0,d),y((0,a.randomAsU8a)(e/8))},t.mnemonicToEntropy=p,t.mnemonicToSeedSync=function(e,t){return(0,o.pbkdf2Encode)((0,i.stringToU8a)(u(e)),(0,i.stringToU8a)(`mnemonic${u(t)}`)).password},t.validateMnemonic=function(e){try{p(e)}catch(e){return!1}return!0};var i=n(9215),o=n(7212),a=n(8631),s=n(7139),c=r(n(8894));const f="Invalid mnemonic",d="Invalid entropy";function u(e){return(e||"").normalize("NFKD")}function l(e){return parseInt(e,2)}function h(e){return e.map((e=>e.toString(2).padStart(8,"0"))).join("")}function b(e){return h(Array.from((0,s.sha256AsU8a)(e))).slice(0,8*e.length/32)}function p(e){var t;const n=u(e).split(" ");(0,i.assert)(n.length%3==0,f);const r=n.map((e=>{const t=c.default.indexOf(e);return(0,i.assert)(-1!==t,f),t.toString(2).padStart(11,"0")})).join(""),o=32*Math.floor(r.length/33),a=r.slice(0,o),s=r.slice(o),h=null===(t=a.match(/(.{1,8})/g))||void 0===t?void 0:t.map(l);(0,i.assert)(h&&h.length%4==0&&h.length>=16&&h.length<=32,d);const p=(0,i.u8aToU8a)(h),y=b(p);return(0,i.assert)(y===s,"Invalid mnemonic checksum"),p}function y(e){return(0,i.assert)(e.length%4==0&&e.length>=16&&e.length<=32,d),(h(Array.from(e))+b(e)).match(/(.{1,11})/g).map((e=>c.default[l(e)])).join(" ")}},5028:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicGenerate=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:12,t=arguments.length>1?arguments[1]:void 0;return!r.hasBigInt||!t&&(0,i.isReady)()?(0,i.bip39Generate)(e):(0,o.generateMnemonic)(a[e])};var r=n(9215),i=n(223),o=n(2273);const a={12:128,15:160,18:192,21:224,24:256}},9009:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"mnemonicGenerate",{enumerable:!0,get:function(){return r.mnemonicGenerate}}),Object.defineProperty(t,"mnemonicToEntropy",{enumerable:!0,get:function(){return i.mnemonicToEntropy}}),Object.defineProperty(t,"mnemonicToLegacySeed",{enumerable:!0,get:function(){return o.mnemonicToLegacySeed}}),Object.defineProperty(t,"mnemonicToMiniSecret",{enumerable:!0,get:function(){return a.mnemonicToMiniSecret}}),Object.defineProperty(t,"mnemonicValidate",{enumerable:!0,get:function(){return s.mnemonicValidate}});var r=n(5028),i=n(7958),o=n(3326),a=n(1305),s=n(9621)},7958:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicToEntropy=function(e,t){return!r.hasBigInt||!t&&(0,i.isReady)()?(0,i.bip39ToEntropy)(e):(0,o.mnemonicToEntropy)(e)};var r=n(9215),i=n(223),o=n(2273)},3326:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicToLegacySeed=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32;return(0,r.assert)((0,a.mnemonicValidate)(e),"Invalid bip39 mnemonic specified"),(0,r.assert)([32,64].includes(s),(()=>`Invalid seed length ${s}, expected 32 or 64`)),32===s?!r.hasBigInt||!n&&(0,i.isReady)()?(0,i.bip39ToSeed)(e,t):(0,o.mnemonicToSeedSync)(e,t).subarray(0,32):(0,o.mnemonicToSeedSync)(e,t)};var r=n(9215),i=n(223),o=n(2273),a=n(9621)},1305:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicToMiniSecret=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0;if((0,r.assert)((0,s.mnemonicValidate)(e),"Invalid bip39 mnemonic specified"),!n&&(0,i.isReady)())return(0,i.bip39ToMiniSecret)(e,t);const c=(0,a.mnemonicToEntropy)(e),f=(0,r.stringToU8a)(`mnemonic${t}`);return(0,o.pbkdf2Encode)(c,f).password.slice(0,32)};var r=n(9215),i=n(223),o=n(7212),a=n(7958),s=n(9621)},9621:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mnemonicValidate=function(e,t){return!r.hasBigInt||!t&&(0,i.isReady)()?(0,i.bip39Validate)(e):(0,o.validateMnemonic)(e)};var r=n(9215),i=n(223),o=n(2273)},1647:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.naclBoxPairFromSecret=function(e){return i.default.box.keyPair.fromSecretKey(e.slice(0,32))};var i=r(n(780))},5313:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.naclDecrypt=function(e,t,n){return i.default.secretbox.open(e,t,n)||null};var i=r(n(780))},2130:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.naclEncrypt=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:(0,o.randomAsU8a)(24);return{encrypted:i.default.secretbox(e,n,t),nonce:n}};var i=r(n(780)),o=n(3676)},6949:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"naclBoxPairFromSecret",{enumerable:!0,get:function(){return o.naclBoxPairFromSecret}}),Object.defineProperty(t,"naclDecrypt",{enumerable:!0,get:function(){return r.naclDecrypt}}),Object.defineProperty(t,"naclEncrypt",{enumerable:!0,get:function(){return i.naclEncrypt}}),Object.defineProperty(t,"naclOpen",{enumerable:!0,get:function(){return a.naclOpen}}),Object.defineProperty(t,"naclSeal",{enumerable:!0,get:function(){return s.naclSeal}});var r=n(5313),i=n(2130),o=n(1647),a=n(7557),s=n(1032)},7557:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.naclOpen=function(e,t,n,r){return i.default.box.open(e,t,n,r)||null};var i=r(n(780))},1032:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.naclSeal=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:(0,o.randomAsU8a)(24);return{nonce:r,sealed:i.default.box(e,r,n,t)}};var i=r(n(780)),o=n(3676)},3403:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(9502);Object.keys(r).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===r[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return r[e]}}))}))},6658:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SIGMA=t.BLAKE2=void 0;var r=n(1998);const i=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);t.SIGMA=i;class o extends r.Hash{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=arguments.length>3?arguments[3]:void 0,o=arguments.length>4?arguments[4]:void 0,a=arguments.length>5?arguments[5]:void 0;if(super(),this.blockLen=e,this.outputLen=t,this.buffer=void 0,this.buffer32=void 0,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,(0,r.assertNumber)(e),(0,r.assertNumber)(t),(0,r.assertNumber)(i),t<0||t>i)throw new Error("Blake2: outputLen bigger than keyLen");if(void 0!==n.key&&(n.key.length<1||n.key.length>i))throw new Error(`Key should be up 1..${i} byte long or undefined`);if(void 0!==n.salt&&n.salt.length!==o)throw new Error(`Salt should be ${o} byte long or undefined`);if(void 0!==n.personalization&&n.personalization.length!==a)throw new Error(`Personalization should be ${a} byte long or undefined`);this.buffer32=(0,r.u32)(this.buffer=new Uint8Array(e))}update(e){if(this.destroyed)throw new Error("instance is destroyed");const{finished:t,blockLen:n,buffer:i,buffer32:o}=this;if(t)throw new Error("digest() was already called");const a=(e=(0,r.toBytes)(e)).length;for(let t=0;t<a;){this.pos===n&&(this.compress(o,0,!1),this.pos=0);const r=Math.min(n-this.pos,a-t),s=e.byteOffset+t;if(r!==n||s%4||!(t+r<a))i.set(e.subarray(t,t+r),this.pos),this.pos+=r,this.length+=r,t+=r;else{const r=new Uint32Array(e.buffer,s,Math.floor((a-t)/4));for(let e=0;t+n<a;e+=o.length,t+=n)this.length+=n,this.compress(r,e,!1)}}return this}digestInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array)||e.length<this.outputLen)throw new Error("_Blake2: Invalid output buffer");const{finished:t,pos:n,buffer32:i}=this;if(t)throw new Error("digest() was already called");this.finished=!0,this.buffer.subarray(n).fill(0),this.compress(i,0,!0);const o=(0,r.u32)(e);this.get().forEach(((e,t)=>o[t]=e))}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){const{buffer:t,length:n,finished:r,destroyed:i,outputLen:o,pos:a}=this;return e||(e=new this.constructor({dkLen:o})),e.set(...this.get()),e.length=n,e.finished=r,e.destroyed=i,e.outputLen=o,e.buffer.set(t),e.pos=a,e}}t.BLAKE2=o},742:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SHA2=void 0;var r=n(1998);const i=(0,r._n)(32),o=(0,r._n)(4294967295);class a extends r.Hash{constructor(e,t,n,i){super(),this.blockLen=e,this.outputLen=t,this.padOffset=n,this.isLE=i,this.buffer=void 0,this.view=void 0,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=(0,r.createView)(this.buffer)}update(e){if(this.destroyed)throw new Error("instance is destroyed");const{view:t,buffer:n,blockLen:i,finished:o}=this;if(o)throw new Error("digest() was already called");const a=(e=(0,r.toBytes)(e)).length;for(let o=0;o<a;){const s=Math.min(i-this.pos,a-o);if(s!==i)n.set(e.subarray(o,o+s),this.pos),this.pos+=s,o+=s,this.pos===i&&(this.process(t,0),this.pos=0);else{const t=(0,r.createView)(e);for(;i<=a-o;o+=i)this.process(t,o)}}return this.length+=e.length,this.roundClean(),this}digestInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array)||e.length<this.outputLen)throw new Error("_Sha2: Invalid output buffer");if(this.finished)throw new Error("digest() was already called");this.finished=!0;const{buffer:t,view:n,blockLen:a,isLE:s}=this;let{pos:c}=this;t[c++]=128,this.buffer.subarray(c).fill(0),this.padOffset>a-c&&(this.process(n,0),c=0);for(let e=c;e<a;e++)t[e]=0;!function(e,t,n,r){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,n,r);const a=Number(n>>i&o),s=Number(n&o),[c,f]=r?[4,0]:[0,4];e.setUint32(t+c,a,r),e.setUint32(t+f,s,r)}(n,a-8,BigInt(8*this.length),s),this.process(n,0);const f=(0,r.createView)(e);this.get().forEach(((e,t)=>f.setUint32(4*t,e,s)))}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:n,length:r,finished:i,destroyed:o,pos:a}=this;return e.length=r,e.pos=a,e.finished=i,e.destroyed=o,r%t&&e.buffer.set(n),e}}t.SHA2=a},1659:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.add=function(e,t,n,r){const i=(t>>>0)+(r>>>0);return{h:e+n+(i/2**32|0)|0,l:0|i}},t.add5L=t.add5H=t.add4L=t.add4H=t.add3L=t.add3H=void 0,t.fromBig=a,t.shrSL=t.shrSH=t.rotrSL=t.rotrSH=t.rotrBL=t.rotrBH=t.rotr32L=t.rotr32H=t.rotlSL=t.rotlSH=t.rotlBL=t.rotlBH=void 0,t.split=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],[n,r]=[new Uint32Array(e.length),new Uint32Array(e.length)];for(let i=0;i<e.length;i++){const{h:o,l:s}=a(e[i],t);[n[i],r[i]]=[o,s]}return[n,r]},t.toBig=void 0;var r=n(1998);const i=(0,r._n)(2**32-1),o=(0,r._n)(32);function a(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return t?{h:Number(e&i),l:Number(e>>o&i)}:{h:0|Number(e>>o&i),l:0|Number(e&i)}}t.toBig=(e,t)=>BigInt(e>>>0)<<o|BigInt(t>>>0),t.shrSH=(e,t,n)=>e>>>n,t.shrSL=(e,t,n)=>e<<32-n|t>>>n,t.rotrSH=(e,t,n)=>e>>>n|t<<32-n,t.rotrSL=(e,t,n)=>e<<32-n|t>>>n,t.rotrBH=(e,t,n)=>e<<64-n|t>>>n-32,t.rotrBL=(e,t,n)=>e>>>n-32|t<<64-n,t.rotr32H=(e,t)=>t,t.rotr32L=(e,t)=>e,t.rotlSH=(e,t,n)=>e<<n|t>>>32-n,t.rotlSL=(e,t,n)=>t<<n|e>>>32-n,t.rotlBH=(e,t,n)=>t<<n-32|e>>>64-n,t.rotlBL=(e,t,n)=>e<<n-32|t>>>64-n,t.add3L=(e,t,n)=>(e>>>0)+(t>>>0)+(n>>>0),t.add3H=(e,t,n,r)=>t+n+r+(e/2**32|0)|0,t.add4L=(e,t,n,r)=>(e>>>0)+(t>>>0)+(n>>>0)+(r>>>0),t.add4H=(e,t,n,r,i)=>t+n+r+i+(e/2**32|0)|0,t.add5L=(e,t,n,r,i)=>(e>>>0)+(t>>>0)+(n>>>0)+(r>>>0)+(i>>>0),t.add5H=(e,t,n,r,i,o)=>t+n+r+i+o+(e/2**32|0)|0},2796:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.blake2b=void 0;var r=s(n(6658)),i=s(n(1659)),o=n(1998);function a(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(a=function(e){return e?n:t})(e)}function s(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var n=a(t);if(n&&n.has(e))return n.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var s=i?Object.getOwnPropertyDescriptor(e,o):null;s&&(s.get||s.set)?Object.defineProperty(r,o,s):r[o]=e[o]}return r.default=e,n&&n.set(e,r),r}const c=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),f=new Uint32Array(32);function d(e,t,n,r,o,a){const s=o[a],c=o[a+1];let d=f[2*e],u=f[2*e+1],l=f[2*t],h=f[2*t+1],b=f[2*n],p=f[2*n+1],y=f[2*r],v=f[2*r+1],m=i.add3L(d,l,s);u=i.add3H(m,u,h,c),d=0|m,({Dh:v,Dl:y}={Dh:v^u,Dl:y^d}),({Dh:v,Dl:y}={Dh:i.rotr32H(v,y),Dl:i.rotr32L(v,y)}),({h:p,l:b}=i.add(p,b,v,y)),({Bh:h,Bl:l}={Bh:h^p,Bl:l^b}),({Bh:h,Bl:l}={Bh:i.rotrSH(h,l,24),Bl:i.rotrSL(h,l,24)}),f[2*e]=d,f[2*e+1]=u,f[2*t]=l,f[2*t+1]=h,f[2*n]=b,f[2*n+1]=p,f[2*r]=y,f[2*r+1]=v}function u(e,t,n,r,o,a){const s=o[a],c=o[a+1];let d=f[2*e],u=f[2*e+1],l=f[2*t],h=f[2*t+1],b=f[2*n],p=f[2*n+1],y=f[2*r],v=f[2*r+1],m=i.add3L(d,l,s);u=i.add3H(m,u,h,c),d=0|m,({Dh:v,Dl:y}={Dh:v^u,Dl:y^d}),({Dh:v,Dl:y}={Dh:i.rotrSH(v,y,16),Dl:i.rotrSL(v,y,16)}),({h:p,l:b}=i.add(p,b,v,y)),({Bh:h,Bl:l}={Bh:h^p,Bl:l^b}),({Bh:h,Bl:l}={Bh:i.rotrBH(h,l,63),Bl:i.rotrBL(h,l,63)}),f[2*e]=d,f[2*e+1]=u,f[2*t]=l,f[2*t+1]=h,f[2*n]=b,f[2*n+1]=p,f[2*r]=y,f[2*r+1]=v}class l extends r.BLAKE2{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(128,void 0===e.dkLen?64:e.dkLen,e,64,16,16),this.v0l=0|c[0],this.v0h=0|c[1],this.v1l=0|c[2],this.v1h=0|c[3],this.v2l=0|c[4],this.v2h=0|c[5],this.v3l=0|c[6],this.v3h=0|c[7],this.v4l=0|c[8],this.v4h=0|c[9],this.v5l=0|c[10],this.v5h=0|c[11],this.v6l=0|c[12],this.v6h=0|c[13],this.v7l=0|c[14],this.v7h=0|c[15];const t=e.key?e.key.length:0;if(this.v0l^=this.outputLen|t<<8|65536|1<<24,e.salt){const t=(0,o.u32)((0,o.toBytes)(e.salt));this.v4l^=t[0],this.v4h^=t[1],this.v5l^=t[2],this.v5h^=t[3]}if(e.personalization){const t=(0,o.u32)((0,o.toBytes)(e.personalization));this.v6l^=t[0],this.v6h^=t[1],this.v7l^=t[2],this.v7h^=t[3]}if(e.key){const t=new Uint8Array(this.blockLen);t.set((0,o.toBytes)(e.key)),this.update(t)}}get(){let{v0l:e,v0h:t,v1l:n,v1h:r,v2l:i,v2h:o,v3l:a,v3h:s,v4l:c,v4h:f,v5l:d,v5h:u,v6l:l,v6h:h,v7l:b,v7h:p}=this;return[e,t,n,r,i,o,a,s,c,f,d,u,l,h,b,p]}set(e,t,n,r,i,o,a,s,c,f,d,u,l,h,b,p){this.v0l=0|e,this.v0h=0|t,this.v1l=0|n,this.v1h=0|r,this.v2l=0|i,this.v2h=0|o,this.v3l=0|a,this.v3h=0|s,this.v4l=0|c,this.v4h=0|f,this.v5l=0|d,this.v5h=0|u,this.v6l=0|l,this.v6h=0|h,this.v7l=0|b,this.v7h=0|p}compress(e,t,n){this.get().forEach(((e,t)=>f[t]=e)),f.set(c,16);let{h:o,l:a}=i.fromBig(BigInt(this.length));f[24]=c[8]^a,f[25]=c[9]^o,n&&(f[28]=~f[28],f[29]=~f[29]);let s=0;const l=r.SIGMA;for(let n=0;n<12;n++)d(0,4,8,12,e,t+2*l[s++]),u(0,4,8,12,e,t+2*l[s++]),d(1,5,9,13,e,t+2*l[s++]),u(1,5,9,13,e,t+2*l[s++]),d(2,6,10,14,e,t+2*l[s++]),u(2,6,10,14,e,t+2*l[s++]),d(3,7,11,15,e,t+2*l[s++]),u(3,7,11,15,e,t+2*l[s++]),d(0,5,10,15,e,t+2*l[s++]),u(0,5,10,15,e,t+2*l[s++]),d(1,6,11,12,e,t+2*l[s++]),u(1,6,11,12,e,t+2*l[s++]),d(2,7,8,13,e,t+2*l[s++]),u(2,7,8,13,e,t+2*l[s++]),d(3,4,9,14,e,t+2*l[s++]),u(3,4,9,14,e,t+2*l[s++]);this.v0l^=f[0]^f[16],this.v0h^=f[1]^f[17],this.v1l^=f[2]^f[18],this.v1h^=f[3]^f[19],this.v2l^=f[4]^f[20],this.v2h^=f[5]^f[21],this.v3l^=f[6]^f[22],this.v3h^=f[7]^f[23],this.v4l^=f[8]^f[24],this.v4h^=f[9]^f[25],this.v5l^=f[10]^f[26],this.v5h^=f[11]^f[27],this.v6l^=f[12]^f[28],this.v6h^=f[13]^f[29],this.v7l^=f[14]^f[30],this.v7h^=f[15]^f[31],f.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const h=(0,o.wrapConstructorWithOpts)((e=>new l(e)));t.blake2b=h},9828:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hmac=void 0;var r=n(1998);class i extends r.Hash{constructor(e,t){super(),this.oHash=void 0,this.iHash=void 0,this.blockLen=void 0,this.outputLen=void 0,this.finished=!1,this.destroyed=!1,(0,r.assertHash)(e);const n=(0,r.toBytes)(t);if(this.iHash=e.create(),!(this.iHash instanceof r.Hash))throw new TypeError("Expected instance of class which extends utils.Hash");const i=this.blockLen=this.iHash.blockLen;this.outputLen=this.iHash.outputLen;const o=new Uint8Array(i);o.set(n.length>this.iHash.blockLen?e.create().update(n).digest():n);for(let e=0;e<o.length;e++)o[e]^=54;this.iHash.update(o),this.oHash=e.create();for(let e=0;e<o.length;e++)o[e]^=106;this.oHash.update(o),o.fill(0)}update(e){if(this.destroyed)throw new Error("instance is destroyed");return this.iHash.update(e),this}digestInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array)||e.length!==this.outputLen)throw new Error("HMAC: Invalid output buffer");if(this.finished)throw new Error("digest() was already called");this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:n,finished:r,destroyed:i,blockLen:o,outputLen:a}=this;return(e=e).finished=r,e.destroyed=i,e.blockLen=o,e.outputLen=a,e.oHash=t._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const o=(e,t,n)=>new i(e,t).update(n).digest();t.hmac=o,o.init=o.create=(e,t)=>new i(e,t)},838:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.pbkdf2=function(e,t,n,r){const{c:s,dkLen:c,DK:f,PRF:d,PRFSalt:u}=o(e,t,n,r);let l;const h=new Uint8Array(4),b=(0,i.createView)(h),p=new Uint8Array(d.outputLen);for(let e=1,t=0;t<c;e++,t+=d.outputLen){const n=f.subarray(t,t+d.outputLen);b.setInt32(0,e,!1),(l=u._cloneInto(l)).update(h).digestInto(p),n.set(p.subarray(0,n.length));for(let e=1;e<s;e++){d._cloneInto(l).update(p).digestInto(p);for(let e=0;e<n.length;e++)n[e]^=p[e]}}return a(d,u,f,l,p)},t.pbkdf2Async=async function(e,t,n,r){const{c:s,dkLen:c,asyncTick:f,DK:d,PRF:u,PRFSalt:l}=o(e,t,n,r);let h;const b=new Uint8Array(4),p=(0,i.createView)(b),y=new Uint8Array(u.outputLen);for(let e=1,t=0;t<c;e++,t+=u.outputLen){const n=d.subarray(t,t+u.outputLen);p.setInt32(0,e,!1),(h=l._cloneInto(h)).update(b).digestInto(y),n.set(y.subarray(0,n.length)),await(0,i.asyncLoop)(s-1,f,(e=>{u._cloneInto(h).update(y).digestInto(y);for(let e=0;e<n.length;e++)n[e]^=y[e]}))}return a(u,l,d,h,y)};var r=n(9828),i=n(1998);function o(e,t,n,o){(0,i.assertHash)(e);const a=(0,i.checkOpts)({dkLen:32,asyncTick:10},o),{c:s,dkLen:c,asyncTick:f}=a;if((0,i.assertNumber)(s),(0,i.assertNumber)(c),(0,i.assertNumber)(f),s<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const d=(0,i.toBytes)(t),u=(0,i.toBytes)(n),l=new Uint8Array(c),h=r.hmac.init(e,d),b=h._cloneInto().update(u);return{c:s,dkLen:c,asyncTick:f,DK:l,PRF:h,PRFSalt:b}}function a(e,t,n,r,i){return e.destroy(),t.destroy(),r&&r.destroy(),i.fill(0),n}},4055:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scrypt=function(e,t,n){const{N:r,r:i,p:o,dkLen:a,blockSize32:s,V:u,B32:l,B:h,tmp:b,blockMixCb:p}=f(e,t,n);for(let e=0;e<o;e++){const t=s*e;for(let e=0;e<s;e++)u[e]=l[t+e];for(let e=0,t=0;e<r-1;e++)c(u,t,u,t+=s,i),p();c(u,(r-1)*s,l,t,i),p();for(let e=0;e<r;e++){const e=l[t+s-16]%r;for(let n=0;n<s;n++)b[n]=l[t+n]^u[e*s+n];c(b,0,l,t,i),p()}}return d(e,a,h,u,b)},t.scryptAsync=async function(e,t,n){const{N:r,r:i,p:a,dkLen:s,blockSize32:u,V:l,B32:h,B:b,tmp:p,blockMixCb:y,asyncTick:v}=f(e,t,n);for(let e=0;e<a;e++){const t=u*e;for(let e=0;e<u;e++)l[e]=h[t+e];let n=0;await(0,o.asyncLoop)(r-1,v,(e=>{c(l,n,l,n+=u,i),y()})),c(l,(r-1)*u,h,t,i),y(),await(0,o.asyncLoop)(r,v,(e=>{const n=h[t+u-16]%r;for(let e=0;e<u;e++)p[e]=h[t+e]^l[n*u+e];c(p,0,h,t,i),y()}))}return d(e,s,b,l,p)};var r=n(3409),i=n(838),o=n(1998);const a=(e,t)=>e<<t|e>>>32-t;function s(e,t,n,r,i,o){let s=e[t++]^n[r++],c=e[t++]^n[r++],f=e[t++]^n[r++],d=e[t++]^n[r++],u=e[t++]^n[r++],l=e[t++]^n[r++],h=e[t++]^n[r++],b=e[t++]^n[r++],p=e[t++]^n[r++],y=e[t++]^n[r++],v=e[t++]^n[r++],m=e[t++]^n[r++],g=e[t++]^n[r++],w=e[t++]^n[r++],P=e[t++]^n[r++],x=e[t++]^n[r++],M=s,O=c,j=f,k=d,A=u,T=l,E=h,z=b,L=p,N=y,S=v,U=m,H=g,I=w,B=P,D=x;for(let e=0;e<8;e+=2)A^=a(M+H|0,7),L^=a(A+M|0,9),H^=a(L+A|0,13),M^=a(H+L|0,18),N^=a(T+O|0,7),I^=a(N+T|0,9),O^=a(I+N|0,13),T^=a(O+I|0,18),B^=a(S+E|0,7),j^=a(B+S|0,9),E^=a(j+B|0,13),S^=a(E+j|0,18),k^=a(D+U|0,7),z^=a(k+D|0,9),U^=a(z+k|0,13),D^=a(U+z|0,18),O^=a(M+k|0,7),j^=a(O+M|0,9),k^=a(j+O|0,13),M^=a(k+j|0,18),E^=a(T+A|0,7),z^=a(E+T|0,9),A^=a(z+E|0,13),T^=a(A+z|0,18),U^=a(S+N|0,7),L^=a(U+S|0,9),N^=a(L+U|0,13),S^=a(N+L|0,18),H^=a(D+B|0,7),I^=a(H+D|0,9),B^=a(I+H|0,13),D^=a(B+I|0,18);i[o++]=s+M|0,i[o++]=c+O|0,i[o++]=f+j|0,i[o++]=d+k|0,i[o++]=u+A|0,i[o++]=l+T|0,i[o++]=h+E|0,i[o++]=b+z|0,i[o++]=p+L|0,i[o++]=y+N|0,i[o++]=v+S|0,i[o++]=m+U|0,i[o++]=g+H|0,i[o++]=w+I|0,i[o++]=P+B|0,i[o++]=x+D|0}function c(e,t,n,r,i){let[o,a]=[r+0,r+16*i];for(let r=0;r<16;r++)n[a+r]=e[t+16*(2*i-1)+r];for(let r=0;r<i;r++,o+=16,t+=16)s(n,a,e,t,n,o),r>0&&(a+=16),s(n,o,e,t+=16,n,a)}function f(e,t,n){const a=(0,o.checkOpts)({dkLen:32,asyncTick:10,maxmem:1073742848},n),{N:s,r:c,p:f,dkLen:d,asyncTick:u,maxmem:l,onProgress:h}=a;if((0,o.assertNumber)(s),(0,o.assertNumber)(c),(0,o.assertNumber)(f),(0,o.assertNumber)(d),(0,o.assertNumber)(u),(0,o.assertNumber)(l),void 0!==h&&"function"!=typeof h)throw new Error("progressCb should be function");const b=128*c,p=b/4;if(s<=1||0!=(s&s-1)||s>=2**(b/8)||s>2**32)throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(f<0||f>137438953440/b)throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(d<0||d>137438953440)throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");const y=b*(s+f);if(y>l)throw new Error(`Scrypt: parameters too large, ${y} (128 * r * (N + p)) > ${l} (maxmem)`);const v=(0,i.pbkdf2)(r.sha256,e,t,{c:1,dkLen:b*f}),m=(0,o.u32)(v),g=(0,o.u32)(new Uint8Array(b*s)),w=(0,o.u32)(new Uint8Array(b));let P=()=>{};if(h){const e=2*s*f,t=Math.max(Math.floor(e/1e4),1);let n=0;P=()=>{n++,!h||n%t&&n!==e||h(n/e)}}return{N:s,r:c,p:f,dkLen:d,blockSize32:p,V:g,B32:m,B:v,tmp:w,blockMixCb:P,asyncTick:u}}function d(e,t,n,o,a){const s=(0,i.pbkdf2)(r.sha256,e,n,{c:1,dkLen:t});return n.fill(0),o.fill(0),a.fill(0),s}},3409:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sha256=void 0;var r=n(742),i=n(1998);const o=(e,t,n)=>e&t^e&n^t&n,a=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),s=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),c=new Uint32Array(64);class f extends r.SHA2{constructor(){super(64,32,8,!1),this.A=0|s[0],this.B=0|s[1],this.C=0|s[2],this.D=0|s[3],this.E=0|s[4],this.F=0|s[5],this.G=0|s[6],this.H=0|s[7]}get(){const{A:e,B:t,C:n,D:r,E:i,F:o,G:a,H:s}=this;return[e,t,n,r,i,o,a,s]}set(e,t,n,r,i,o,a,s){this.A=0|e,this.B=0|t,this.C=0|n,this.D=0|r,this.E=0|i,this.F=0|o,this.G=0|a,this.H=0|s}process(e,t){for(let n=0;n<16;n++,t+=4)c[n]=e.getUint32(t,!1);for(let e=16;e<64;e++){const t=c[e-15],n=c[e-2],r=(0,i.rotr)(t,7)^(0,i.rotr)(t,18)^t>>>3,o=(0,i.rotr)(n,17)^(0,i.rotr)(n,19)^n>>>10;c[e]=o+c[e-7]+r+c[e-16]|0}let{A:n,B:r,C:s,D:f,E:d,F:u,G:l,H:h}=this;for(let e=0;e<64;e++){const t=h+((0,i.rotr)(d,6)^(0,i.rotr)(d,11)^(0,i.rotr)(d,25))+((b=d)&u^~b&l)+a[e]+c[e]|0,p=((0,i.rotr)(n,2)^(0,i.rotr)(n,13)^(0,i.rotr)(n,22))+o(n,r,s)|0;h=l,l=u,u=d,d=f+t|0,f=s,s=r,r=n,n=t+p|0}var b;n=n+this.A|0,r=r+this.B|0,s=s+this.C|0,f=f+this.D|0,d=d+this.E|0,u=u+this.F|0,l=l+this.G|0,h=h+this.H|0,this.set(n,r,s,f,d,u,l,h)}roundClean(){c.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const d=(0,i.wrapConstructor)((()=>new f));t.sha256=d},9786:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Keccak=void 0,t.keccakP=g,t.shake256=t.shake128=t.sha3_512=t.sha3_384=t.sha3_256=t.sha3_224=t.keccak_512=t.keccak_384=t.keccak_256=t.keccak_224=void 0;var r=function(e,t){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var n=o(t);if(n&&n.has(e))return n.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if("default"!==a&&Object.prototype.hasOwnProperty.call(e,a)){var s=i?Object.getOwnPropertyDescriptor(e,a):null;s&&(s.get||s.set)?Object.defineProperty(r,a,s):r[a]=e[a]}return r.default=e,n&&n.set(e,r),r}(n(1659)),i=n(1998);function o(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(o=function(e){return e?n:t})(e)}const a=(0,i._n)(0),s=(0,i._n)(1),c=(0,i._n)(2),f=(0,i._n)(7),d=(0,i._n)(256),u=(0,i._n)(113),[l,h,b]=[[],[],[]];for(let e=0,t=s,n=1,r=0;e<24;e++){[n,r]=[r,(2*n+3*r)%5],l.push(2*(5*r+n)),h.push((e+1)*(e+2)/2%64);let o=a;for(let e=0;e<7;e++)t=(t<<s^(t>>f)*u)%d,t&c&&(o^=s<<(s<<(0,i._n)(e))-s);b.push(o)}const[p,y]=r.split(b,!0),v=(e,t,n)=>n>32?r.rotlBH(e,t,n):r.rotlSH(e,t,n),m=(e,t,n)=>n>32?r.rotlBL(e,t,n):r.rotlSL(e,t,n);function g(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:24;const n=new Uint32Array(10);for(let r=24-t;r<24;r++){for(let t=0;t<10;t++)n[t]=e[t]^e[t+10]^e[t+20]^e[t+30]^e[t+40];for(let t=0;t<10;t+=2){const r=(t+8)%10,i=(t+2)%10,o=n[i],a=n[i+1],s=v(o,a,1)^n[r],c=m(o,a,1)^n[r+1];for(let n=0;n<50;n+=10)e[t+n]^=s,e[t+n+1]^=c}let t=e[2],i=e[3];for(let n=0;n<24;n++){const r=h[n],o=v(t,i,r),a=m(t,i,r),s=l[n];t=e[s],i=e[s+1],e[s]=o,e[s+1]=a}for(let t=0;t<50;t+=10){for(let r=0;r<10;r++)n[r]=e[t+r];for(let r=0;r<10;r++)e[t+r]^=~n[(r+2)%10]&n[(r+4)%10]}e[0]^=p[r],e[1]^=y[r]}n.fill(0)}class w extends i.Hash{constructor(e,t,n,r=!1,o=24){if(super(),this.blockLen=e,this.suffix=t,this.outputLen=n,this.enableXOF=r,this.rounds=o,this.state=void 0,this.pos=0,this.posOut=0,this.finished=!1,this.state32=void 0,this.destroyed=!1,(0,i.assertNumber)(n),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=(0,i.u32)(this.state)}keccak(){g(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){if(this.destroyed)throw new Error("instance is destroyed");if(this.finished)throw new Error("digest() was already called");const{blockLen:t,state:n}=this,r=(e=(0,i.toBytes)(e)).length;for(let i=0;i<r;){const o=Math.min(t-this.pos,r-i);for(let t=0;t<o;t++)n[this.pos++]^=e[i++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:t,pos:n,blockLen:r}=this;e[n]^=t,0!=(128&t)&&n===r-1&&this.keccak(),e[r-1]^=128,this.keccak()}writeInto(e){if(this.destroyed)throw new Error("instance is destroyed");if(!(e instanceof Uint8Array))throw new Error("Keccak: invalid output buffer");this.finish();for(let t=0,n=e.length;t<n;){this.posOut>=this.blockLen&&this.keccak();const r=Math.min(this.blockLen-this.posOut,n-t);e.set(this.state.subarray(this.posOut,this.posOut+r),t),this.posOut+=r,t+=r}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return(0,i.assertNumber)(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(e.length<this.outputLen)throw new Error("Keccak: invalid output buffer");if(this.finished)throw new Error("digest() was already called");return this.finish(),this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:t,suffix:n,outputLen:r,rounds:i,enableXOF:o}=this;return e||(e=new w(t,n,r,o,i)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=i,e.suffix=n,e.outputLen=r,e.enableXOF=o,e.destroyed=this.destroyed,e}}t.Keccak=w;const P=(e,t,n)=>(0,i.wrapConstructor)((()=>new w(t,e,n))),x=P(6,144,28);t.sha3_224=x;const M=P(6,136,32);t.sha3_256=M;const O=P(6,104,48);t.sha3_384=O;const j=P(6,72,64);t.sha3_512=j;const k=P(1,144,28);t.keccak_224=k;const A=P(1,136,32);t.keccak_256=A;const T=P(1,104,48);t.keccak_384=T;const E=P(1,72,64);t.keccak_512=E;const z=(e,t,n)=>(0,i.wrapConstructorWithOpts)((function(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new w(t,e,void 0!==r.dkLen?r.dkLen:n,!0)})),L=z(31,168,16);t.shake128=L;const N=z(31,136,32);t.shake256=N},2828:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sha512_256=t.sha512=t.sha384=t.SHA512=void 0;var r=n(742),i=function(e,t){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var n=a(t);if(n&&n.has(e))return n.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var s=i?Object.getOwnPropertyDescriptor(e,o):null;s&&(s.get||s.set)?Object.defineProperty(r,o,s):r[o]=e[o]}return r.default=e,n&&n.set(e,r),r}(n(1659)),o=n(1998);function a(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(a=function(e){return e?n:t})(e)}const[s,c]=i.split([(0,o._n)("0x428a2f98d728ae22"),(0,o._n)("0x7137449123ef65cd"),(0,o._n)("0xb5c0fbcfec4d3b2f"),(0,o._n)("0xe9b5dba58189dbbc"),(0,o._n)("0x3956c25bf348b538"),(0,o._n)("0x59f111f1b605d019"),(0,o._n)("0x923f82a4af194f9b"),(0,o._n)("0xab1c5ed5da6d8118"),(0,o._n)("0xd807aa98a3030242"),(0,o._n)("0x12835b0145706fbe"),(0,o._n)("0x243185be4ee4b28c"),(0,o._n)("0x550c7dc3d5ffb4e2"),(0,o._n)("0x72be5d74f27b896f"),(0,o._n)("0x80deb1fe3b1696b1"),(0,o._n)("0x9bdc06a725c71235"),(0,o._n)("0xc19bf174cf692694"),(0,o._n)("0xe49b69c19ef14ad2"),(0,o._n)("0xefbe4786384f25e3"),(0,o._n)("0x0fc19dc68b8cd5b5"),(0,o._n)("0x240ca1cc77ac9c65"),(0,o._n)("0x2de92c6f592b0275"),(0,o._n)("0x4a7484aa6ea6e483"),(0,o._n)("0x5cb0a9dcbd41fbd4"),(0,o._n)("0x76f988da831153b5"),(0,o._n)("0x983e5152ee66dfab"),(0,o._n)("0xa831c66d2db43210"),(0,o._n)("0xb00327c898fb213f"),(0,o._n)("0xbf597fc7beef0ee4"),(0,o._n)("0xc6e00bf33da88fc2"),(0,o._n)("0xd5a79147930aa725"),(0,o._n)("0x06ca6351e003826f"),(0,o._n)("0x142929670a0e6e70"),(0,o._n)("0x27b70a8546d22ffc"),(0,o._n)("0x2e1b21385c26c926"),(0,o._n)("0x4d2c6dfc5ac42aed"),(0,o._n)("0x53380d139d95b3df"),(0,o._n)("0x650a73548baf63de"),(0,o._n)("0x766a0abb3c77b2a8"),(0,o._n)("0x81c2c92e47edaee6"),(0,o._n)("0x92722c851482353b"),(0,o._n)("0xa2bfe8a14cf10364"),(0,o._n)("0xa81a664bbc423001"),(0,o._n)("0xc24b8b70d0f89791"),(0,o._n)("0xc76c51a30654be30"),(0,o._n)("0xd192e819d6ef5218"),(0,o._n)("0xd69906245565a910"),(0,o._n)("0xf40e35855771202a"),(0,o._n)("0x106aa07032bbd1b8"),(0,o._n)("0x19a4c116b8d2d0c8"),(0,o._n)("0x1e376c085141ab53"),(0,o._n)("0x2748774cdf8eeb99"),(0,o._n)("0x34b0bcb5e19b48a8"),(0,o._n)("0x391c0cb3c5c95a63"),(0,o._n)("0x4ed8aa4ae3418acb"),(0,o._n)("0x5b9cca4f7763e373"),(0,o._n)("0x682e6ff3d6b2b8a3"),(0,o._n)("0x748f82ee5defb2fc"),(0,o._n)("0x78a5636f43172f60"),(0,o._n)("0x84c87814a1f0ab72"),(0,o._n)("0x8cc702081a6439ec"),(0,o._n)("0x90befffa23631e28"),(0,o._n)("0xa4506cebde82bde9"),(0,o._n)("0xbef9a3f7b2c67915"),(0,o._n)("0xc67178f2e372532b"),(0,o._n)("0xca273eceea26619c"),(0,o._n)("0xd186b8c721c0c207"),(0,o._n)("0xeada7dd6cde0eb1e"),(0,o._n)("0xf57d4f7fee6ed178"),(0,o._n)("0x06f067aa72176fba"),(0,o._n)("0x0a637dc5a2c898a6"),(0,o._n)("0x113f9804bef90dae"),(0,o._n)("0x1b710b35131c471b"),(0,o._n)("0x28db77f523047d84"),(0,o._n)("0x32caab7b40c72493"),(0,o._n)("0x3c9ebe0a15c9bebc"),(0,o._n)("0x431d67c49c100d4c"),(0,o._n)("0x4cc5d4becb3e42b6"),(0,o._n)("0x597f299cfc657e2a"),(0,o._n)("0x5fcb6fab3ad6faec"),(0,o._n)("0x6c44198c4a475817")]),f=new Uint32Array(80),d=new Uint32Array(80);class u extends r.SHA2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:t,Bh:n,Bl:r,Ch:i,Cl:o,Dh:a,Dl:s,Eh:c,El:f,Fh:d,Fl:u,Gh:l,Gl:h,Hh:b,Hl:p}=this;return[e,t,n,r,i,o,a,s,c,f,d,u,l,h,b,p]}set(e,t,n,r,i,o,a,s,c,f,d,u,l,h,b,p){this.Ah=0|e,this.Al=0|t,this.Bh=0|n,this.Bl=0|r,this.Ch=0|i,this.Cl=0|o,this.Dh=0|a,this.Dl=0|s,this.Eh=0|c,this.El=0|f,this.Fh=0|d,this.Fl=0|u,this.Gh=0|l,this.Gl=0|h,this.Hh=0|b,this.Hl=0|p}process(e,t){for(let n=0;n<16;n++,t+=4)f[n]=e.getUint32(t),d[n]=e.getUint32(t+=4);for(let e=16;e<80;e++){const t=0|f[e-15],n=0|d[e-15],r=i.rotrSH(t,n,1)^i.rotrSH(t,n,8)^i.shrSH(t,n,7),o=i.rotrSL(t,n,1)^i.rotrSL(t,n,8)^i.shrSL(t,n,7),a=0|f[e-2],s=0|d[e-2],c=i.rotrSH(a,s,19)^i.rotrBH(a,s,61)^i.shrSH(a,s,6),u=i.rotrSL(a,s,19)^i.rotrBL(a,s,61)^i.shrSL(a,s,6),l=i.add4L(o,u,d[e-7],d[e-16]),h=i.add4H(l,r,c,f[e-7],f[e-16]);f[e]=0|h,d[e]=0|l}let{Ah:n,Al:r,Bh:o,Bl:a,Ch:u,Cl:l,Dh:h,Dl:b,Eh:p,El:y,Fh:v,Fl:m,Gh:g,Gl:w,Hh:P,Hl:x}=this;for(let e=0;e<80;e++){const t=i.rotrSH(p,y,14)^i.rotrSH(p,y,18)^i.rotrBH(p,y,41),M=i.rotrSL(p,y,14)^i.rotrSL(p,y,18)^i.rotrBL(p,y,41),O=p&v^~p&g,j=y&m^~y&w,k=i.add5L(x,M,j,c[e],d[e]),A=i.add5H(k,P,t,O,s[e],f[e]),T=0|k,E=i.rotrSH(n,r,28)^i.rotrBH(n,r,34)^i.rotrBH(n,r,39),z=i.rotrSL(n,r,28)^i.rotrBL(n,r,34)^i.rotrBL(n,r,39),L=n&o^n&u^o&u,N=r&a^r&l^a&l;P=0|g,x=0|w,g=0|v,w=0|m,v=0|p,m=0|y,({h:p,l:y}=i.add(0|h,0|b,0|A,0|T)),h=0|u,b=0|l,u=0|o,l=0|a,o=0|n,a=0|r;const S=i.add3L(T,z,N);n=i.add3H(S,A,E,L),r=0|S}({h:n,l:r}=i.add(0|this.Ah,0|this.Al,0|n,0|r)),({h:o,l:a}=i.add(0|this.Bh,0|this.Bl,0|o,0|a)),({h:u,l}=i.add(0|this.Ch,0|this.Cl,0|u,0|l)),({h,l:b}=i.add(0|this.Dh,0|this.Dl,0|h,0|b)),({h:p,l:y}=i.add(0|this.Eh,0|this.El,0|p,0|y)),({h:v,l:m}=i.add(0|this.Fh,0|this.Fl,0|v,0|m)),({h:g,l:w}=i.add(0|this.Gh,0|this.Gl,0|g,0|w)),({h:P,l:x}=i.add(0|this.Hh,0|this.Hl,0|P,0|x)),this.set(n,r,o,a,u,l,h,b,p,y,v,m,g,w,P,x)}roundClean(){f.fill(0),d.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}t.SHA512=u;class l extends u{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}class h extends u{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}const b=(0,o.wrapConstructor)((()=>new u));t.sha512=b;const p=(0,o.wrapConstructor)((()=>new l));t.sha512_256=p;const y=(0,o.wrapConstructor)((()=>new h));t.sha384=y},1998:(e,t,n)=>{"use strict";e=n.nmd(e),Object.defineProperty(t,"__esModule",{value:!0}),t._n=t.Hash=void 0,t.assertBool=function(e){if("boolean"!=typeof e)throw new Error(`Expected boolean, not ${e}`)},t.assertHash=function(e){if("function"!=typeof e||"function"!=typeof e.init)throw new Error("Hash should be wrapped by utils.wrapConstructor");c(e.outputLen),c(e.blockLen)},t.assertNumber=c,t.asyncLoop=async function(e,t,n){let r=Date.now();for(let i=0;i<e;i++){n(i);const e=Date.now()-r;e>=0&&e<t||(await a(),r+=e)}},t.bytesToHex=function(e){let t="";for(let n=0;n<e.length;n++)t+=o[e[n]];return t},t.checkOpts=function(e,t){if(void 0!==t&&("object"!=typeof t||(n=t,"[object Object]"!==Object.prototype.toString.call(n)||n.constructor!==Object)))throw new TypeError("Options should be object or undefined");var n;return Object.assign(e,t)},t.nextTick=t.isLE=t.crypto=t.createView=void 0,t.randomBytes=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:32;if(f.web)return f.web.getRandomValues(new Uint8Array(e));if(f.node)return new Uint8Array(f.node.randomBytes(e).buffer);throw new Error("The environment doesn't have randomBytes function")},t.rotr=void 0,t.toBytes=s,t.u8=t.u32=void 0,t.wrapConstructor=function(e){const t=t=>e().update(s(t)).digest(),n=e();return t.outputLen=n.outputLen,t.blockLen=n.blockLen,t.init=t.create=()=>e(),t},t.wrapConstructorWithOpts=function(e){const t=(t,n)=>e(n).update(s(t)).digest(),n=e({});return t.outputLen=n.outputLen,t.blockLen=n.blockLen,t.init=t.create=t=>e(t),t};const r="undefined"!=typeof BigInt?BigInt:()=>Number.NaN;t._n=r,t.u8=e=>new Uint8Array(e.buffer,e.byteOffset,e.byteLength),t.u32=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)),t.createView=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),t.rotr=(e,t)=>e<<32-t|e>>>t;const i=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0];if(t.isLE=i,!i)throw new Error("Non little-endian hardware is not supported");const o=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0"))),a=(()=>{const t="function"==typeof e.require&&e.require.bind(e);try{if(t){const{setImmediate:e}=t("timers");return()=>new Promise((t=>e(t)))}}catch(e){}return()=>new Promise((e=>setTimeout(e,0)))})();function s(e){if("string"==typeof e&&(e=(new TextEncoder).encode(e)),!(e instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof e})`);return e}function c(e){if(!Number.isSafeInteger(e))throw new Error(`Wrong integer: ${e}`)}t.nextTick=a,t.Hash=class{constructor(){this.blockLen=void 0,this.outputLen=void 0}clone(){return this._cloneInto()}};const f=(()=>{const e="object"==typeof self&&"crypto"in self?self.crypto:void 0;return{node:e?void 0:n(4847),web:e}})();t.crypto=f},3725:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/util-crypto",version:"8.0.5"}},1701:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.pbkdf2Encode=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,s.randomAsU8a)(),n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2048,c=arguments.length>3?arguments[3]:void 0;const f=(0,r.u8aToU8a)(e),d=(0,r.u8aToU8a)(t);return{password:!r.hasBigInt||!c&&(0,i.isReady)()?(0,i.pbkdf2)(f,d,n):(0,o.pbkdf2)(a.sha512,f,d,{c:n,dkLen:64}),rounds:n,salt:t}};var r=n(9215),i=n(223),o=n(838),a=n(2828),s=n(3676)},7212:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"pbkdf2Encode",{enumerable:!0,get:function(){return r.pbkdf2Encode}});var r=n(1701)},1001:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomAsNumber=function(){return(0,r.hexToBn)((0,i.randomAsHex)(8)).and(o).toNumber()};var r=n(9215),i=n(3676);const o=new r.BN(9007199254740991)},3676:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomAsHex=void 0,t.randomAsU8a=i;var r=n(4081);function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:32;return(0,r.getRandomValues)(new Uint8Array(e))}const o=(0,n(7671).createAsHex)(i);t.randomAsHex=o},8631:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"randomAsHex",{enumerable:!0,get:function(){return i.randomAsHex}}),Object.defineProperty(t,"randomAsNumber",{enumerable:!0,get:function(){return r.randomAsNumber}}),Object.defineProperty(t,"randomAsU8a",{enumerable:!0,get:function(){return i.randomAsU8a}});var r=n(1001),i=n(3676)},8609:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_PARAMS=void 0,t.DEFAULT_PARAMS={N:32768,p:1,r:8}},8691:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scryptEncode=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,a.randomAsU8a)(),n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:s.DEFAULT_PARAMS,c=arguments.length>3?arguments[3]:void 0;const f=(0,r.u8aToU8a)(e);return{params:n,password:!r.hasBigInt||!c&&(0,i.isReady)()?(0,i.scrypt)(f,t,Math.log2(n.N),n.r,n.p):(0,o.scrypt)(f,t,(0,r.objectSpread)({dkLen:64},n)),salt:t}};var r=n(9215),i=n(223),o=n(4055),a=n(3676),s=n(8609)},6354:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scryptFromU8a=function(e){const t=e.subarray(0,32),n=(0,r.u8aToBn)(e.subarray(32,36),i.BN_LE_OPTS).toNumber(),a=(0,r.u8aToBn)(e.subarray(36,40),i.BN_LE_OPTS).toNumber(),s=(0,r.u8aToBn)(e.subarray(40,44),i.BN_LE_OPTS).toNumber();return(0,r.assert)(n===o.DEFAULT_PARAMS.N&&a===o.DEFAULT_PARAMS.p&&s===o.DEFAULT_PARAMS.r,"Invalid injected scrypt params found"),{params:{N:n,p:a,r:s},salt:t}};var r=n(9215),i=n(9078),o=n(8609)},1731:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"scryptEncode",{enumerable:!0,get:function(){return r.scryptEncode}}),Object.defineProperty(t,"scryptFromU8a",{enumerable:!0,get:function(){return i.scryptFromU8a}}),Object.defineProperty(t,"scryptToU8a",{enumerable:!0,get:function(){return o.scryptToU8a}});var r=n(8691),i=n(6354),o=n(6057)},6057:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scryptToU8a=function(e,t){let{N:n,p:o,r:a}=t;return(0,r.u8aConcat)(e,(0,r.bnToU8a)(n,i.BN_LE_32_OPTS),(0,r.bnToU8a)(o,i.BN_LE_32_OPTS),(0,r.bnToU8a)(a,i.BN_LE_32_OPTS))};var r=n(9215),i=n(9078)},1757:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Compress=function(e){return(0,r.assert)([33,65].includes(e.length),"Invalid publicKey provided"),new Uint8Array(i.secp256k1.keyFromPublic(e).getPublic().encodeCompressed())};var r=n(9215),i=n(5872)},8641:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1DeriveHard=function(e,t){return(0,r.assert)((0,r.isU8a)(t)&&32===t.length,"Invalid chainCode passed to derive"),(0,i.blake2AsU8a)((0,r.u8aConcat)(o,e,t),256)};var r=n(9215),i=n(2376);const o=(0,r.compactAddLength)((0,r.stringToU8a)("Secp256k1HDKD"))},8327:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Expand=function(e){(0,r.assert)([33,65].includes(e.length),"Invalid publicKey provided");const t=o.secp256k1.keyFromPublic(e).getPublic();return(0,r.u8aConcat)((0,r.bnToU8a)(t.getX(),i.BN_BE_256_OPTS),(0,r.bnToU8a)(t.getY(),i.BN_BE_256_OPTS))};var r=n(9215),i=n(9078),o=n(5872)},2441:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Hasher=function(e,t){if("blake2"===e)return(0,r.blake2AsU8a)(t);if("keccak"===e)return(0,i.keccakAsU8a)(t);throw new Error(`Unsupported secp256k1 hasher '${e}', expected one of ${o.join(", ")}`)};var r=n(7838),i=n(2399);const o=["blake2","keccak"]},6447:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"secp256k1Compress",{enumerable:!0,get:function(){return r.secp256k1Compress}}),Object.defineProperty(t,"secp256k1Expand",{enumerable:!0,get:function(){return i.secp256k1Expand}}),Object.defineProperty(t,"secp256k1PairFromSeed",{enumerable:!0,get:function(){return o.secp256k1PairFromSeed}}),Object.defineProperty(t,"secp256k1PrivateKeyTweakAdd",{enumerable:!0,get:function(){return c.secp256k1PrivateKeyTweakAdd}}),Object.defineProperty(t,"secp256k1Recover",{enumerable:!0,get:function(){return a.secp256k1Recover}}),Object.defineProperty(t,"secp256k1Sign",{enumerable:!0,get:function(){return s.secp256k1Sign}}),Object.defineProperty(t,"secp256k1Verify",{enumerable:!0,get:function(){return f.secp256k1Verify}});var r=n(1757),i=n(8327),o=n(3095),a=n(9289),s=n(7482),c=n(787),f=n(219)},3095:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1PairFromSeed=function(e){(0,r.assert)(32===e.length,"Expected valid 32-byte private key as a seed");const t=o.secp256k1.keyFromPrivate(e);return{publicKey:new Uint8Array(t.getPublic().encodeCompressed()),secretKey:(0,r.bnToU8a)(t.getPrivate(),i.BN_BE_256_OPTS)}};var r=n(9215),i=n(9078),o=n(5872)},9289:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Recover=function(e,t,n){return new Uint8Array(r.secp256k1.recoverPubKey(e,{r:t.slice(0,32),s:t.slice(32,64)},n).encode(null,!0))};var r=n(5872)},5872:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1=void 0;const i=new(r(n(6266)).default.ec)("secp256k1");t.secp256k1=i},7482:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Sign=function(e,t){let{secretKey:n}=t,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"blake2";(0,r.assert)(32===(null==n?void 0:n.length),"Expected valid secp256k1 secretKey, 32-bytes");const c=a.secp256k1.keyFromPrivate(n),f=c.sign((0,o.secp256k1Hasher)(s,e));return(0,r.u8aConcat)((0,r.bnToU8a)(f.r,i.BN_BE_256_OPTS),(0,r.bnToU8a)(f.s,i.BN_BE_256_OPTS),new Uint8Array([f.recoveryParam||0]))};var r=n(9215),i=n(9078),o=n(2441),a=n(5872)},787:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1PrivateKeyTweakAdd=function(e,t){(0,r.assert)((0,r.isU8a)(e)&&32===e.length,"Expected seckey to be an Uint8Array with length 32"),(0,r.assert)((0,r.isU8a)(t)&&32===t.length,"Expected tweak to be an Uint8Array with length 32");const n=new r.BN(t);return(0,r.assert)(n.cmp(o)<0,"Tweak parameter is out of range"),n.iadd(new r.BN(e)),n.cmp(o)>=0&&n.isub(o),(0,r.assert)(!n.isZero(),"Invalid resulting private key"),(0,r.bnToU8a)(n,i.BN_BE_256_OPTS)};var r=n(9215),i=n(9078);const o=new r.BN("ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141".replace(/ /g,""),"hex")},219:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.secp256k1Verify=function(e,t,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"blake2";const c="keccak"===s,f=(0,r.u8aToU8a)(t);(0,r.assert)(65===f.length,`Expected signature with 65 bytes, ${f.length} found instead`);const d=new Uint8Array(a.secp256k1.recoverPubKey((0,o.secp256k1Hasher)(s,e),{r:f.slice(0,32),s:f.slice(32,64)},f[64]).encodeCompressed()),u=(0,o.secp256k1Hasher)(s,c?(0,i.secp256k1Expand)(d):d),l=(0,r.u8aToU8a)(n);return c?(0,r.u8aEq)(u.slice(-20),l.slice(-20)):(0,r.u8aEq)(u,l)};var r=n(9215),i=n(8327),o=n(2441),a=n(5872)},7753:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sha512AsU8a=t.sha256AsU8a=void 0,t.shaAsU8a=c;var r=n(9215),i=n(223),o=n(7671),a=n(3409),s=n(2828);function c(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:256,n=arguments.length>2?arguments[2]:void 0;const o=256===t,c=(0,r.u8aToU8a)(e);return!r.hasBigInt||!n&&(0,i.isReady)()?o?(0,i.sha256)(c):(0,i.sha512)(c):o?(0,a.sha256)(c):(0,s.sha512)(c)}const f=(0,o.createBitHasher)(256,c);t.sha256AsU8a=f;const d=(0,o.createBitHasher)(512,c);t.sha512AsU8a=d},7139:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"sha256AsU8a",{enumerable:!0,get:function(){return r.sha256AsU8a}}),Object.defineProperty(t,"sha512AsU8a",{enumerable:!0,get:function(){return r.sha512AsU8a}}),Object.defineProperty(t,"shaAsU8a",{enumerable:!0,get:function(){return r.shaAsU8a}});var r=n(7753)},7927:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"signatureVerify",{enumerable:!0,get:function(){return r.signatureVerify}});var r=n(2785)},2785:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.signatureVerify=function(e,t,n){const o=(0,r.u8aToU8a)(t);(0,r.assert)([64,65,66].includes(o.length),(()=>`Invalid signature length, expected [64..66] bytes, found ${o.length}`));const a=(0,i.decodeAddress)(n),s={message:(0,r.u8aToU8a)(e),publicKey:a,signature:o},c={crypto:"none",isValid:!1,isWrapped:(0,r.u8aIsWrapped)(s.message,!0),publicKey:a},f=(0,r.u8aIsWrapped)(s.message,!1),d=function(e){return[0,1,2].includes(e[0])&&[65,66].includes(e.length)?h:l}(o);return d(c,s),"none"!==c.crypto||c.isWrapped&&!f?c:(s.message=f?(0,r.u8aUnwrapBytes)(s.message):(0,r.u8aWrapBytes)(s.message),d(c,s))};var r=n(9215),i=n(8909),o=n(3333),a=n(219),s=n(276);const c=e=>(t,n,r)=>(0,a.secp256k1Verify)(t,n,r,e),f=[["ecdsa",c("blake2")],["ethereum",c("keccak")]],d=[["ed25519",o.ed25519Verify],["sr25519",s.sr25519Verify],...f],u=["ed25519","sr25519","ecdsa"];function l(e,t){let{message:n,publicKey:r,signature:i}=t,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:d;return e.isValid=o.some((t=>{let[o,a]=t;try{if(a(n,i,r))return e.crypto=o,!0}catch(e){}return!1})),e}function h(e,t){let{message:n,publicKey:i,signature:a}=t;(0,r.assert)([0,1,2].includes(a[0]),(()=>`Unknown crypto type, expected signature prefix [0..2], found ${a[0]}`));const c=u[a[0]]||"none";e.crypto=c;try{e.isValid={ecdsa:()=>l(e,{message:n,publicKey:i,signature:a.subarray(1)},f).isValid,ed25519:()=>(0,o.ed25519Verify)(n,a.subarray(1),i),none:()=>{throw Error("no verify for `none` crypto type")},sr25519:()=>(0,s.sr25519Verify)(n,a.subarray(1),i)}[c]()}catch(e){}return e}},1442:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519Agreement=function(e,t){const n=(0,r.u8aToU8a)(e),o=(0,r.u8aToU8a)(t);return(0,r.assert)(32===o.length,(()=>`Invalid publicKey, received ${o.length} bytes, expected 32`)),(0,r.assert)(64===n.length,(()=>`Invalid secretKey, received ${n.length} bytes, expected 64`)),(0,i.sr25519Agree)(o,n)};var r=n(9215),i=n(223)},1762:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createDeriveFn=function(e){return(t,n)=>((0,r.assert)((0,r.isU8a)(n)&&32===n.length,"Invalid chainCode passed to derive"),(0,i.sr25519PairFromU8a)(e((0,o.sr25519KeypairToU8a)(t),n)))};var r=n(9215),i=n(8782),o=n(7762)},853:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519DeriveHard=void 0;var r=n(223);const i=(0,n(1762).createDeriveFn)(r.sr25519DeriveKeypairHard);t.sr25519DeriveHard=i},6531:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519DerivePublic=function(e,t){const n=(0,r.u8aToU8a)(e);return(0,r.assert)((0,r.isU8a)(t)&&32===t.length,"Invalid chainCode passed to derive"),(0,r.assert)(32===n.length,(()=>`Invalid publicKey, received ${n.length} bytes, expected 32`)),(0,i.sr25519DerivePublicSoft)(n,t)};var r=n(9215),i=n(223)},9351:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519DeriveSoft=void 0;var r=n(223);const i=(0,n(1762).createDeriveFn)(r.sr25519DeriveKeypairSoft);t.sr25519DeriveSoft=i},9247:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"sr25519Agreement",{enumerable:!0,get:function(){return r.sr25519Agreement}}),Object.defineProperty(t,"sr25519DeriveHard",{enumerable:!0,get:function(){return i.sr25519DeriveHard}}),Object.defineProperty(t,"sr25519DerivePublic",{enumerable:!0,get:function(){return o.sr25519DerivePublic}}),Object.defineProperty(t,"sr25519DeriveSoft",{enumerable:!0,get:function(){return a.sr25519DeriveSoft}}),Object.defineProperty(t,"sr25519PairFromSeed",{enumerable:!0,get:function(){return s.sr25519PairFromSeed}}),Object.defineProperty(t,"sr25519Sign",{enumerable:!0,get:function(){return c.sr25519Sign}}),Object.defineProperty(t,"sr25519Verify",{enumerable:!0,get:function(){return f.sr25519Verify}}),Object.defineProperty(t,"sr25519VrfSign",{enumerable:!0,get:function(){return d.sr25519VrfSign}}),Object.defineProperty(t,"sr25519VrfVerify",{enumerable:!0,get:function(){return u.sr25519VrfVerify}});var r=n(1442),i=n(853),o=n(6531),a=n(9351),s=n(2620),c=n(2148),f=n(276),d=n(4011),u=n(6659)},2620:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519PairFromSeed=function(e){const t=(0,r.u8aToU8a)(e);return(0,r.assert)(32===t.length,(()=>`Expected a seed matching 32 bytes, found ${t.length}`)),(0,o.sr25519PairFromU8a)((0,i.sr25519KeypairFromSeed)(t))};var r=n(9215),i=n(223),o=n(8782)},8782:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519PairFromU8a=function(e){const t=(0,r.u8aToU8a)(e);return(0,r.assert)(96===t.length,(()=>`Expected keypair with 96 bytes, found ${t.length}`)),{publicKey:t.slice(64,96),secretKey:t.slice(0,64)}};var r=n(9215)},7762:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519KeypairToU8a=function(e){let{publicKey:t,secretKey:n}=e;return(0,r.u8aConcat)(n,t).slice()};var r=n(9215)},2148:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519Sign=function(e,t){let{publicKey:n,secretKey:o}=t;return(0,r.assert)(32===(null==n?void 0:n.length),"Expected a valid publicKey, 32-bytes"),(0,r.assert)(64===(null==o?void 0:o.length),"Expected a valid secretKey, 64-bytes"),(0,i.sr25519Sign)(n,o,(0,r.u8aToU8a)(e))};var r=n(9215),i=n(223)},276:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519Verify=function(e,t,n){const o=(0,r.u8aToU8a)(n),a=(0,r.u8aToU8a)(t);return(0,r.assert)(32===o.length,(()=>`Invalid publicKey, received ${o.length} bytes, expected 32`)),(0,r.assert)(64===a.length,(()=>`Invalid signature, received ${a.length} bytes, expected 64`)),(0,i.sr25519Verify)(a,(0,r.u8aToU8a)(e),o)};var r=n(9215),i=n(223)},4011:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519VrfSign=function(e,t){let{secretKey:n}=t,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:o;return(0,r.assert)(64===(null==n?void 0:n.length),"Invalid secretKey, expected 64-bytes"),(0,i.vrfSign)(n,(0,r.u8aToU8a)(a),(0,r.u8aToU8a)(e),(0,r.u8aToU8a)(s))};var r=n(9215),i=n(223);const o=new Uint8Array},6659:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sr25519VrfVerify=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:o,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:o;const c=(0,r.u8aToU8a)(n),f=(0,r.u8aToU8a)(t);return(0,r.assert)(32===c.length,"Invalid publicKey, expected 32-bytes"),(0,r.assert)(96===f.length,"Invalid vrfSign output, expected 96 bytes"),(0,i.vrfVerify)(c,(0,r.u8aToU8a)(a),(0,r.u8aToU8a)(e),(0,r.u8aToU8a)(s),f)};var r=n(9215),i=n(223);const o=new Uint8Array},9328:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.xxhashAsHex=void 0,t.xxhashAsU8a=s;var r=n(9215),i=n(223),o=n(7671),a=n(613);function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:64,n=arguments.length>2?arguments[2]:void 0;const o=Math.ceil(t/64),s=(0,r.u8aToU8a)(e);if(!r.hasBigInt||!n&&(0,i.isReady)())return(0,i.twox)(s,o);const c=new Uint8Array(8*o);for(let e=0;e<o;e++)c.set((0,a.xxhash64)(s,e).reverse(),8*e);return c}const c=(0,o.createAsHex)(s);t.xxhashAsHex=c},4140:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"xxhashAsHex",{enumerable:!0,get:function(){return r.xxhashAsHex}}),Object.defineProperty(t,"xxhashAsU8a",{enumerable:!0,get:function(){return r.xxhashAsU8a}});var r=n(9328)},613:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.xxhash64=function(e,t){const{seed:n,u8a:h,u8asize:P,v1:j,v2:k,v3:A,v4:T}=function(e,t){if(t.length<32)return e.u8a.set(t),e.u8asize=t.length,e;const n=t.length-32;let r=0;if(n>=0){const a=e=>i*M(e+o*O(t,r,4),m);do{e.v1=a(e.v1),r+=8,e.v2=a(e.v2),r+=8,e.v3=a(e.v3),r+=8,e.v4=a(e.v4),r+=8}while(r<=n)}return r<t.length&&(e.u8a.set(t.subarray(r,t.length)),e.u8asize=t.length-r),e}(function(e){const t=BigInt(e);return{seed:t,u8a:new Uint8Array(32),u8asize:0,v1:t+i+o,v2:t+o,v3:t,v4:t-i}}(t),e);let E=0,z=f&BigInt(e.length)+(e.length>=32?((((M(j,r._1n)+M(k,d)+M(A,l)+M(T,b)^i*M(j*o,m))*i+s^i*M(k*o,m))*i+s^i*M(A*o,m))*i+s^i*M(T*o,m))*i+s:n+c);for(;E<=P-8;)z=f&s+i*M(z^i*M(o*O(h,E,4),m),y),E+=8;for(E+4<=P&&(z=f&a+o*M(z^i*O(h,E,2),p),E+=4);E<P;)z=f&i*M(z^c*BigInt(h[E++]),u);return z=f&o*(z^z>>w),z=f&a*(z^z>>v),function(e){const t=new Uint8Array(8);for(let n=7;n>=0;n--)t[n]=Number(e%x),e/=x;return t}(f&(z^z>>g))};var r=n(9215);const i=(0,r._n)("11400714785074694791"),o=(0,r._n)("14029467366897019727"),a=(0,r._n)("1609587929392839161"),s=(0,r._n)("9650029242287828579"),c=(0,r._n)("2870177450012600261"),f=(0,r._n)("0xffffffffffffffff"),d=(0,r._n)(7),u=(0,r._n)(11),l=(0,r._n)(12),h=(0,r._n)(16),b=(0,r._n)(18),p=(0,r._n)(23),y=(0,r._n)(27),v=(0,r._n)(29),m=(0,r._n)(31),g=(0,r._n)(32),w=(0,r._n)(33),P=(0,r._n)(64),x=(0,r._n)(256);function M(e,t){const n=e&f;return(n<<t|n>>P-t)&f}function O(e,t,n){const i=new Array(n);let o=0;for(let r=0;r<n;r++,o+=2)i[r]=BigInt(e[t+o]|e[t+1+o]<<8);let a=r._0n;for(let e=n-1;e>=0;e--)a=(a<<h)+i[e];return a}},4174:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayChunk=function(e,t){const n=Math.ceil(e.length/t),r=Array(n);for(let i=0;i<n;i++){const n=i*t;r[i]=e.slice(n,n+t)}return r}},6832:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayFilter=function(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return e.filter((e=>!(0,i.isUndefined)(e)&&(t||!(0,r.isNull)(e))))};var r=n(8134),i=n(7789)},7826:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayFlatten=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n].length;const n=new Array(t);let r=-1;for(let t=0;t<e.length;t++){const i=e[t];for(let e=0;e<i.length;e++)n[++r]=i[e]}return n}},2439:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"arrayChunk",{enumerable:!0,get:function(){return r.arrayChunk}}),Object.defineProperty(t,"arrayFilter",{enumerable:!0,get:function(){return i.arrayFilter}}),Object.defineProperty(t,"arrayFlatten",{enumerable:!0,get:function(){return o.arrayFlatten}}),Object.defineProperty(t,"arrayRange",{enumerable:!0,get:function(){return a.arrayRange}}),Object.defineProperty(t,"arrayShuffle",{enumerable:!0,get:function(){return s.arrayShuffle}}),Object.defineProperty(t,"arrayZip",{enumerable:!0,get:function(){return c.arrayZip}});var r=n(4174),i=n(6832),o=n(7826),a=n(7341),s=n(2992),c=n(6563)},7341:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayRange=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,r.assert)(e>0,"Expected non-zero, positive number as a range size");const n=new Array(e);for(let r=0;r<e;r++)n[r]=r+t;return n};var r=n(7146)},2992:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayShuffle=function(e){const t=e.slice();let n=t.length;if(1===n)return t;for(;0!==n;){const e=Math.floor(Math.random()*n);n--,[t[n],t[e]]=[t[e],t[n]]}return t}},6563:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.arrayZip=function(e,t){const n=new Array(e.length);for(let r=0;r<e.length;r++)n[r]=[e[r],t[r]];return n}},7146:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.assert=a,t.assertReturn=function(e,t){return a(!(0,o.isUndefined)(e)&&!(0,i.isNull)(e),t),e};var r=n(8178),i=n(8134),o=n(7789);function a(e,t){if(!e)throw new Error((0,r.isFunction)(t)?t():t)}},9717:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t._n=t._2pow53n=t._1n=t._1Qn=t._1Mn=t._1Bn=t._0n=void 0;const n="undefined"!=typeof BigInt?BigInt:()=>Number.NaN;t._n=n;const r=n(0);t._0n=r;const i=n(1);t._1n=i;const o=n(1e6);t._1Mn=o;const a=n(1e9);t._1Bn=a;const s=a*a;t._1Qn=s;const c=n(Number.MAX_SAFE_INTEGER);t._2pow53n=c},6202:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r={nSqrt:!0,nToBigInt:!0,nMax:!0,nMin:!0,nToHex:!0,nToU8a:!0};Object.defineProperty(t,"nMax",{enumerable:!0,get:function(){return s.nMax}}),Object.defineProperty(t,"nMin",{enumerable:!0,get:function(){return c.nMin}}),Object.defineProperty(t,"nSqrt",{enumerable:!0,get:function(){return o.nSqrt}}),Object.defineProperty(t,"nToBigInt",{enumerable:!0,get:function(){return a.nToBigInt}}),Object.defineProperty(t,"nToHex",{enumerable:!0,get:function(){return f.nToHex}}),Object.defineProperty(t,"nToU8a",{enumerable:!0,get:function(){return d.nToU8a}});var i=n(9717);Object.keys(i).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===i[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}}))}));var o=n(3398),a=n(5832),s=n(8068),c=n(3980),f=n(6946),d=n(7275)},8068:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nMax=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];(0,r.assert)(t.length>=1,"Must provide one or more bigint arguments");let i=t[0];for(let e=1;e<t.length;e++)t[e]>i&&(i=t[e]);return i};var r=n(7146)},3980:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nMin=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];(0,r.assert)(t.length>=1,"Must provide one or more bigint arguments");let i=t[0];for(let e=1;e<t.length;e++)t[e]<i&&(i=t[e]);return i};var r=n(7146)},3398:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nSqrt=function(e){const t=(0,o.nToBigInt)(e);if((0,r.assert)(t>=i._0n,"square root of negative numbers is not supported"),t<=i._2pow53n)return BigInt(Math.floor(Math.sqrt(Number(t))));let n=a;for(;;){const e=t/n+n>>i._1n;if(n===e||n===e-i._1n)return n;n=e}};var r=n(7146),i=n(9717),o=n(5832);const a=(0,i._n)(94906265)},5832:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nToBigInt=function(e){return"bigint"==typeof e?e:e?(0,o.isHex)(e)?(0,r.hexToBigInt)(e.toString()):(0,i.isBn)(e)?BigInt(e.toString()):(0,a.isToBigInt)(e)?e.toBigInt():(0,s.isToBn)(e)?BigInt(e.toBn().toString()):BigInt(e):BigInt(0)};var r=n(3526),i=n(3023),o=n(6419),a=n(5418),s=n(3623)},6946:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nToHex=function(e,t){return e?(0,i.u8aToHex)((0,o.nToU8a)(e,(0,r.objectSpread)({isLe:!1,isNegative:!1},t))):"0x00"};var r=n(2378),i=n(63),o=n(7275)},7275:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nToU8a=function(e,t){const n=(0,r.objectSpread)({bitLength:-1,isLe:!0,isNegative:!1},t),c=(0,o.nToBigInt)(e);if(c===i._0n)return function(e){let{bitLength:t=0}=e;return-1===t?new Uint8Array:new Uint8Array(Math.ceil(t/8))}(n);const f=function(e,t){let{isLe:n,isNegative:r}=t;const o=[];for(r&&(e=(e+i._1n)*-i._1n);e!==i._0n;){const t=e%a,i=Number(r?t^s:t);n?o.push(i):o.unshift(i),e=(e-t)/a}return Uint8Array.from(o)}(c,n);if(-1===n.bitLength)return f;const d=Math.ceil((n.bitLength||0)/8),u=new Uint8Array(d);return n.isNegative&&u.fill(255),u.set(f,n.isLe?0:d-f.length),u};var r=n(2378),i=n(9717),o=n(5832);const a=(0,i._n)(256),s=(0,i._n)(255)},2642:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"BN",{enumerable:!0,get:function(){return i.default}});var i=r(n(3550))},4635:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BN_ZERO=t.BN_TWO=t.BN_THREE=t.BN_THOUSAND=t.BN_TEN=t.BN_SIX=t.BN_SEVEN=t.BN_QUINTILL=t.BN_ONE=t.BN_NINE=t.BN_MILLION=t.BN_MAX_INTEGER=t.BN_HUNDRED=t.BN_FOUR=t.BN_FIVE=t.BN_EIGHT=t.BN_BILLION=void 0;var r=n(2642);const i=new r.BN(0);t.BN_ZERO=i;const o=new r.BN(1);t.BN_ONE=o;const a=new r.BN(2);t.BN_TWO=a;const s=new r.BN(3);t.BN_THREE=s;const c=new r.BN(4);t.BN_FOUR=c;const f=new r.BN(5);t.BN_FIVE=f;const d=new r.BN(6);t.BN_SIX=d;const u=new r.BN(7);t.BN_SEVEN=u;const l=new r.BN(8);t.BN_EIGHT=l;const h=new r.BN(9);t.BN_NINE=h;const b=new r.BN(10);t.BN_TEN=b;const p=new r.BN(100);t.BN_HUNDRED=p;const y=new r.BN(1e3);t.BN_THOUSAND=y;const v=new r.BN(1e6);t.BN_MILLION=v;const m=new r.BN(1e9);t.BN_BILLION=m;const g=m.mul(m);t.BN_QUINTILL=g;const w=new r.BN(Number.MAX_SAFE_INTEGER);t.BN_MAX_INTEGER=w},637:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"bnFromHex",{enumerable:!0,get:function(){return r.hexToBn}});var r=n(4325)},2125:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r={BN:!0,bnFromHex:!0,bnMax:!0,bnMin:!0,bnSqrt:!0,bnToBn:!0,bnToHex:!0,bnToU8a:!0};Object.defineProperty(t,"BN",{enumerable:!0,get:function(){return o.BN}}),Object.defineProperty(t,"bnFromHex",{enumerable:!0,get:function(){return a.bnFromHex}}),Object.defineProperty(t,"bnMax",{enumerable:!0,get:function(){return s.bnMax}}),Object.defineProperty(t,"bnMin",{enumerable:!0,get:function(){return c.bnMin}}),Object.defineProperty(t,"bnSqrt",{enumerable:!0,get:function(){return f.bnSqrt}}),Object.defineProperty(t,"bnToBn",{enumerable:!0,get:function(){return d.bnToBn}}),Object.defineProperty(t,"bnToHex",{enumerable:!0,get:function(){return u.bnToHex}}),Object.defineProperty(t,"bnToU8a",{enumerable:!0,get:function(){return l.bnToU8a}});var i=n(4635);Object.keys(i).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===i[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}}))}));var o=n(2642),a=n(637),s=n(7883),c=n(3158),f=n(7869),d=n(9820),u=n(9468),l=n(5938)},7883:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnMax=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return o("max",t)},t.checkMaxMin=o;var r=n(7146),i=n(2642);function o(e,t){(0,r.assert)(t.length>=1,"Must provide one or more BN arguments");let n=t[0];for(let r=1;r<t.length;r++)n=i.BN[e](n,t[r]);return n}},3158:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnMin=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return(0,r.checkMaxMin)("min",t)};var r=n(7883)},7869:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnSqrt=function(e){const t=(0,a.bnToBn)(e);if((0,r.assert)(t.gte(o.BN_ZERO),"square root of negative numbers is not supported"),t.lte(o.BN_MAX_INTEGER))return new i.BN(Math.floor(Math.sqrt(t.toNumber())));let n=s.clone();for(;;){const e=t.div(n).iadd(n).ishrn(1);if(n.eq(e)||n.eq(e.sub(o.BN_ONE)))return n;n=e}};var r=n(7146),i=n(2642),o=n(4635),a=n(9820);const s=new i.BN(94906265)},9820:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnToBn=function(e){return c.BN.isBN(e)?e:e?(0,o.isHex)(e)?(0,r.hexToBn)(e.toString()):(0,i.isBigInt)(e)?new c.BN(e.toString()):(0,s.isToBn)(e)?e.toBn():(0,a.isToBigInt)(e)?new c.BN(e.toBigInt().toString()):new c.BN(e):new c.BN(0)};var r=n(4325),i=n(4052),o=n(6419),a=n(5418),s=n(3623),c=n(2642)},9468:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnToHex=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c,n=arguments.length>2?arguments[2]:void 0;return e?(0,o.u8aToHex)((0,a.bnToU8a)(e,(0,i.objectSpread)({isLe:!1,isNegative:!1},(0,r.isNumber)(t)?{bitLength:t,isLe:n}:t))):s};var r=n(8307),i=n(2378),o=n(63),a=n(5938);const s="0x00",c={bitLength:-1,isLe:!1,isNegative:!1}},5938:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bnToU8a=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a,n=arguments.length>2?arguments[2]:void 0;const f=(0,i.objectSpread)({bitLength:-1,isLe:!0,isNegative:!1},(0,r.isNumber)(t)?{bitLength:t,isLe:n}:t),d=(0,o.bnToBn)(e),u=-1===f.bitLength?Math.ceil(d.bitLength()/8):Math.ceil((f.bitLength||0)/8);return e?c(d,u,f):s(u,f)};var r=n(8307),i=n(2378),o=n(9820);const a={bitLength:-1,isLe:!0,isNegative:!1};function s(e,t){return-1===t.bitLength?new Uint8Array:new Uint8Array(e)}function c(e,t,n){let{isLe:r,isNegative:i}=n;const o=new Uint8Array(t),a=i?e.toTwos(8*t):e;return o.set(a.toArray(r?"le":"be",t),0),o}},110:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"bufferToU8a",{enumerable:!0,get:function(){return r.bufferToU8a}});var r=n(8455)},8455:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bufferToU8a=function(e){return new Uint8Array(e||[])}},2601:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r={packageInfo:!0};Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return i.packageInfo}});var i=n(7957),o=n(2439);Object.keys(o).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===o[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}}))}));var a=n(7146);Object.keys(a).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===a[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}}))}));var s=n(6202);Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===s[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}}))}));var c=n(2125);Object.keys(c).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===c[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return c[e]}}))}));var f=n(110);Object.keys(f).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===f[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return f[e]}}))}));var d=n(277);Object.keys(d).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===d[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return d[e]}}))}));var u=n(9283);Object.keys(u).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===u[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return u[e]}}))}));var l=n(8179);Object.keys(l).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===l[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return l[e]}}))}));var h=n(995);Object.keys(h).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===h[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return h[e]}}))}));var b=n(5433);Object.keys(b).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===b[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return b[e]}}))}));var p=n(5222);Object.keys(p).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===p[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return p[e]}}))}));var y=n(6699);Object.keys(y).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===y[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return y[e]}}))}));var v=n(3717);Object.keys(v).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===v[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return v[e]}}))}));var m=n(515);Object.keys(m).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===m[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return m[e]}}))}));var g=n(4740);Object.keys(g).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===g[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return g[e]}}))}));var w=n(9700);Object.keys(w).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===w[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return w[e]}}))}));var P=n(3368);Object.keys(P).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===P[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return P[e]}}))}));var x=n(4096);Object.keys(x).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===x[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return x[e]}}))}));var M=n(6841);Object.keys(M).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===M[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return M[e]}}))}));var O=n(63);Object.keys(O).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===O[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return O[e]}}))}));var j=n(6883);Object.keys(j).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(r,e)||e in t&&t[e]===j[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return j[e]}}))}))},6752:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.compactAddLength=function(e){return(0,r.u8aConcat)((0,i.compactToU8a)(e.length),e)};var r=n(63),i=n(1541)},6023:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.compactFromU8a=function(e){const t=(0,i.u8aToU8a)(e),n=3&t[0];if(0===n)return[1,new r.BN(t[0]).ishrn(2)];if(1===n)return[2,(0,i.u8aToBn)(t.subarray(0,2),!0).ishrn(2)];if(2===n)return[4,(0,i.u8aToBn)(t.subarray(0,4),!0).ishrn(2)];const o=1+new r.BN(t[0]).ishrn(2).iadd(r.BN_FOUR).toNumber();return[o,(0,i.u8aToBn)(t.subarray(1,o),!0)]};var r=n(2125),i=n(63)},277:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"compactAddLength",{enumerable:!0,get:function(){return r.compactAddLength}}),Object.defineProperty(t,"compactFromU8a",{enumerable:!0,get:function(){return o.compactFromU8a}}),Object.defineProperty(t,"compactStripLength",{enumerable:!0,get:function(){return i.compactStripLength}}),Object.defineProperty(t,"compactToU8a",{enumerable:!0,get:function(){return a.compactToU8a}});var r=n(6752),i=n(8836),o=n(6023),a=n(1541)},8836:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.compactStripLength=function(e){const[t,n]=(0,r.compactFromU8a)(e),i=t+n.toNumber();return[i,e.subarray(t,i)]};var r=n(6023)},1541:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.compactToU8a=function(e){const t=(0,i.bnToBn)(e);if(t.lte(a))return new Uint8Array([t.toNumber()<<2]);if(t.lte(s))return(0,i.bnToU8a)(t.shln(2).iadd(i.BN_ONE),16,!0);if(t.lte(c))return(0,i.bnToU8a)(t.shln(2).iadd(i.BN_TWO),32,!0);const n=(0,i.bnToU8a)(t);let f=n.length;for(;0===n[f-1];)f--;return(0,r.assert)(f>=4,"Invalid length, previous checks match anything less than 2^30"),(0,o.u8aConcat)([3+(f-4<<2)],n.subarray(0,f))};var r=n(7146),i=n(2125),o=n(63);const a=i.BN_TWO.pow(new i.BN(6)).isub(i.BN_ONE),s=i.BN_TWO.pow(new i.BN(14)).isub(i.BN_ONE),c=i.BN_TWO.pow(new i.BN(30)).isub(i.BN_ONE)},8611:(e,t,n)=>{"use strict";var r=n(174),i=n(9778),o=n(7957);(0,n(6883).detectPackage)(o.packageInfo,"/",[r.packageInfo,i.packageInfo])},9283:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.extractTime=s;var r=n(2378);function i(e,t){return{days:e.days+t.days,hours:e.hours+t.hours,milliseconds:e.milliseconds+t.milliseconds,minutes:e.minutes+t.minutes,seconds:e.seconds+t.seconds}}const o={days:0,hours:0,milliseconds:0,minutes:0,seconds:0};function a(e){const t=e/1e3;if(t<60){const n=Math.floor(t);return i((0,r.objectSpread)({},o,{seconds:n}),s(e-1e3*n))}return function(e,t){const n=t/60;if(n<60){const t=Math.floor(n);return i((0,r.objectSpread)({},o,{minutes:t}),s(e-60*t*1e3))}return function(e,t){const n=t/60;if(n<24){const t=Math.floor(n);return i((0,r.objectSpread)({},o,{hours:t}),s(e-3600*t*1e3))}return function(e,t){const n=Math.floor(t/24);return i((0,r.objectSpread)({},o,{days:n}),s(e-86400*n*1e3))}(e,n)}(e,n)}(e,t)}function s(e){return e?e<1e3?(0,r.objectSpread)({},o,{milliseconds:e}):a(e):o}},1410:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatBalance=void 0;var r=n(9820),i=n(6503),o=n(7789),a=n(3341),s=n(5283);const c=s.SI[s.SI_MID].text;let f=0,d=c;const u=function(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:f,o=(0,r.bnToBn)(e).toString();if(0===o.length||"0"===o)return"0";const c=o[0].startsWith("-");c&&(o=o.substr(1));const{decimals:d=n,forceUnit:u,withSi:l=!0,withSiFull:h=!1,withUnit:b=!0}=(0,i.isBoolean)(t)?{withSi:t}:t,p=(0,s.calcSi)(o,d,u),y=o.length-(d+p.power),v=o.substr(0,y),m=y<0?0-y:0,g=`${`${new Array(m+1).join("0")}${o}`.substr(y<0?0:y)}0000`.substr(0,4),w=l||h?"-"===p.value?b?` ${(0,i.isBoolean)(b)?p.text:b}`:"":` ${h?p.text:p.value}${b?`${h?" ":""}${(0,i.isBoolean)(b)?s.SI[s.SI_MID].text:b}`:""}`:"";return`${c?"-":""}${(0,a.formatDecimal)(v||"0")}.${g}${w}`};t.formatBalance=u,u.calcSi=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:f;return(0,s.calcSi)(e,t)},u.findSi=s.findSi,u.getDefaults=()=>({decimals:f,unit:d}),u.getOptions=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:f;return s.SI.filter((t=>{let{power:n}=t;return!(n<0)||e+n>=0}))},u.setDefaults=e=>{let{decimals:t,unit:n}=e;f=(0,o.isUndefined)(t)?f:Array.isArray(t)?t[0]:t,d=(0,o.isUndefined)(n)?d:Array.isArray(n)?n[0]:n,s.SI[s.SI_MID].text=d}},5538:(e,t)=>{"use strict";function n(e){return e.toString().padStart(2,"0")}Object.defineProperty(t,"__esModule",{value:!0}),t.formatDate=function(e){return`${e.getFullYear().toString()}-${n(e.getMonth()+1)}-${n(e.getDate())} ${n(e.getHours())}:${n(e.getMinutes())}:${n(e.getSeconds())}`}},3341:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatDecimal=function(e){const t=e[0].startsWith("-"),r=t?e.substr(1).match(n):e.match(n);return r?`${t?"-":""}${r.join(",")}`:e};const n=new RegExp("(\\d+?)(?=(\\d{3})+(?!\\d)|$)","g")},6010:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatElapsed=function(e,t){const n=e&&e.getTime()||0,i=t instanceof Date?t.getTime():(0,r.bnToBn)(t).toNumber();return n&&i?(o=Math.max(Math.abs(n-i),0)/1e3)<15?`${o.toFixed(1)}s`:o<60?(0|o)+"s":o<3600?(o/60|0)+"m":(o/3600|0)+"h":"0.0s";var o};var r=n(9820)},8989:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatNumber=function(e){return(0,i.formatDecimal)((0,r.bnToBn)(e).toString())};var r=n(9820),i=n(3341)},8179:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"calcSi",{enumerable:!0,get:function(){return c.calcSi}}),Object.defineProperty(t,"findSi",{enumerable:!0,get:function(){return c.findSi}}),Object.defineProperty(t,"formatBalance",{enumerable:!0,get:function(){return r.formatBalance}}),Object.defineProperty(t,"formatDate",{enumerable:!0,get:function(){return i.formatDate}}),Object.defineProperty(t,"formatDecimal",{enumerable:!0,get:function(){return o.formatDecimal}}),Object.defineProperty(t,"formatElapsed",{enumerable:!0,get:function(){return a.formatElapsed}}),Object.defineProperty(t,"formatNumber",{enumerable:!0,get:function(){return s.formatNumber}});var r=n(1410),i=n(5538),o=n(3341),a=n(6010),s=n(8989),c=n(5283)},5283:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SI_MID=t.SI=void 0,t.calcSi=function(e,t,i){if(i)return r(i);const o=7+Math.ceil((e.length-t)/3);return n[o]||n[o<0?0:n.length-1]},t.findSi=r,t.SI_MID=8;const n=[{power:-24,text:"yocto",value:"y"},{power:-21,text:"zepto",value:"z"},{power:-18,text:"atto",value:"a"},{power:-15,text:"femto",value:"f"},{power:-12,text:"pico",value:"p"},{power:-9,text:"nano",value:"n"},{power:-6,text:"micro",value:"µ"},{power:-3,text:"milli",value:"m"},{power:0,text:"Unit",value:"-"},{power:3,text:"Kilo",value:"k"},{power:6,text:"Mill",value:"M"},{power:9,text:"Bill",value:"B"},{power:12,text:"Tril",value:"T"},{power:15,text:"Peta",value:"P"},{power:18,text:"Exa",value:"E"},{power:21,text:"Zeta",value:"Z"},{power:24,text:"Yotta",value:"Y"}];function r(e){for(let t=0;t<n.length;t++)if(n[t].value===e)return n[t];return n[8]}t.SI=n},995:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hasWasm=t.hasProcess=t.hasDirname=t.hasBuffer=t.hasBigInt=void 0;const n="undefined"!=typeof BigInt;t.hasBigInt=n;const r="undefined"!=typeof Buffer;t.hasBuffer=r,t.hasDirname=!0;const i="object"==typeof process;t.hasProcess=i;const o="undefined"!=typeof WebAssembly;t.hasWasm=o},5570:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexAddPrefix=function(e){return e&&(0,r.hexHasPrefix)(e)?e:`0x${e&&e.length%2==1?"0":""}${e||""}`};var r=n(7306)},1689:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.U8_TO_HEX=t.U16_TO_HEX=t.HEX_TO_U8=t.HEX_TO_U16=void 0;const n=new Array(256);t.U8_TO_HEX=n;const r=new Array(65536);t.U16_TO_HEX=r;const i={};t.HEX_TO_U8=i;const o={};t.HEX_TO_U16=o;for(let e=0;e<256;e++){const t=e.toString(16).padStart(2,"0");n[e]=t,i[t]=e}for(let e=0;e<256;e++)for(let t=0;t<256;t++){const i=n[e]+n[t],a=e<<8|t;r[a]=i,o[i]=a}},1685:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexFixLength=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o=Math.ceil(t/4),a=o+2;return(0,r.hexAddPrefix)(-1===t||e.length===a||!n&&e.length<a?(0,i.hexStripPrefix)(e):e.length>a?(0,i.hexStripPrefix)(e).slice(-1*o):`${"0".repeat(o)}${(0,i.hexStripPrefix)(e)}`.slice(-1*o))};var r=n(5570),i=n(4910)},7306:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexHasPrefix=function(e){return!!e&&(0,r.isHex)(e,-1)};var r=n(6419)},5433:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"hexAddPrefix",{enumerable:!0,get:function(){return r.hexAddPrefix}}),Object.defineProperty(t,"hexFixLength",{enumerable:!0,get:function(){return i.hexFixLength}}),Object.defineProperty(t,"hexHasPrefix",{enumerable:!0,get:function(){return o.hexHasPrefix}}),Object.defineProperty(t,"hexStripPrefix",{enumerable:!0,get:function(){return a.hexStripPrefix}}),Object.defineProperty(t,"hexToBigInt",{enumerable:!0,get:function(){return s.hexToBigInt}}),Object.defineProperty(t,"hexToBn",{enumerable:!0,get:function(){return c.hexToBn}}),Object.defineProperty(t,"hexToNumber",{enumerable:!0,get:function(){return f.hexToNumber}}),Object.defineProperty(t,"hexToString",{enumerable:!0,get:function(){return d.hexToString}}),Object.defineProperty(t,"hexToU8a",{enumerable:!0,get:function(){return u.hexToU8a}});var r=n(5570),i=n(1685),o=n(7306),a=n(4910),s=n(3526),c=n(4325),f=n(2204),d=n(7700),u=n(9808)},4910:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexStripPrefix=function(e){if(!e||"0x"===e)return"";if(r.REGEX_HEX_PREFIXED.test(e))return e.substr(2);if(r.REGEX_HEX_NOPREFIX.test(e))return e;throw new Error(`Expected hex value to convert, found '${e}'`)};var r=n(6419)},3526:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToBigInt=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return e&&"0x"!==e?(0,i.u8aToBigInt)((0,o.hexToU8a)(e),(0,r.objectSpread)({isLe:!1,isNegative:!1},t)):BigInt(0)};var r=n(2378),i=n(3592),o=n(9808)},4325:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToBn=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s;if(!e||"0x"===e)return new r.BN(0);const{isLe:n,isNegative:c}=(0,o.objectSpread)({isLe:!1,isNegative:!1},(0,i.isBoolean)(t)?{isLe:t}:t),f=(0,a.hexStripPrefix)(e),d=new r.BN(f,16,n?"le":"be");return c?d.fromTwos(4*f.length):d};var r=n(2642),i=n(6503),o=n(2378),a=n(4910);const s={isLe:!1,isNegative:!1}},2204:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToNumber=function(e){return e?(0,r.hexToBn)(e).toNumber():NaN};var r=n(4325)},7700:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToString=function(e){return(0,r.u8aToString)((0,i.hexToU8a)(e))};var r=n(4540),i=n(9808)},9808:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexToU8a=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;if(!e)return new Uint8Array;const n=(0,i.hexStripPrefix)(e).toLowerCase(),o=n.length/2,a=Math.ceil(-1===t?o:t/8),s=new Uint8Array(a),c=a>o?a-o:0,f=new DataView(s.buffer,c),d=(a-c)%2,u=a-c-d;for(let e=0;e<u;e+=2)f.setUint16(e,r.HEX_TO_U16[n.substr(2*e,4)]);return d&&f.setUint8(u,r.HEX_TO_U8[n.substr(n.length-2,2)]),s};var r=n(1689),i=n(4910)},9215:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(8611);var r=n(2601);Object.keys(r).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===r[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return r[e]}}))}))},9971:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isArray=function(e){return Array.isArray(e)}},3217:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isAscii=function(e){const t=(0,o.isString)(e);return e?t&&!(0,i.isHex)(e)?e.toString().split("").every(c):(0,r.u8aToU8a)(e).every(s):t};var r=n(4644),i=n(6419),o=n(6227);const a=[9,10,13];function s(e){return e<127&&(e>=32||a.includes(e))}function c(e){return s(e.charCodeAt(0))}},4052:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBigInt=function(e){return"bigint"==typeof e||e instanceof BigInt}},3023:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBn=function(e){return r.BN.isBN(e)};var r=n(2642)},6503:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBoolean=function(e){return"boolean"==typeof e}},4731:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isBuffer=function(e){return r.hasBuffer&&Buffer.isBuffer(e)};var r=n(995)},7870:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isChildClass=function(e,t){return!!t&&(e===t||e.isPrototypeOf(t))}},7995:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isCodec=function(e){return(0,i.isObject)(e)&&(0,r.isFunction)(e.toU8a)&&(0,i.isObject)(e.registry)&&(0,r.isFunction)(e.registry.get)};var r=n(8178),i=n(9011)},8555:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isCompact=function(e){return(0,i.isObject)(e)&&(0,r.isFunction)(e.toBigInt)&&(0,r.isFunction)(e.toBn)&&(0,r.isFunction)(e.toNumber)&&(0,r.isFunction)(e.unwrap)};var r=n(8178),i=n(9011)},3814:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isError=function(e){return e instanceof Error}},8178:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isFunction=function(e){return"function"==typeof e}},6419:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.REGEX_HEX_PREFIXED=t.REGEX_HEX_NOPREFIX=void 0,t.isHex=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return!("string"!=typeof e||"0x"!==e&&!n.test(e)||(-1===t?!r&&e.length%2!=0:e.length!==2+Math.ceil(t/4)))};const n=/^0x[\da-fA-F]+$/;t.REGEX_HEX_PREFIXED=n,t.REGEX_HEX_NOPREFIX=/^[\da-fA-F]+$/},5222:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"isArray",{enumerable:!0,get:function(){return r.isArray}}),Object.defineProperty(t,"isAscii",{enumerable:!0,get:function(){return i.isAscii}}),Object.defineProperty(t,"isBigInt",{enumerable:!0,get:function(){return o.isBigInt}}),Object.defineProperty(t,"isBn",{enumerable:!0,get:function(){return a.isBn}}),Object.defineProperty(t,"isBoolean",{enumerable:!0,get:function(){return c.isBoolean}}),Object.defineProperty(t,"isBuffer",{enumerable:!0,get:function(){return s.isBuffer}}),Object.defineProperty(t,"isChildClass",{enumerable:!0,get:function(){return f.isChildClass}}),Object.defineProperty(t,"isCodec",{enumerable:!0,get:function(){return d.isCodec}}),Object.defineProperty(t,"isCompact",{enumerable:!0,get:function(){return u.isCompact}}),Object.defineProperty(t,"isError",{enumerable:!0,get:function(){return l.isError}}),Object.defineProperty(t,"isFunction",{enumerable:!0,get:function(){return h.isFunction}}),Object.defineProperty(t,"isHex",{enumerable:!0,get:function(){return b.isHex}}),Object.defineProperty(t,"isInstanceOf",{enumerable:!0,get:function(){return p.isInstanceOf}}),Object.defineProperty(t,"isIp",{enumerable:!0,get:function(){return y.isIp}}),Object.defineProperty(t,"isJsonObject",{enumerable:!0,get:function(){return v.isJsonObject}}),Object.defineProperty(t,"isNull",{enumerable:!0,get:function(){return m.isNull}}),Object.defineProperty(t,"isNumber",{enumerable:!0,get:function(){return g.isNumber}}),Object.defineProperty(t,"isObject",{enumerable:!0,get:function(){return w.isObject}}),Object.defineProperty(t,"isObservable",{enumerable:!0,get:function(){return P.isObservable}}),Object.defineProperty(t,"isString",{enumerable:!0,get:function(){return x.isString}}),Object.defineProperty(t,"isTestChain",{enumerable:!0,get:function(){return M.isTestChain}}),Object.defineProperty(t,"isToBigInt",{enumerable:!0,get:function(){return O.isToBigInt}}),Object.defineProperty(t,"isToBn",{enumerable:!0,get:function(){return j.isToBn}}),Object.defineProperty(t,"isU8a",{enumerable:!0,get:function(){return k.isU8a}}),Object.defineProperty(t,"isUndefined",{enumerable:!0,get:function(){return A.isUndefined}}),Object.defineProperty(t,"isUtf8",{enumerable:!0,get:function(){return T.isUtf8}}),Object.defineProperty(t,"isWasm",{enumerable:!0,get:function(){return E.isWasm}});var r=n(9971),i=n(3217),o=n(4052),a=n(3023),s=n(4731),c=n(6503),f=n(7870),d=n(7995),u=n(8555),l=n(3814),h=n(8178),b=n(6419),p=n(6633),y=n(1378),v=n(8992),m=n(8134),g=n(8307),w=n(9011),P=n(7591),x=n(6227),M=n(6893),O=n(5418),j=n(3623),k=n(2423),A=n(7789),T=n(117),E=n(9428)},6633:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isInstanceOf=function(e,t){return e instanceof t}},1378:(e,t,n)=>{"use strict";var r=n(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.isIp=function(e,t){return"v4"===t?i.default.v4({exact:!0}).test(e):"v6"===t?i.default.v6({exact:!0}).test(e):(0,i.default)({exact:!0}).test(e)};var i=r(n(1476))},8992:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isJsonObject=function(e){const t="string"!=typeof e?(0,r.stringify)(e):e;try{const e=JSON.parse(t);return"object"==typeof e&&null!==e}catch(e){return!1}};var r=n(6841)},8134:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isNull=function(e){return null===e}},8307:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isNumber=function(e){return"number"==typeof e}},9011:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isObject=function(e){return!!e&&"object"==typeof e}},7591:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isObservable=function(e){return(0,i.isObject)(e)&&(0,r.isFunction)(e.next)};var r=n(8178),i=n(9011)},6227:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isString=function(e){return"string"==typeof e||e instanceof String}},6893:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isTestChain=function(e){return!!e&&!!n.test(e.toString())};const n=/(Development|Local Testnet)$/},5418:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isToBigInt=function(e){return!!e&&(0,r.isFunction)(e.toBigInt)};var r=n(8178)},3623:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isToBn=function(e){return!!e&&(0,r.isFunction)(e.toBn)};var r=n(8178)},2423:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isU8a=function(e){return e instanceof Uint8Array}},7789:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isUndefined=function(e){return void 0===e}},117:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isUtf8=function(e){if(!e)return(0,i.isString)(e);const t=(0,r.u8aToU8a)(e),n=t.length;let o=0;for(;o<n;)if(t[o]<=127)o+=1;else if(t[o]>=194&&t[o]<=223){if(!(o+1<n))return!1;if(t[o+1]<128||t[o+1]>191)return!1;o+=2}else if(224===t[o]){if(!(o+2<n))return!1;if(t[o+1]<160||t[o+1]>191)return!1;if(t[o+2]<128||t[o+2]>191)return!1;o+=3}else if(t[o]>=225&&t[o]<=236){if(!(o+2<n))return!1;if(t[o+1]<128||t[o+1]>191)return!1;if(t[o+2]<128||t[o+2]>191)return!1;o+=3}else if(237===t[o]){if(!(o+2<n))return!1;if(t[o+1]<128||t[o+1]>159)return!1;if(t[o+2]<128||t[o+2]>191)return!1;o+=3}else if(t[o]>=238&&t[o]<=239){if(!(o+2<n))return!1;if(t[o+1]<128||t[o+1]>191)return!1;if(t[o+2]<128||t[o+2]>191)return!1;o+=3}else if(240===t[o]){if(!(o+3<n))return!1;if(t[o+1]<144||t[o+1]>191)return!1;if(t[o+2]<128||t[o+2]>191)return!1;if(t[o+3]<128||t[o+3]>191)return!1;o+=4}else if(t[o]>=241&&t[o]<=243){if(!(o+3<n))return!1;if(t[o+1]<128||t[o+1]>191)return!1;if(t[o+2]<128||t[o+2]>191)return!1;if(t[o+3]<128||t[o+3]>191)return!1;o+=4}else{if(244!==t[o])return!1;if(!(o+3<n))return!1;if(t[o+1]<128||t[o+1]>143)return!1;if(t[o+2]<128||t[o+2]>191)return!1;if(t[o+3]<128||t[o+3]>191)return!1;o+=4}return!0};var r=n(4644),i=n(6227)},9428:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isWasm=function(e){return!!e&&(0,r.u8aEq)(e.subarray(0,4),i)};var r=n(5069);const i=new Uint8Array([0,97,115,109])},6699:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.lazyMethod=i,t.lazyMethods=function(e,t,n,r){for(let o=0;o<t.length;o++)i(e,t[o],n,r);return e};var r=n(7789);function i(e,t,n,i){const o=i?i(t):t.toString();let a;Object.defineProperty(e,o,{configurable:!0,enumerable:!0,get:function(){if((0,r.isUndefined)(a)){a=n(t);try{Object.defineProperty(this,o,{value:a})}catch{}}return a}})}},3717:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.logger=function(e){const t=`${e.toUpperCase()}:`.padStart(16),[n,r]=function(e){const t=(u.hasProcess?process:{}).env||{},n=parseInt(t.DEBUG_MAX||"-1",10);return[g((t.DEBUG||"").toLowerCase().split(","),e),isNaN(n)?-1:n]}(e.toLowerCase());return{debug:n?function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];return p("debug",t,n,r)}:y,error:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return p("error",t,n)},log:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return p("log",t,n)},noop:y,warn:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return p("warn",t,n)}}},t.loggerFormat=h;var r=n(5538),i=n(3023),o=n(4731),a=n(8178),s=n(9011),c=n(2423),f=n(5626),d=n(4644),u=n(995);const l={debug:"log",error:"error",log:"log",warn:"warn"};function h(e){return Array.isArray(e)?e.map(h):(0,i.isBn)(e)?e.toString():(0,c.isU8a)(e)||(0,o.isBuffer)(e)?(0,f.u8aToHex)((0,d.u8aToU8a)(e)):function(e){if(e&&(0,s.isObject)(e)&&e.constructor===Object){const t={};for(const n of Object.keys(e))t[n]=h(e[n]);return t}return e}(e)}function b(e){return t=>{if(e<=0)return t;const n=`${t}`;return n.length<e?t:`${n.substr(0,e)} ...`}}function p(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;if(1===n.length&&(0,a.isFunction)(n[0])){const r=n[0]();return p(e,t,Array.isArray(r)?r:[r],i)}console[l[e]]((0,r.formatDate)(new Date),t,...n.map(h).map(b(i)))}function y(){}function v(e,t){return!!e&&("*"===e||t===e||e.endsWith("*")&&t.startsWith(e.slice(0,-1)))}function m(e,t){return!!e&&e.startsWith("-")&&(t===e.slice(1)||e.endsWith("*")&&t.startsWith(e.slice(1,-1)))}function g(e,t){let n=!1;for(const r of e)v(r,t)?n=!0:m(r,t)&&(n=!1);return n}},515:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.memoize=function(e){let{getInstanceId:t=o}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n={},a=function(){for(var o=arguments.length,a=new Array(o),s=0;s<o;s++)a[s]=arguments[s];const c=(0,i.stringify)(a),f=t();return n[f]||(n[f]={}),(0,r.isUndefined)(n[f][c])&&(n[f][c]=e(...a)),n[f][c]};return a.unmemoize=function(){for(var e=arguments.length,o=new Array(e),a=0;a<e;a++)o[a]=arguments[a];const s=(0,i.stringify)(o),c=t();n[c]&&!(0,r.isUndefined)(n[c][s])&&delete n[c][s]},a};var r=n(7789),i=n(6841);function o(){return"none"}},4740:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"numberToHex",{enumerable:!0,get:function(){return r.numberToHex}}),Object.defineProperty(t,"numberToU8a",{enumerable:!0,get:function(){return i.numberToU8a}});var r=n(403),i=n(4092)},403:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.numberToHex=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;if((0,o.isUndefined)(e)||(0,i.isNull)(e)||isNaN(e))return"0x";const n=e.toString(16);return(0,r.hexFixLength)(n.length%2?`0${n}`:n,t,!0)};var r=n(1685),i=n(8134),o=n(7789)},4092:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.numberToU8a=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return(0,o.isUndefined)(e)||(0,i.isNull)(e)||isNaN(e)?new Uint8Array:(0,r.hexToU8a)((0,a.numberToHex)(e,t))};var r=n(9808),i=n(8134),o=n(7789),a=n(403)},3984:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectClear=function(e){const t=Object.keys(e);for(let n=0;n<t.length;n++)delete e[t[n]];return e}},9512:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectCopy=function(e){return(0,r.objectSpread)({},e)};var r=n(2378)},1578:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectEntries=function(e){return Object.entries(e)}},9700:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"objectClear",{enumerable:!0,get:function(){return r.objectClear}}),Object.defineProperty(t,"objectCopy",{enumerable:!0,get:function(){return i.objectCopy}}),Object.defineProperty(t,"objectEntries",{enumerable:!0,get:function(){return o.objectEntries}}),Object.defineProperty(t,"objectKeys",{enumerable:!0,get:function(){return a.objectKeys}}),Object.defineProperty(t,"objectProperties",{enumerable:!0,get:function(){return s.objectProperties}}),Object.defineProperty(t,"objectProperty",{enumerable:!0,get:function(){return s.objectProperty}}),Object.defineProperty(t,"objectSpread",{enumerable:!0,get:function(){return c.objectSpread}}),Object.defineProperty(t,"objectValues",{enumerable:!0,get:function(){return f.objectValues}});var r=n(3984),i=n(9512),o=n(1578),a=n(8522),s=n(5600),c=n(2378),f=n(837)},8522:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectKeys=function(e){return Object.keys(e)}},5600:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectProperties=function(e,t,n){for(let r=0;r<t.length;r++)i(e,t[r],(e=>n(e,r)))},t.objectProperty=i;var r=n(7789);function i(e,t,n){!Object.prototype.hasOwnProperty.call(e,t)&&(0,r.isUndefined)(e[t])&&Object.defineProperty(e,t,{enumerable:!0,get:()=>n(t)})}},2378:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectSpread=function(e){for(let t=0;t<(arguments.length<=1?0:arguments.length-1);t++){const n=t+1<1||arguments.length<=t+1?void 0:arguments[t+1];if(n){const t=(0,r.objectKeys)(n);for(let r=0;r<t.length;r++){const i=t[r];e[i]=n[i]}}}return e};var r=n(8522)},837:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.objectValues=function(e){return Object.values(e)}},7957:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/util",version:"8.0.5"}},3368:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.promisify=function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),i=2;i<n;i++)r[i-2]=arguments[i];return new Promise(((n,i)=>{t.apply(e,r.concat(((e,t)=>{e?i(e):n(t)})))}))}},3402:(e,t)=>{"use strict";function n(e){return t=>t.toString().replace(/[-_., ]+/g," ").trim().split(" ").map(((t,n)=>e(t[0],n)+(t.toUpperCase()===t?t.slice(1).toLowerCase():t.slice(1)))).join("")}Object.defineProperty(t,"__esModule",{value:!0}),t.stringPascalCase=t.stringCamelCase=void 0;const r=n(((e,t)=>t?e.toUpperCase():e.toLowerCase()));t.stringCamelCase=r;const i=n((e=>e.toUpperCase()));t.stringPascalCase=i},4096:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"stringCamelCase",{enumerable:!0,get:function(){return r.stringCamelCase}}),Object.defineProperty(t,"stringLowerFirst",{enumerable:!0,get:function(){return i.stringLowerFirst}}),Object.defineProperty(t,"stringPascalCase",{enumerable:!0,get:function(){return r.stringPascalCase}}),Object.defineProperty(t,"stringShorten",{enumerable:!0,get:function(){return o.stringShorten}}),Object.defineProperty(t,"stringToHex",{enumerable:!0,get:function(){return a.stringToHex}}),Object.defineProperty(t,"stringToU8a",{enumerable:!0,get:function(){return s.stringToU8a}}),Object.defineProperty(t,"stringUpperFirst",{enumerable:!0,get:function(){return i.stringUpperFirst}});var r=n(3402),i=n(3414),o=n(2),a=n(5962),s=n(3079)},3414:(e,t)=>{"use strict";function n(e){return t=>t?e(t[0])+t.slice(1):""}Object.defineProperty(t,"__esModule",{value:!0}),t.stringUpperFirst=t.stringLowerFirst=void 0;const r=n((e=>e.toLowerCase()));t.stringLowerFirst=r;const i=n((e=>e.toUpperCase()));t.stringUpperFirst=i},2:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringShorten=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:6;return e.length<=2+2*t?e.toString():`${e.substr(0,t)}…${e.slice(-t)}`}},5962:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringToHex=function(e){return(0,r.u8aToHex)((0,i.stringToU8a)(e))};var r=n(5626),i=n(3079)},3079:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringToU8a=function(e){return e?r.encode(e.toString()):new Uint8Array};const r=new(n(9778).TextEncoder)},6841:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stringify=function(e,t){return JSON.stringify(e,i,t)};var r=n(4052);function i(e,t){return(0,r.isBigInt)(t)?t.toString():t}},507:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aCmp=function(e,t){const n=(0,r.u8aToU8a)(e),i=(0,r.u8aToU8a)(t);let o=0;for(;;){const e=o>=n.length,t=o>=i.length;if(e&&t)return 0;if(e)return-1;if(t)return 1;if(n[o]!==i[o])return n[o]>i[o]?1:-1;o++}};var r=n(4644)},2175:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aConcat=function(){let e=0,t=0;const n=new Array(arguments.length);for(let t=0;t<arguments.length;t++)n[t]=(0,r.u8aToU8a)(t<0||arguments.length<=t?void 0:arguments[t]),e+=n[t].length;const i=new Uint8Array(e);for(let e=0;e<n.length;e++)i.set(n[e],t),t+=n[e].length;return i};var r=n(4644)},207:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aEmpty=function(e){for(let t=0;t<e.length;t++)if(e[t])return!1;return!0}},5069:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aEq=function(e,t){const n=(0,r.u8aToU8a)(e),i=(0,r.u8aToU8a)(t);if(n.length===i.length){const e=new DataView(n.buffer,n.byteOffset),t=new DataView(i.buffer,i.byteOffset),r=n.length%4,o=n.length-r;for(let n=0;n<o;n+=4)if(e.getUint32(n)!==t.getUint32(n))return!1;for(let e=o;e<n.length;e++)if(n[e]!==i[e])return!1;return!0}return!1};var r=n(4644)},7849:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aFixLength=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Math.ceil(t/8);if(-1===t||e.length===r)return e;if(e.length>r)return e.subarray(0,r);const i=new Uint8Array(r);return i.set(e,n?0:r-e.length),i}},63:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"U8A_WRAP_ETHEREUM",{enumerable:!0,get:function(){return p.U8A_WRAP_ETHEREUM}}),Object.defineProperty(t,"U8A_WRAP_POSTFIX",{enumerable:!0,get:function(){return p.U8A_WRAP_POSTFIX}}),Object.defineProperty(t,"U8A_WRAP_PREFIX",{enumerable:!0,get:function(){return p.U8A_WRAP_PREFIX}}),Object.defineProperty(t,"u8aCmp",{enumerable:!0,get:function(){return r.u8aCmp}}),Object.defineProperty(t,"u8aConcat",{enumerable:!0,get:function(){return i.u8aConcat}}),Object.defineProperty(t,"u8aEmpty",{enumerable:!0,get:function(){return o.u8aEmpty}}),Object.defineProperty(t,"u8aEq",{enumerable:!0,get:function(){return a.u8aEq}}),Object.defineProperty(t,"u8aFixLength",{enumerable:!0,get:function(){return s.u8aFixLength}}),Object.defineProperty(t,"u8aIsWrapped",{enumerable:!0,get:function(){return p.u8aIsWrapped}}),Object.defineProperty(t,"u8aSorted",{enumerable:!0,get:function(){return c.u8aSorted}}),Object.defineProperty(t,"u8aToBigInt",{enumerable:!0,get:function(){return f.u8aToBigInt}}),Object.defineProperty(t,"u8aToBn",{enumerable:!0,get:function(){return d.u8aToBn}}),Object.defineProperty(t,"u8aToBuffer",{enumerable:!0,get:function(){return u.u8aToBuffer}}),Object.defineProperty(t,"u8aToHex",{enumerable:!0,get:function(){return l.u8aToHex}}),Object.defineProperty(t,"u8aToString",{enumerable:!0,get:function(){return h.u8aToString}}),Object.defineProperty(t,"u8aToU8a",{enumerable:!0,get:function(){return b.u8aToU8a}}),Object.defineProperty(t,"u8aUnwrapBytes",{enumerable:!0,get:function(){return p.u8aUnwrapBytes}}),Object.defineProperty(t,"u8aWrapBytes",{enumerable:!0,get:function(){return p.u8aWrapBytes}});var r=n(507),i=n(2175),o=n(207),a=n(5069),s=n(7849),c=n(9001),f=n(3592),d=n(4802),u=n(6462),l=n(5626),h=n(4540),b=n(4644),p=n(6795)},9001:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aSorted=function(e){return e.sort(r.u8aCmp)};var r=n(507)},3592:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToBigInt=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e||!e.length)return BigInt(0);const{isLe:n,isNegative:o}=(0,i.objectSpread)({isLe:!0,isNegative:!1},t),a=n?e.reverse():e;return o?c(s(a))*-r._1n-r._1n:c(a)};var r=n(9717),i=n(2378);const o=(0,r._n)(256),a=(0,r._n)(65536);function s(e){const t=new Uint8Array(e.length),n=new DataView(e.buffer,e.byteOffset),r=new DataView(t.buffer),i=e.length%2,o=e.length-i;for(let e=0;e<o;e+=2)r.setUint16(e,65535^n.getUint16(e));return i&&r.setUint8(o,255^n.getUint8(o)),t}function c(e){const t=new DataView(e.buffer,e.byteOffset),n=e.length%2,r=e.length-n;let i=BigInt(0);for(let e=0;e<r;e+=2)i=i*a+BigInt(t.getUint16(e));return n&&(i=i*o+BigInt(t.getUint8(r))),i}},4802:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToBn=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o;return(0,r.hexToBn)((0,i.u8aToHex)(e),t)};var r=n(4325),i=n(5626);const o={isLe:!0,isNegative:!1}},6462:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToBuffer=function(e){return Buffer.from(e||[])}},5626:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToHex=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Math.ceil(t/8);return`${n?"0x":""}${e&&e.length?r>0&&e.length>r?`${i(e.subarray(0,r/2))}…${i(e.subarray(e.length-r/2))}`:i(e):""}`};var r=n(1689);function i(e){const t=e.length%2,n=e.length-t,i=new DataView(e.buffer,e.byteOffset);let o="";for(let e=0;e<n;e+=2)o+=r.U16_TO_HEX[i.getUint16(e)];return t&&(o+=r.U8_TO_HEX[i.getUint8(n)]),o}},4540:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToString=function(e){return null!=e&&e.length?r.decode(e):""};const r=new(n(174).TextDecoder)("utf-8")},4644:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.u8aToU8a=function(e){return e?(0,a.isHex)(e)?(0,i.hexToU8a)(e):(0,s.isString)(e)?(0,f.stringToU8a)(e):Array.isArray(e)||(0,o.isBuffer)(e)?new Uint8Array(e):((0,r.assert)((0,c.isU8a)(e),(()=>`Unable to convert ${e.toString()} (typeof ${typeof e}) to a Uint8Array`)),e):new Uint8Array};var r=n(7146),i=n(9808),o=n(4731),a=n(6419),s=n(6227),c=n(2423),f=n(3079)},6795:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.U8A_WRAP_PREFIX=t.U8A_WRAP_POSTFIX=t.U8A_WRAP_ETHEREUM=void 0,t.u8aIsWrapped=d,t.u8aUnwrapBytes=function(e){const t=(0,o.u8aToU8a)(e);return d(t,!1)?t.subarray(s.length,t.length-c.length):t},t.u8aWrapBytes=function(e){const t=(0,o.u8aToU8a)(e);return d(t,!0)?t:(0,r.u8aConcat)(s,t,c)};var r=n(2175),i=n(5069),o=n(4644);const a=(0,o.u8aToU8a)("Ethereum Signed Message:\n");t.U8A_WRAP_ETHEREUM=a;const s=(0,o.u8aToU8a)("<Bytes>");t.U8A_WRAP_PREFIX=s;const c=(0,o.u8aToU8a)("</Bytes>");t.U8A_WRAP_POSTFIX=c;const f=s.length+c.length;function d(e,t){return e.length>=f&&(0,i.u8aEq)(e.subarray(0,s.length),s)&&(0,i.u8aEq)(e.slice(-c.length),c)||t&&e.length>=a.length&&(0,i.u8aEq)(e.subarray(0,a.length),a)}},6883:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.detectPackage=function(e,t){let{name:n,version:r}=e,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];(0,a.assert)(n.startsWith("@polkadot"),(()=>`Invalid package descriptor ${n}`));const o=c(n);if(o.push({path:l(t),version:r}),1!==o.length)console.warn(`${n} has multiple versions, ensure that there is only one installed.\n${s}\n${u(o)}`);else{const e=i.filter((e=>e&&e.version!==r));e.length&&console.warn(`${n} requires direct dependencies exactly matching version ${r}.\n${s}\n${d(e)}`)}};var r=n(6779),i=n(8178),o=n(6227),a=n(7146);const s="Either remove and explicitly install matching versions or dedupe using your package manager.\nThe following conflicting packages were found:";function c(e){const t=r.xglobal;return t.__polkadotjs||(t.__polkadotjs={}),t.__polkadotjs[e]||(t.__polkadotjs[e]=[]),t.__polkadotjs[e]}function f(e){let t=0;for(const{version:n}of e)t=Math.max(t,n.length);return t}function d(e){const t=f(e);return e.map((e=>{let{name:n,version:r}=e;return`\t${r.padEnd(t)}\t${n}`})).join("\n")}function u(e){const t=e.map((e=>(0,o.isString)(e)?{version:e}:e)),n=f(t);return t.map((e=>{let{path:t,version:r}=e;return`\t${r.padEnd(n)}\t${!t||t.length<5?"<unknown>":t}`})).join("\n")}function l(e){if((0,i.isFunction)(e))try{return e()||""}catch(e){return""}return e||""}},9867:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.asmJsInit=void 0,t.asmJsInit=null},303:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/wasm-crypto-asmjs",version:"4.4.1"}},3829:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.toByteArray=function(e){const[t,n]=function(e){const t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");const n=e.indexOf("=");return-1===n?[t,0]:[n,4-n%4]}(e),r=new Uint8Array(3*(t+n)/4-n);let o,a,s=0;const c=n>0?t-4:t;for(o=0;o<c;o+=4)a=i[e.charCodeAt(o)]<<18|i[e.charCodeAt(o+1)]<<12|i[e.charCodeAt(o+2)]<<6|i[e.charCodeAt(o+3)],r[s++]=a>>16&255,r[s++]=a>>8&255,r[s++]=255&a;return 2===n?(a=i[e.charCodeAt(o)]<<2|i[e.charCodeAt(o+1)]>>4,r[s++]=255&a):1===n&&(a=i[e.charCodeAt(o)]<<10|i[e.charCodeAt(o+1)]<<4|i[e.charCodeAt(o+2)]>>2,r[s++]=a>>8&255,r[s++]=255&a),r};const n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r=[],i=[];for(let e=0;e<n.length;++e)r[e]=n[e],i[n.charCodeAt(e)]=e;i["-".charCodeAt(0)]=62,i["_".charCodeAt(0)]=63},8303:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sizeUncompressed=t.sizeCompressed=t.bytes=void 0;var r=n(1218);const i=r.bytes;t.bytes=i;const o=r.sizeCompressed;t.sizeCompressed=o;const a=r.sizeUncompressed;t.sizeUncompressed=a},1218:e=>{e.exports={bytes:"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",sizeCompressed:153363,sizeUncompressed:301802}},282:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wasmBytes=void 0;var r=n(3829),i=n(8303);const o=(0,n(8116).unzlibSync)((0,r.toByteArray)(i.bytes),new Uint8Array(i.sizeUncompressed));t.wasmBytes=o},8116:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.unzlibSync=function(e,t){return((e,t,c)=>{const d=!c||c.i;c||(c={});const l=e.length,b=!t||!d;t||(t=new n(3*l));const p=e=>{let r=t.length;if(e>r){const i=new n(Math.max(r<<1,e));i.set(t),t=i}};let x=c.f||0,M=c.p||0,O=c.b||0,j=c.l,k=c.d,A=c.m,T=c.n;if(x&&!j)return t;const E=l<<3;do{if(!j){c.f=x=m(e,M,1);const r=m(e,M+1,3);if(M+=3,!r){const n=w(M)+4,r=e[n-4]|e[n-3]<<8,i=n+r;if(i>l){if(d)throw"unexpected EOF";break}b&&p(O+r),t.set(e.subarray(n,i),O),c.b=O+=r,c.p=M=i<<3;continue}if(1==r)j=y,k=v,A=9,T=5;else{if(2!=r)throw"invalid block type";{const t=m(e,M,31)+257,r=m(e,M+10,15)+4,i=t+m(e,M+5,31)+1;M+=14;const a=new n(i),s=new n(19);for(let t=0;t<r;++t)s[o[t]]=m(e,M+3*t,7);M+=3*r;const c=P(s),f=(1<<c)-1;if(!d&&M+i*(c+7)>E)break;const u=h(s,c,1);for(let t=0;t<i;){const n=u[m(e,M,f)];M+=15&n;const r=n>>>4;if(r<16)a[t++]=r;else{let n=0,i=0;for(16==r?(i=3+m(e,M,3),M+=2,n=a[t-1]):17==r?(i=3+m(e,M,7),M+=3):18==r&&(i=11+m(e,M,127),M+=7);i--;)a[t++]=n}}const l=a.subarray(0,t),b=a.subarray(t);A=P(l),T=P(b),j=h(l,A,1),k=h(b,T,1)}}if(M>E)throw"unexpected EOF"}b&&p(O+131072);const r=(1<<A)-1,i=(1<<T)-1,z=A+T+18;for(;d||M+z<E;){const n=j[g(e,M)&r],o=n>>>4;if(M+=15&n,M>E)throw"unexpected EOF";if(!n)throw"invalid length/literal";if(o<256)t[O++]=o;else{if(256==o){j=void 0;break}{let n=o-254;if(o>264){const t=o-257,r=a[t];n=m(e,M,(1<<r)-1)+f[t],M+=r}const r=k[g(e,M)&i],c=r>>>4;if(!r)throw"invalid distance";M+=15&r;let d=u[c];if(c>3){const t=s[c];d+=g(e,M)&(1<<t)-1,M+=t}if(M>E)throw"unexpected EOF";b&&p(O+131072);const l=O+n;for(;O<l;O+=4)t[O]=t[O-d],t[O+1]=t[O+1-d],t[O+2]=t[O+2-d],t[O+3]=t[O+3-d];O=l}}}c.l=j,c.p=M,c.b=O,j&&(x=1,c.m=A,c.d=k,c.n=T)}while(!x);return O==t.length?t:((e,t,o)=>{(null==t||t<0)&&(t=0),(null==o||o>e.length)&&(o=e.length);const a=new(e instanceof r?r:e instanceof i?i:n)(o-t);return a.set(e.subarray(t,o)),a})(t,0,O)})(((e=>{if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"})(e),e.subarray(2,-4)),t)};const n=Uint8Array,r=Uint16Array,i=Uint32Array,o=new n([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),a=new n([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),s=new n([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),c=(e,t)=>{const n=new r(31);for(let r=0;r<31;++r)n[r]=t+=1<<e[r-1];const o=new i(n[30]);for(let e=1;e<30;++e)for(let t=n[e];t<n[e+1];++t)o[t]=t-n[e]<<5|e;return[n,o]},[f,d]=c(a,2);f[28]=258,d[258]=28;const[u]=c(s,0),l=new r(32768);for(let e=0;e<32768;++e){let t=(43690&e)>>>1|(21845&e)<<1;t=(52428&t)>>>2|(13107&t)<<2,t=(61680&t)>>>4|(3855&t)<<4,l[e]=((65280&t)>>>8|(255&t)<<8)>>>1}const h=(e,t,n)=>{const i=e.length;let o=0;const a=new r(t);for(;o<i;++o)++a[e[o]-1];const s=new r(t);for(o=0;o<t;++o)s[o]=s[o-1]+a[o-1]<<1;let c;if(n){c=new r(1<<t);const n=15-t;for(o=0;o<i;++o)if(e[o]){const r=o<<4|e[o],i=t-e[o];let a=s[e[o]-1]++<<i;for(const e=a|(1<<i)-1;a<=e;++a)c[l[a]>>>n]=r}}else for(c=new r(i),o=0;o<i;++o)c[o]=l[s[e[o]-1]++]>>>15-e[o];return c},b=new n(288);for(let e=0;e<144;++e)b[e]=8;for(let e=144;e<256;++e)b[e]=9;for(let e=256;e<280;++e)b[e]=7;for(let e=280;e<288;++e)b[e]=8;const p=new n(32);for(let e=0;e<32;++e)p[e]=5;const y=h(b,9,1),v=h(p,5,1),m=(e,t,n)=>{const r=t>>>3;return(e[r]|e[r+1]<<8)>>>(7&t)&n},g=(e,t)=>{const n=t>>>3;return(e[n]|e[n+1]<<8|e[n+2]<<16)>>>(7&t)},w=e=>(e>>>3)+(7&e&&1),P=e=>{let t=e[0];for(let n=1;n<e.length;++n)e[n]>t&&(t=e[n]);return t}},2176:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/wasm-crypto-wasm",version:"4.4.1"}},1910:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.allocString=function(e){return d((0,r.stringToU8a)(e))},t.allocU8a=d,t.getInt32=s,t.getString=function(e,t){return(0,r.u8aToString)(f(e,t))},t.getU8a=f,t.getUint8=c,t.getWasm=function(){return i},t.initWasm=async function(e,t,n){try{(0,r.assert)("undefined"!=typeof WebAssembly&&e&&e.length,"WebAssembly is not available in your environment");const t=await WebAssembly.instantiate(e,{wbg:n});i=t.instance.exports}catch(e){t?i=t(n):(console.error("FATAL: Unable to initialize @polkadot/wasm-crypto"),console.error(e),i=null)}},t.resultString=function(){return(0,r.u8aToString)(u())},t.resultU8a=u,t.withWasm=function(e){return function(){return(0,r.assert)(i,"The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces."),e(i)(...arguments)}};var r=n(9215);let i=null,o=null,a=null;function s(){return null!==o&&o.buffer===i.memory.buffer||(o=new Int32Array(i.memory.buffer)),o}function c(){return null!==a&&a.buffer===i.memory.buffer||(a=new Uint8Array(i.memory.buffer)),a}function f(e,t){return c().subarray(e/1,e/1+t)}function d(e){const t=i.__wbindgen_malloc(1*e.length);return c().set(e,t/1),[t,e.length]}function u(){const e=s()[2],t=s()[3],n=f(e,t).slice();return i.__wbindgen_free(e,1*t),n}},8391:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hmacSha512=t.hmacSha256=t.ed25519Verify=t.ed25519Sign=t.ed25519KeypairFromSeed=t.blake2b=t.bip39Validate=t.bip39ToSeed=t.bip39ToMiniSecret=t.bip39ToEntropy=t.bip39Generate=void 0,t.isReady=B,t.keccak512=t.keccak256=void 0,Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return s.packageInfo}}),t.vrfVerify=t.vrfSign=t.twox=t.sr25519Verify=t.sr25519Sign=t.sr25519KeypairFromSeed=t.sr25519DerivePublicSoft=t.sr25519DeriveKeypairSoft=t.sr25519DeriveKeypairHard=t.sr25519Agree=t.sha512=t.sha256=t.scrypt=t.pbkdf2=void 0,t.waitReady=function(){return f.then((()=>B()))};var r=n(9867),i=n(282),o=n(1910),a=function(e,t){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var n=c(t);if(n&&n.has(e))return n.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,n&&n.set(e,r),r}(n(1244)),s=n(7515);function c(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(c=function(e){return e?n:t})(e)}const f=(0,o.initWasm)(i.wasmBytes,r.asmJsInit,a).catch((()=>null)),d=(0,o.withWasm)((e=>t=>(e.ext_bip39_generate(8,t),(0,o.resultString)())));t.bip39Generate=d;const u=(0,o.withWasm)((e=>t=>{const[n,r]=(0,o.allocString)(t);return e.ext_bip39_to_entropy(8,n,r),(0,o.resultU8a)()}));t.bip39ToEntropy=u;const l=(0,o.withWasm)((e=>(t,n)=>{const[r,i]=(0,o.allocString)(t),[a,s]=(0,o.allocString)(n);return e.ext_bip39_to_mini_secret(8,r,i,a,s),(0,o.resultU8a)()}));t.bip39ToMiniSecret=l;const h=(0,o.withWasm)((e=>(t,n)=>{const[r,i]=(0,o.allocString)(t),[a,s]=(0,o.allocString)(n);return e.ext_bip39_to_seed(8,r,i,a,s),(0,o.resultU8a)()}));t.bip39ToSeed=h;const b=(0,o.withWasm)((e=>t=>{const[n,r]=(0,o.allocString)(t);return 0!==e.ext_bip39_validate(n,r)}));t.bip39Validate=b;const p=(0,o.withWasm)((e=>t=>{const[n,r]=(0,o.allocU8a)(t);return e.ext_ed_from_seed(8,n,r),(0,o.resultU8a)()}));t.ed25519KeypairFromSeed=p;const y=(0,o.withWasm)((e=>(t,n,r)=>{const[i,a]=(0,o.allocU8a)(t),[s,c]=(0,o.allocU8a)(n),[f,d]=(0,o.allocU8a)(r);return e.ext_ed_sign(8,i,a,s,c,f,d),(0,o.resultU8a)()}));t.ed25519Sign=y;const v=(0,o.withWasm)((e=>(t,n,r)=>{const[i,a]=(0,o.allocU8a)(t),[s,c]=(0,o.allocU8a)(n),[f,d]=(0,o.allocU8a)(r);return 0!==e.ext_ed_verify(i,a,s,c,f,d)}));t.ed25519Verify=v;const m=(0,o.withWasm)((e=>(t,n)=>{const[r,i]=(0,o.allocU8a)(t),[a,s]=(0,o.allocU8a)(n);return e.ext_sr_derive_keypair_hard(8,r,i,a,s),(0,o.resultU8a)()}));t.sr25519DeriveKeypairHard=m;const g=(0,o.withWasm)((e=>(t,n)=>{const[r,i]=(0,o.allocU8a)(t),[a,s]=(0,o.allocU8a)(n);return e.ext_sr_derive_keypair_soft(8,r,i,a,s),(0,o.resultU8a)()}));t.sr25519DeriveKeypairSoft=g;const w=(0,o.withWasm)((e=>(t,n)=>{const[r,i]=(0,o.allocU8a)(t),[a,s]=(0,o.allocU8a)(n);return e.ext_sr_derive_public_soft(8,r,i,a,s),(0,o.resultU8a)()}));t.sr25519DerivePublicSoft=w;const P=(0,o.withWasm)((e=>t=>{const[n,r]=(0,o.allocU8a)(t);return e.ext_sr_from_seed(8,n,r),(0,o.resultU8a)()}));t.sr25519KeypairFromSeed=P;const x=(0,o.withWasm)((e=>(t,n,r)=>{const[i,a]=(0,o.allocU8a)(t),[s,c]=(0,o.allocU8a)(n),[f,d]=(0,o.allocU8a)(r);return e.ext_sr_sign(8,i,a,s,c,f,d),(0,o.resultU8a)()}));t.sr25519Sign=x;const M=(0,o.withWasm)((e=>(t,n,r)=>{const[i,a]=(0,o.allocU8a)(t),[s,c]=(0,o.allocU8a)(n),[f,d]=(0,o.allocU8a)(r);return 0!==e.ext_sr_verify(i,a,s,c,f,d)}));t.sr25519Verify=M;const O=(0,o.withWasm)((e=>(t,n)=>{const[r,i]=(0,o.allocU8a)(t),[a,s]=(0,o.allocU8a)(n);return e.ext_sr_agree(8,r,i,a,s),(0,o.resultU8a)()}));t.sr25519Agree=O;const j=(0,o.withWasm)((e=>(t,n,r,i)=>{const[a,s]=(0,o.allocU8a)(t),[c,f]=(0,o.allocU8a)(n),[d,u]=(0,o.allocU8a)(r),[l,h]=(0,o.allocU8a)(i);return e.ext_vrf_sign(8,a,s,c,f,d,u,l,h),(0,o.resultU8a)()}));t.vrfSign=j;const k=(0,o.withWasm)((e=>(t,n,r,i,a)=>{const[s,c]=(0,o.allocU8a)(t),[f,d]=(0,o.allocU8a)(n),[u,l]=(0,o.allocU8a)(r),[h,b]=(0,o.allocU8a)(i),[p,y]=(0,o.allocU8a)(a);return 0!==e.ext_vrf_verify(s,c,f,d,u,l,h,b,p,y)}));t.vrfVerify=k;const A=(0,o.withWasm)((e=>(t,n,r)=>{const[i,a]=(0,o.allocU8a)(t),[s,c]=(0,o.allocU8a)(n);return e.ext_blake2b(8,i,a,s,c,r),(0,o.resultU8a)()}));t.blake2b=A;const T=(0,o.withWasm)((e=>(t,n)=>{const[r,i]=(0,o.allocU8a)(t),[a,s]=(0,o.allocU8a)(n);return e.ext_hmac_sha256(8,r,i,a,s),(0,o.resultU8a)()}));t.hmacSha256=T;const E=(0,o.withWasm)((e=>(t,n)=>{const[r,i]=(0,o.allocU8a)(t),[a,s]=(0,o.allocU8a)(n);return e.ext_hmac_sha512(8,r,i,a,s),(0,o.resultU8a)()}));t.hmacSha512=E;const z=(0,o.withWasm)((e=>t=>{const[n,r]=(0,o.allocU8a)(t);return e.ext_keccak256(8,n,r),(0,o.resultU8a)()}));t.keccak256=z;const L=(0,o.withWasm)((e=>t=>{const[n,r]=(0,o.allocU8a)(t);return e.ext_keccak512(8,n,r),(0,o.resultU8a)()}));t.keccak512=L;const N=(0,o.withWasm)((e=>(t,n,r)=>{const[i,a]=(0,o.allocU8a)(t),[s,c]=(0,o.allocU8a)(n);return e.ext_pbkdf2(8,i,a,s,c,r),(0,o.resultU8a)()}));t.pbkdf2=N;const S=(0,o.withWasm)((e=>(t,n,r,i,a)=>{const[s,c]=(0,o.allocU8a)(t),[f,d]=(0,o.allocU8a)(n);return e.ext_scrypt(8,s,c,f,d,r,i,a),(0,o.resultU8a)()}));t.scrypt=S;const U=(0,o.withWasm)((e=>t=>{const[n,r]=(0,o.allocU8a)(t);return e.ext_sha256(8,n,r),(0,o.resultU8a)()}));t.sha256=U;const H=(0,o.withWasm)((e=>t=>{const[n,r]=(0,o.allocU8a)(t);return e.ext_sha512(8,n,r),(0,o.resultU8a)()}));t.sha512=H;const I=(0,o.withWasm)((e=>(t,n)=>{const[r,i]=(0,o.allocU8a)(t);return e.ext_twox(8,r,i,n),(0,o.resultU8a)()}));function B(){return!!(0,o.getWasm)()}t.twox=I},173:(e,t,n)=>{"use strict";var r=n(9215),i=n(303),o=n(2176),a=n(7515);(0,r.detectPackage)(a.packageInfo,"/",[i.packageInfo,o.packageInfo])},1244:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.__wbg_crypto_968f1772287e2df0=function(e){return d(o)},t.__wbg_getRandomValues_a3d34b4fee3c2869=function(e){return d(o.getRandomValues)},t.__wbg_getRandomValues_f5e14ab7ac8e995d=function(e,t,n){o.getRandomValues((0,i.getU8a)(t,n))},t.__wbg_randomFillSync_d5bd2d655fdf256a=function(e,t,n){throw new Error("randomFillsync is not available")},t.__wbg_require_604837428532a733=function(e,t){throw new Error(`Unable to require ${(0,i.getString)(e,t)}`)},t.__wbg_self_1b7a39e3a92c949c=function(){return d(a)},t.__wbindgen_is_undefined=function(e){return void 0===f(e)},t.__wbindgen_object_drop_ref=function(e){!function(e){f(e);!function(e){e<36||(s[e]=c,c=e)}(e)}(e)},t.abort=function(){throw new Error("abort")};var r=n(4081),i=n(1910);const o={getRandomValues:r.getRandomValues},a={crypto:o},s=new Array(32).fill(void 0).concat(void 0,null,!0,!1);let c=s.length;function f(e){return s[e]}function d(e){c===s.length&&s.push(s.length+1);const t=c;return c=s[t],s[t]=e,t}},223:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(173);var r=n(8391);Object.keys(r).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===r[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return r[e]}}))}))},7515:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/wasm-crypto",version:"4.4.1"}},6779:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return r.packageInfo}}),t.xglobal=void 0;var r=n(3131);const i="undefined"!=typeof globalThis?globalThis:void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this");t.xglobal=i},3131:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/x-global",version:"8.0.5"}},4081:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getRandomValues=function(e){return crypto.getRandomValues(e)},Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return r.packageInfo}});var r=n(6038)},6038:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/x-randomvalues",version:"8.0.5"}},174:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoder=void 0,Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return o.packageInfo}});var r=n(6779),i=n(6259),o=n(334);const a=void 0===r.xglobal.TextDecoder?i.TextDecoder:r.xglobal.TextDecoder;t.TextDecoder=a},6259:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextDecoder=void 0,t.TextDecoder=class{constructor(e){}decode(e){let t="";for(let n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return t}}},334:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/x-textdecoder",version:"8.0.5"}},9778:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextEncoder=void 0,Object.defineProperty(t,"packageInfo",{enumerable:!0,get:function(){return o.packageInfo}});var r=n(6779),i=n(7967),o=n(1925);const a=void 0===r.xglobal.TextEncoder?i.TextEncoder:r.xglobal.TextEncoder;t.TextEncoder=a},7967:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TextEncoder=void 0,t.TextEncoder=class{encode(e){const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}}},1925:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.packageInfo=void 0,t.packageInfo={name:"@polkadot/x-textencoder",version:"8.0.5"}},8597:e=>{"use strict";e.exports={i8:"6.5.4"}}},r={};function i(e){var t=r[e];if(void 0!==t){if(void 0!==t.error)throw t.error;return t.exports}var o=r[e]={id:e,loaded:!1,exports:{}};try{var a={id:e,module:o,factory:n[e],require:i};i.i.forEach((function(e){e(a)})),o=a.module,a.factory.call(o.exports,o,o.exports,a.require)}catch(e){throw o.error=e,e}return o.loaded=!0,o.exports}i.m=n,i.c=r,i.i=[],i.hu=e=>e+"."+i.h()+".hot-update.js",i.hmrF=()=>"main."+i.h()+".hot-update.json",i.h=()=>"9631f867d55f6ee71161",i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="polkadotjs_util:",i.l=(n,r,o,a)=>{if(e[n])e[n].push(r);else{var s,c;if(void 0!==o)for(var f=document.getElementsByTagName("script"),d=0;d<f.length;d++){var u=f[d];if(u.getAttribute("src")==n||u.getAttribute("data-webpack")==t+o){s=u;break}}s||(c=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.setAttribute("data-webpack",t+o),s.src=n),e[n]=[r];var l=(t,r)=>{s.onerror=s.onload=null,clearTimeout(h);var i=e[n];if(delete e[n],s.parentNode&&s.parentNode.removeChild(s),i&&i.forEach((e=>e(r))),t)return t(r)},h=setTimeout(l.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=l.bind(null,s.onerror),s.onload=l.bind(null,s.onload),c&&document.head.appendChild(s)}},i.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e,t,n,r,o={},a=i.c,s=[],c=[],f="idle";function d(e){f=e;for(var t=[],n=0;n<c.length;n++)t[n]=c[n].call(null,e);return Promise.all(t)}function u(e){if(0===t.length)return e();var n=t;return t=[],Promise.all(n).then((function(){return u(e)}))}function l(e){if("idle"!==f)throw new Error("check() is only allowed in idle status");return d("check").then(i.hmrM).then((function(r){return r?d("prepare").then((function(){var o=[];return t=[],n=[],Promise.all(Object.keys(i.hmrC).reduce((function(e,t){return i.hmrC[t](r.c,r.r,r.m,e,n,o),e}),[])).then((function(){return u((function(){return e?b(e):d("ready").then((function(){return o}))}))}))})):d(p()?"ready":"idle").then((function(){return null}))}))}function h(e){return"ready"!==f?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status")})):b(e)}function b(e){e=e||{},p();var t=n.map((function(t){return t(e)}));n=void 0;var i=t.map((function(e){return e.error})).filter(Boolean);if(i.length>0)return d("abort").then((function(){throw i[0]}));var o=d("dispose");t.forEach((function(e){e.dispose&&e.dispose()}));var a,s=d("apply"),c=function(e){a||(a=e)},f=[];return t.forEach((function(e){if(e.apply){var t=e.apply(c);if(t)for(var n=0;n<t.length;n++)f.push(t[n])}})),Promise.all([o,s]).then((function(){return a?d("fail").then((function(){throw a})):r?b(e).then((function(e){return f.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e})):d("idle").then((function(){return f}))}))}function p(){if(r)return n||(n=[]),Object.keys(i.hmrI).forEach((function(e){r.forEach((function(t){i.hmrI[e](t,n)}))})),r=void 0,!0}i.hmrD=o,i.i.push((function(b){var p,y,v,m,g=b.module,w=function(n,r){var i=a[r];if(!i)return n;var o=function(t){if(i.hot.active){if(a[t]){var o=a[t].parents;-1===o.indexOf(r)&&o.push(r)}else s=[r],e=t;-1===i.children.indexOf(t)&&i.children.push(t)}else console.warn("[HMR] unexpected require("+t+") from disposed module "+r),s=[];return n(t)},c=function(e){return{configurable:!0,enumerable:!0,get:function(){return n[e]},set:function(t){n[e]=t}}};for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&"e"!==l&&Object.defineProperty(o,l,c(l));return o.e=function(e){return function(e){switch(f){case"ready":return d("prepare"),t.push(e),u((function(){return d("ready")})),e;case"prepare":return t.push(e),e;default:return e}}(n.e(e))},o}(b.require,b.id);g.hot=(p=b.id,y=g,m={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:v=e!==p,_requireSelf:function(){s=y.parents.slice(),e=v?void 0:p,i(p)},active:!0,accept:function(e,t,n){if(void 0===e)m._selfAccepted=!0;else if("function"==typeof e)m._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var r=0;r<e.length;r++)m._acceptedDependencies[e[r]]=t||function(){},m._acceptedErrorHandlers[e[r]]=n;else m._acceptedDependencies[e]=t||function(){},m._acceptedErrorHandlers[e]=n},decline:function(e){if(void 0===e)m._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var t=0;t<e.length;t++)m._declinedDependencies[e[t]]=!0;else m._declinedDependencies[e]=!0},dispose:function(e){m._disposeHandlers.push(e)},addDisposeHandler:function(e){m._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=m._disposeHandlers.indexOf(e);t>=0&&m._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,f){case"idle":n=[],Object.keys(i.hmrI).forEach((function(e){i.hmrI[e](p,n)})),d("ready");break;case"ready":Object.keys(i.hmrI).forEach((function(e){i.hmrI[e](p,n)}));break;case"prepare":case"check":case"dispose":case"apply":(r=r||[]).push(p)}},check:l,apply:h,status:function(e){if(!e)return f;c.push(e)},addStatusHandler:function(e){c.push(e)},removeStatusHandler:function(e){var t=c.indexOf(e);t>=0&&c.splice(t,1)},data:o[p]},e=void 0,m),g.parents=s,g.children=[],s=[],b.require=w})),i.hmrC={},i.hmrI={}})(),(()=>{var e;i.g.importScripts&&(e=i.g.location+"");var t=i.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=e})(),(()=>{var e,t,n,r,o=i.hmrS_jsonp=i.hmrS_jsonp||{179:0},a={};function s(e){return new Promise(((t,n)=>{a[e]=t;var r=i.p+i.hu(e),o=new Error;i.l(r,(t=>{if(a[e]){a[e]=void 0;var r=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src;o.message="Loading hot update chunk "+e+" failed.\n("+r+": "+i+")",o.name="ChunkLoadError",o.type=r,o.request=i,n(o)}}))}))}function c(a){function s(e){for(var t=[e],n={},r=t.map((function(e){return{chain:[e],id:e}}));r.length>0;){var o=r.pop(),a=o.id,s=o.chain,f=i.c[a];if(f&&(!f.hot._selfAccepted||f.hot._selfInvalidated)){if(f.hot._selfDeclined)return{type:"self-declined",chain:s,moduleId:a};if(f.hot._main)return{type:"unaccepted",chain:s,moduleId:a};for(var d=0;d<f.parents.length;d++){var u=f.parents[d],l=i.c[u];if(l){if(l.hot._declinedDependencies[a])return{type:"declined",chain:s.concat([u]),moduleId:a,parentId:u};-1===t.indexOf(u)&&(l.hot._acceptedDependencies[a]?(n[u]||(n[u]=[]),c(n[u],[a])):(delete n[u],t.push(u),r.push({chain:s.concat([u]),id:u})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];-1===e.indexOf(r)&&e.push(r)}}i.f&&delete i.f.jsonpHmr,e=void 0;var f={},d=[],u={},l=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var h in t)if(i.o(t,h)){var b,p=t[h],y=!1,v=!1,m=!1,g="";switch((b=p?s(h):{type:"disposed",moduleId:h}).chain&&(g="\nUpdate propagation: "+b.chain.join(" -> ")),b.type){case"self-declined":a.onDeclined&&a.onDeclined(b),a.ignoreDeclined||(y=new Error("Aborted because of self decline: "+b.moduleId+g));break;case"declined":a.onDeclined&&a.onDeclined(b),a.ignoreDeclined||(y=new Error("Aborted because of declined dependency: "+b.moduleId+" in "+b.parentId+g));break;case"unaccepted":a.onUnaccepted&&a.onUnaccepted(b),a.ignoreUnaccepted||(y=new Error("Aborted because "+h+" is not accepted"+g));break;case"accepted":a.onAccepted&&a.onAccepted(b),v=!0;break;case"disposed":a.onDisposed&&a.onDisposed(b),m=!0;break;default:throw new Error("Unexception type "+b.type)}if(y)return{error:y};if(v)for(h in u[h]=p,c(d,b.outdatedModules),b.outdatedDependencies)i.o(b.outdatedDependencies,h)&&(f[h]||(f[h]=[]),c(f[h],b.outdatedDependencies[h]));m&&(c(d,[b.moduleId]),u[h]=l)}t=void 0;for(var w,P=[],x=0;x<d.length;x++){var M=d[x],O=i.c[M];O&&(O.hot._selfAccepted||O.hot._main)&&u[M]!==l&&!O.hot._selfInvalidated&&P.push({module:M,require:O.hot._requireSelf,errorHandler:O.hot._selfAccepted})}return{dispose:function(){var e;n.forEach((function(e){delete o[e]})),n=void 0;for(var t,r=d.slice();r.length>0;){var a=r.pop(),s=i.c[a];if(s){var c={},u=s.hot._disposeHandlers;for(x=0;x<u.length;x++)u[x].call(null,c);for(i.hmrD[a]=c,s.hot.active=!1,delete i.c[a],delete f[a],x=0;x<s.children.length;x++){var l=i.c[s.children[x]];l&&(e=l.parents.indexOf(a))>=0&&l.parents.splice(e,1)}}}for(var h in f)if(i.o(f,h)&&(s=i.c[h]))for(w=f[h],x=0;x<w.length;x++)t=w[x],(e=s.children.indexOf(t))>=0&&s.children.splice(e,1)},apply:function(e){for(var t in u)i.o(u,t)&&(i.m[t]=u[t]);for(var n=0;n<r.length;n++)r[n](i);for(var o in f)if(i.o(f,o)){var s=i.c[o];if(s){w=f[o];for(var c=[],l=[],h=[],b=0;b<w.length;b++){var p=w[b],y=s.hot._acceptedDependencies[p],v=s.hot._acceptedErrorHandlers[p];if(y){if(-1!==c.indexOf(y))continue;c.push(y),l.push(v),h.push(p)}}for(var m=0;m<c.length;m++)try{c[m].call(null,w)}catch(t){if("function"==typeof l[m])try{l[m](t,{moduleId:o,dependencyId:h[m]})}catch(n){a.onErrored&&a.onErrored({type:"accept-error-handler-errored",moduleId:o,dependencyId:h[m],error:n,originalError:t}),a.ignoreErrored||(e(n),e(t))}else a.onErrored&&a.onErrored({type:"accept-errored",moduleId:o,dependencyId:h[m],error:t}),a.ignoreErrored||e(t)}}}for(var g=0;g<P.length;g++){var x=P[g],M=x.module;try{x.require(M)}catch(t){if("function"==typeof x.errorHandler)try{x.errorHandler(t,{moduleId:M,module:i.c[M]})}catch(n){a.onErrored&&a.onErrored({type:"self-accept-error-handler-errored",moduleId:M,error:n,originalError:t}),a.ignoreErrored||(e(n),e(t))}else a.onErrored&&a.onErrored({type:"self-accept-errored",moduleId:M,error:t}),a.ignoreErrored||e(t)}}return d}}}self.webpackHotUpdatepolkadotjs_util=(e,n,o)=>{for(var s in n)i.o(n,s)&&(t[s]=n[s]);o&&r.push(o),a[e]&&(a[e](),a[e]=void 0)},i.hmrI.jsonp=function(e,o){t||(t={},r=[],n=[],o.push(c)),i.o(t,e)||(t[e]=i.m[e])},i.hmrC.jsonp=function(a,f,d,u,l,h){l.push(c),e={},n=f,t=d.reduce((function(e,t){return e[t]=!1,e}),{}),r=[],a.forEach((function(t){i.o(o,t)&&void 0!==o[t]&&(u.push(s(t)),e[t]=!0)})),i.f&&(i.f.jsonpHmr=function(t,n){e&&!i.o(e,t)&&i.o(o,t)&&void 0!==o[t]&&(n.push(s(t)),e[t]=!0)})},i.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(i.p+i.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),i(3607)})();